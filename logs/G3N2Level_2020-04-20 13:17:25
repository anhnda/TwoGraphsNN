MPNNX
<models.trainG3N2Level.WrapperG3N2Level object at 0x7f25f305f390>
('Manual torch seed: ', 1772727637)
KFold: 1 x 10
('Optimizer: ', 'Adam')
class G3N2Level(torch.nn.Module):
    def __init__(self, outSize, layerType1=SAGEConv, layerType2=XSAGE, numNode=10000):
        super(G3N2Level, self).__init__()

        self.nodesEmbedding1 = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding1.weight.data.uniform_(0.001, 0.3)

        self.nodesEmbedding2 = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding2.weight.data.uniform_(0.001, 0.3)

        self.CONV_LAYER1 = layerType1
        self.convs1 = []
        self.pools1 = []

        self.CONV_LAYER2 = layerType2
        self.convs2 = []

        for i in range(config.N_LAYER_LEVEL_1):
            self.convs1.append(self.CONV_LAYER1(config.EMBED_DIM, config.EMBED_DIM))
            self.pools1.append(TopKPooling(config.EMBED_DIM, ratio=0.8))

        for i in range(config.N_LAYER_LEVEL_2):
            self.convs2.append(self.CONV_LAYER2(config.EMBED_DIM, config.EMBED_DIM))

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.lout1 = Linear(config.EMBED_DIM, config.EMBED_DIM)
        self.lout2 = Linear(config.EMBED_DIM, outSize)

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, graphBatch1, graph2):

        # Graphs at level 1

        xAtom, edge_index, batch = graphBatch1.x, graphBatch1.edge_index, graphBatch1.batch
        xAtom = self.nodesEmbedding1(xAtom)
        xAtom = xAtom.squeeze(1)

        xs = []
        for i in range(config.N_LAYER_LEVEL_1):
            xAtom = F.relu(self.convs1[i](xAtom, edge_index))
            # xAtom, edge_index, _, batch, _, _ = self.pools[i](xAtom, edge_index, None, batch)
            xi = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            xs.append(xi)

        xDrug = xs[-1]

        xDrug = self.lin1(xDrug)
        xDrug = F.relu(xDrug)

        # Initialize for level 2
        xDrugInit = xDrug.detach()
        self.setEmbedding(self.nodesEmbedding2, xDrugInit, xDrugInit.shape[0])

        # Update level 2
        x2, edges2 = graph2.x, graph2.edge_index

        x2 = self.nodesEmbedding2(x2)
        x2 = x2.squeeze()

        for i in range(config.N_LAYER_LEVEL_2):
            x2 = self.convs2[i](x2, edges2, xDrug)
            x2 = F.relu(x2)

        return x2

    def setEmbedding(self, embedding1, embedding2, size2):
        nDim = embedding2.shape[1]
        for i in range(size2):
            for j in range(nDim):
                embedding1.weight.data[i, j] = embedding2.data[i, j]

    def calOut(self, x, keyIds):
        o = x[keyIds]
        # o = self.linear1(o)
        # o = F.relu(o)
        o = self.lout2(o)
        # o = F.relu(o)
        return o

('Num Graph Layer: ', 3, 3)
('Layer TYPE:', <class 'torch_geometric.nn.conv.sage_conv.SAGEConv'>, <class 'models.g3n.XSAGE.XSAGE'>)
Training raw path: /home/anhnd/DTI Project/Codes/G3N/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
((646, 331), (646, 331), 16.794592, 59640.0)
('Error: ', tensor(0.2818, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.5089605422411632, 0.2867484312232965)
('Val: AUC, AUPR, Erros: ', 0.5089517066629025, 0.24090571771581398, 0.22198188)
('Test: AUC, AUPR, Erros: ', 0.5117548133319751, 0.2701544797065474, 0.24675995)
((646, 331), (646, 331), 61361.08, 59640.0)
('Error: ', tensor(0.1864, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.6820019829717283, 0.42604075966735)
('Val: AUC, AUPR, Erros: ', 0.7046263537309007, 0.39968793840416905, 0.16698276)
('Test: AUC, AUPR, Erros: ', 0.6850885076225218, 0.4097120808417411, 0.17897502)
((646, 331), (646, 331), 61571.066, 59640.0)
('Error: ', tensor(0.1730, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7247813864343015, 0.5381729351436176)
('Val: AUC, AUPR, Erros: ', 0.7335189694057527, 0.49940269574411694, 0.15723844)
('Test: AUC, AUPR, Erros: ', 0.7137174189822998, 0.49837206565918735, 0.17115833)
((646, 331), (646, 331), 60179.664, 59640.0)
('Error: ', tensor(0.1689, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7363544140417024, 0.5577339958114063)
('Val: AUC, AUPR, Erros: ', 0.7386358952778578, 0.514251766925889, 0.15361087)
('Test: AUC, AUPR, Erros: ', 0.7226724500140391, 0.5173256905114444, 0.16724901)
((646, 331), (646, 331), 60037.88, 59640.0)
('Error: ', tensor(0.1657, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7505556868531003, 0.571764599823898)
('Val: AUC, AUPR, Erros: ', 0.745448588710538, 0.5208093071782713, 0.15230772)
('Test: AUC, AUPR, Erros: ', 0.7337448089254595, 0.5292862020282054, 0.16448413)
((646, 331), (646, 331), 60233.895, 59640.0)
('Error: ', tensor(0.1627, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7615391561141371, 0.5869730612850897)
('Val: AUC, AUPR, Erros: ', 0.7488854686969305, 0.5256538384004796, 0.15163805)
('Test: AUC, AUPR, Erros: ', 0.7424521069175947, 0.5413395221599352, 0.16223243)
((646, 331), (646, 331), 59999.727, 59640.0)
('Error: ', tensor(0.1595, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7734033043182325, 0.6021425553139663)
('Val: AUC, AUPR, Erros: ', 0.7532266302367789, 0.5280399295118822, 0.15093072)
('Test: AUC, AUPR, Erros: ', 0.7528357024727564, 0.5551568199554413, 0.1598758)
((646, 331), (646, 331), 59858.695, 59640.0)
('Error: ', tensor(0.1561, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7856551548947958, 0.6185502348479714)
('Val: AUC, AUPR, Erros: ', 0.7584274852475115, 0.5309595340573764, 0.15018736)
('Test: AUC, AUPR, Erros: ', 0.7644094540393493, 0.5710233320510929, 0.15713502)
((646, 331), (646, 331), 60090.71, 59640.0)
('Error: ', tensor(0.1525, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.797158759210863, 0.6353442430797227)
('Val: AUC, AUPR, Erros: ', 0.7619997012610111, 0.5324965892473338, 0.15007745)
('Test: AUC, AUPR, Erros: ', 0.774503722308137, 0.5849562354104137, 0.15472892)
((646, 331), (646, 331), 60107.664, 59640.0)
('Error: ', tensor(0.1492, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8071699647880581, 0.6513487728004442)
('Val: AUC, AUPR, Erros: ', 0.7638094441727014, 0.5319504795610273, 0.15015937)
('Test: AUC, AUPR, Erros: ', 0.7817226236919328, 0.5948871829257816, 0.15301594)
((646, 331), (646, 331), 59912.098, 59640.0)
('Error: ', tensor(0.1464, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8153877680991758, 0.6645658911336203)
('Val: AUC, AUPR, Erros: ', 0.7630891306650402, 0.5281506162310458, 0.15082917)
('Test: AUC, AUPR, Erros: ', 0.7835383671305677, 0.5976745169739714, 0.15273903)
((646, 331), (646, 331), 59882.78, 59640.0)
('Error: ', tensor(0.1438, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.822660912128107, 0.6759978476885765)
('Val: AUC, AUPR, Erros: ', 0.7611003213306982, 0.5226022232338638, 0.15202273)
('Test: AUC, AUPR, Erros: ', 0.7823576546832719, 0.5961090049505818, 0.15344448)
((646, 331), (646, 331), 59915.555, 59640.0)
('Error: ', tensor(0.1414, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8292856271684649, 0.686646384252493)
('Val: AUC, AUPR, Erros: ', 0.7592742590798822, 0.5151566339882286, 0.15347666)
('Test: AUC, AUPR, Erros: ', 0.7798764105106508, 0.5924337905562895, 0.15472648)
((646, 331), (646, 331), 59888.867, 59640.0)
('Error: ', tensor(0.1392, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8356677237683166, 0.6965185105941962)
('Val: AUC, AUPR, Erros: ', 0.7577433110230697, 0.5071482477527705, 0.15521783)
('Test: AUC, AUPR, Erros: ', 0.7771861057396381, 0.5882703964983576, 0.15627651)
((646, 331), (646, 331), 59881.434, 59640.0)
('Error: ', tensor(0.1371, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8415846497618619, 0.7056254742633796)
('Val: AUC, AUPR, Erros: ', 0.756188448633869, 0.4982623854314564, 0.15735258)
('Test: AUC, AUPR, Erros: ', 0.7742645130049927, 0.5828167420241376, 0.15813178)
((646, 331), (646, 331), 59867.754, 59640.0)
('Error: ', tensor(0.1350, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8472165912645178, 0.7143593347010826)
('Val: AUC, AUPR, Erros: ', 0.7543408277792859, 0.48993040452147807, 0.15957925)
('Test: AUC, AUPR, Erros: ', 0.7719783985504381, 0.5767557040870636, 0.1599979)
((646, 331), (646, 331), 59449.36, 59640.0)
('Error: ', tensor(0.1330, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8526206815758677, 0.7228317287166582)
('Val: AUC, AUPR, Erros: ', 0.7526604752995684, 0.4829632966502757, 0.16156194)
('Test: AUC, AUPR, Erros: ', 0.7696546108400285, 0.5705043151896394, 0.16180387)
Train: 0.7972 0.6353
Test: 0.7745 0.5850
Training raw path: /home/anhnd/DTI Project/Codes/G3N/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
((646, 331), (646, 331), 329.9049, 59364.0)
('Error: ', tensor(0.2828, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.4763708418283278, 0.26543588976479404)
('Val: AUC, AUPR, Erros: ', 0.4785361344199493, 0.2606777446121143, 0.2573536)
('Test: AUC, AUPR, Erros: ', 0.47729925982618643, 0.2243444181094447, 0.22293593)
((646, 331), (646, 331), 62394.195, 59364.0)
('Error: ', tensor(0.1847, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.6888294595350808, 0.43804665341338594)
('Val: AUC, AUPR, Erros: ', 0.6916016776732683, 0.43959431808542193, 0.18137506)
('Test: AUC, AUPR, Erros: ', 0.7073167394101694, 0.41313510718892726, 0.16669543)
((646, 331), (646, 331), 61042.723, 59364.0)
('Error: ', tensor(0.1730, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7229983145216147, 0.5401434811859297)
('Val: AUC, AUPR, Erros: ', 0.7173926664542911, 0.5185108629452252, 0.1729418)
('Test: AUC, AUPR, Erros: ', 0.733138567745252, 0.49976725716170184, 0.15744096)
((646, 331), (646, 331), 59830.184, 59364.0)
('Error: ', tensor(0.1689, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7329062830781221, 0.5546883836821287)
('Val: AUC, AUPR, Erros: ', 0.7249594722067882, 0.5317113267841075, 0.169482)
('Test: AUC, AUPR, Erros: ', 0.736040332526735, 0.5098577817807426, 0.15381172)
((646, 331), (646, 331), 60667.777, 59364.0)
('Error: ', tensor(0.1666, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.743270898250358, 0.5654932876068988)
('Val: AUC, AUPR, Erros: ', 0.7318524136560222, 0.538981518815175, 0.16782011)
('Test: AUC, AUPR, Erros: ', 0.7409996302709156, 0.515806683137588, 0.15307485)
((646, 331), (646, 331), 60312.27, 59364.0)
('Error: ', tensor(0.1639, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7554776535991623, 0.5784992499626813)
('Val: AUC, AUPR, Erros: ', 0.7394326207489632, 0.5472078755710165, 0.1661251)
('Test: AUC, AUPR, Erros: ', 0.7469555564590376, 0.5230656861354768, 0.151796)
((646, 331), (646, 331), 60184.895, 59364.0)
('Error: ', tensor(0.1609, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7669327493805318, 0.5922483104488213)
('Val: AUC, AUPR, Erros: ', 0.7443525561860348, 0.5516875810833104, 0.1652724)
('Test: AUC, AUPR, Erros: ', 0.7510931240558361, 0.5277817999379385, 0.1510274)
((646, 331), (646, 331), 60017.39, 59364.0)
('Error: ', tensor(0.1578, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.778305244968551, 0.6074019394686898)
('Val: AUC, AUPR, Erros: ', 0.7464605574760546, 0.5505510935827607, 0.16511077)
('Test: AUC, AUPR, Erros: ', 0.7574186008052448, 0.5332739802594674, 0.14982785)
((646, 331), (646, 331), 60067.566, 59364.0)
('Error: ', tensor(0.1543, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7903714348005263, 0.624091031801413)
('Val: AUC, AUPR, Erros: ', 0.7496374775524028, 0.5491310941520987, 0.16493292)
('Test: AUC, AUPR, Erros: ', 0.7644168340631126, 0.5406605707209063, 0.1483526)
((646, 331), (646, 331), 60067.492, 59364.0)
('Error: ', tensor(0.1507, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8020975947984416, 0.6418695408999713)
('Val: AUC, AUPR, Erros: ', 0.7544412492695777, 0.5512455415601443, 0.16416012)
('Test: AUC, AUPR, Erros: ', 0.7704697953133404, 0.5476684613806029, 0.14715001)
((646, 331), (646, 331), 59715.34, 59364.0)
('Error: ', tensor(0.1472, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8120067765096068, 0.6584508412989196)
('Val: AUC, AUPR, Erros: ', 0.7576418750783915, 0.5580583311930725, 0.16335237)
('Test: AUC, AUPR, Erros: ', 0.7729190157006713, 0.5516467101455922, 0.1466971)
((646, 331), (646, 331), 59691.29, 59364.0)
('Error: ', tensor(0.1441, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.820743654724996, 0.6721717568386921)
('Val: AUC, AUPR, Erros: ', 0.7603017068268145, 0.56934222060073, 0.1620179)
('Test: AUC, AUPR, Erros: ', 0.7738187643199775, 0.5523799985755526, 0.1467729)
((646, 331), (646, 331), 59704.797, 59364.0)
('Error: ', tensor(0.1412, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8288938843269258, 0.6849996891415016)
('Val: AUC, AUPR, Erros: ', 0.7626814125519602, 0.5775831955013193, 0.16103934)
('Test: AUC, AUPR, Erros: ', 0.773910296213741, 0.5510427186373698, 0.1472634)
((646, 331), (646, 331), 59673.105, 59364.0)
('Error: ', tensor(0.1385, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8365113117039871, 0.6974631087805562)
('Val: AUC, AUPR, Erros: ', 0.7644833579141885, 0.5793831142251598, 0.1608353)
('Test: AUC, AUPR, Erros: ', 0.7730090146244099, 0.5460983129782012, 0.14834152)
((646, 331), (646, 331), 59659.363, 59364.0)
('Error: ', tensor(0.1358, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8436723585654069, 0.7092291074309102)
('Val: AUC, AUPR, Erros: ', 0.7655621623006498, 0.5789794633732471, 0.16107461)
('Test: AUC, AUPR, Erros: ', 0.7720424013454619, 0.5407742902003129, 0.14963284)
((646, 331), (646, 331), 59557.57, 59364.0)
('Error: ', tensor(0.1333, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8505326271004752, 0.7204612224192835)
('Val: AUC, AUPR, Erros: ', 0.7661175120186234, 0.5771194978687937, 0.16159643)
('Test: AUC, AUPR, Erros: ', 0.7710117836572729, 0.5352645605692667, 0.15120044)
((646, 331), (646, 331), 59590.508, 59364.0)
('Error: ', tensor(0.1308, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8569906178479412, 0.7308487325198083)
('Val: AUC, AUPR, Erros: ', 0.7654418740085366, 0.5713068948302371, 0.16280851)
('Test: AUC, AUPR, Erros: ', 0.7695341984810727, 0.529464946052752, 0.15309459)
Train: 0.8365 0.6975
Test: 0.7730 0.5461
Training raw path: /home/anhnd/DTI Project/Codes/G3N/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
((646, 331), (646, 331), -116.7931, 58006.0)
('Error: ', tensor(0.2750, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.5029636405991365, 0.28241407809135655)
('Val: AUC, AUPR, Erros: ', 0.5037749744504367, 0.2978748662620003, 0.2712254)
('Test: AUC, AUPR, Erros: ', 0.5030129436959292, 0.28600927852607844, 0.25868684)
((646, 331), (646, 331), 59487.87, 58006.0)
('Error: ', tensor(0.1836, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.6746803054019972, 0.4234757305153036)
('Val: AUC, AUPR, Erros: ', 0.6777173988050771, 0.44973596027075513, 0.1875542)
('Test: AUC, AUPR, Erros: ', 0.6743838937848046, 0.41906198051260446, 0.18337445)
((646, 331), (646, 331), 57597.52, 58006.0)
('Error: ', tensor(0.1703, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7231394555566116, 0.5239128064429627)
('Val: AUC, AUPR, Erros: ', 0.7098154391648467, 0.5250534905693959, 0.17810497)
('Test: AUC, AUPR, Erros: ', 0.713630996765519, 0.5019500016108462, 0.17322163)
((646, 331), (646, 331), 57040.387, 58006.0)
('Error: ', tensor(0.1665, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7333893198116661, 0.5480404093513798)
('Val: AUC, AUPR, Erros: ', 0.7175511322634515, 0.5442748527377889, 0.17464684)
('Test: AUC, AUPR, Erros: ', 0.7262717900235185, 0.532803232054893, 0.16874172)
((646, 331), (646, 331), 57706.39, 58006.0)
('Error: ', tensor(0.1638, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7457772587872407, 0.5603649226055808)
('Val: AUC, AUPR, Erros: ', 0.7252401296834206, 0.5518686544966305, 0.17314324)
('Test: AUC, AUPR, Erros: ', 0.7355244548420578, 0.5419850331269725, 0.1668468)
((646, 331), (646, 331), 58530.29, 58006.0)
('Error: ', tensor(0.1610, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7573479768023148, 0.5750029362446434)
('Val: AUC, AUPR, Erros: ', 0.7306322387867172, 0.5593374858876294, 0.17186612)
('Test: AUC, AUPR, Erros: ', 0.741411683406846, 0.5507786319657663, 0.16533458)
((646, 331), (646, 331), 57729.516, 58006.0)
('Error: ', tensor(0.1579, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7700332447606222, 0.5914453801197187)
('Val: AUC, AUPR, Erros: ', 0.7331005780302589, 0.564051999330397, 0.1712673)
('Test: AUC, AUPR, Erros: ', 0.7446992173307485, 0.554287347633478, 0.1644937)
((646, 331), (646, 331), 57552.332, 58006.0)
('Error: ', tensor(0.1543, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7838107264765715, 0.6086892623717901)
('Val: AUC, AUPR, Erros: ', 0.7347928514241823, 0.5690693721829025, 0.17077112)
('Test: AUC, AUPR, Erros: ', 0.7465458432124814, 0.5528935244747276, 0.1644634)
((646, 331), (646, 331), 57380.246, 58006.0)
('Error: ', tensor(0.1503, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.7975888906070216, 0.6285440261677331)
('Val: AUC, AUPR, Erros: ', 0.7361765384294264, 0.5753722017443963, 0.17032667)
('Test: AUC, AUPR, Erros: ', 0.7492344976967854, 0.5538300544409369, 0.16420995)
((646, 331), (646, 331), 57308.8, 58006.0)
('Error: ', tensor(0.1466, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8087040033430699, 0.6470186410396521)
('Val: AUC, AUPR, Erros: ', 0.735080626482534, 0.5788999348701225, 0.17112704)
('Test: AUC, AUPR, Erros: ', 0.7525041326665134, 0.5588329818943718, 0.1636071)
((646, 331), (646, 331), 57692.586, 58006.0)
('Error: ', tensor(0.1437, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8171085848770936, 0.660732086092934)
('Val: AUC, AUPR, Erros: ', 0.7316683779419575, 0.5789247888002584, 0.1727428)
('Test: AUC, AUPR, Erros: ', 0.7541325363008105, 0.5638927977265789, 0.16325204)
((646, 331), (646, 331), 57580.383, 58006.0)
('Error: ', tensor(0.1411, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8246044639586962, 0.6722341519957997)
('Val: AUC, AUPR, Erros: ', 0.726758963937367, 0.576727419416168, 0.1751192)
('Test: AUC, AUPR, Erros: ', 0.7558089707897233, 0.5716876513006555, 0.1626033)
((646, 331), (646, 331), 57774.98, 58006.0)
('Error: ', tensor(0.1387, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.8317704542671802, 0.6831017437180479)
('Val: AUC, AUPR, Erros: ', 0.7229406655717602, 0.5756338314356529, 0.17737061)
('Test: AUC, AUPR, Erros: ', 0.7586405987133306, 0.5792901577384526, 0.16177303)
((646, 331), (646, 331), 57768.613, 58006.0)
('Error: ', tensor(0.1364, grad_fn=<MseLossBackward>))
('Train: AUC, AUPR: ', 0.838574076999094, 0.6935513030647887)
('Val: AUC, AUPR, Erros: ', 0.7187892971003929, 0.5741266382109314, 0.18027535)
('Test: AUC, AUPR, Erros: ', 0.7591943823607953, 0.5794900026495626, 0.16219203)
