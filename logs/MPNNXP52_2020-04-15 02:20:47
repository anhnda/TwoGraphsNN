class Net52(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net52, self).__init__()

        self.convD1 = XGAT(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = XGAT(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD3 = XGAT(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.L1C = Linear(config.CHEM_FINGERPRINT_SIZE + config.EMBED_DIM, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        # self.conv1 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv1g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=1)
        # self.conv2 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv2g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=1)
        # self.conv3 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv3g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=1)

        # self.conv4= EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv4g = GATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool4 = TopKPooling(config.EMBED_DIM, ratio=1)

        # self.conv5 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv5g = GATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool5 = TopKPooling(config.EMBED_DIM, ratio=1)

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, proteinNodes, drugId2ProteinIdList, drugGraphBatch,
                nDrug, drugFeatures=None):

        if config.INNER_FEATURE and drugFeatures is not None:
            nDrug = drugFeatures.shape[0]

            xDrug = self.L1(drugFeatures)
            xDrug = self.actL1(xDrug)
            xDrug = self.L2(xDrug)
            xDrug = self.actL2(xDrug)

            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)
            x = torch.cat((xDrug, x), dim=0)

        elif config.INNER_GRAPH:
            xAtom, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch
            # xDrug = self.mact1(self.mlinear1(xDrug))
            # xDrug = self.mact2(self.mlinear2(xDrug))

            xAtom = self.nodesEmbedding(xAtom)
            xAtom = xAtom.squeeze(1)

            xAtom = F.relu(self.conv1g(xAtom, edge_index))
            xAtom, edge_index, _, batch, _, _ = self.pool1(xAtom, edge_index, None, batch)
            x1 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xAtom = F.relu(self.conv2g(xAtom, edge_index))

            xAtom, edge_index, _, batch, _, _ = self.pool2(xAtom, edge_index, None, batch)
            x2 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xAtom = F.relu(self.conv3g(xAtom, edge_index))
            xAtom, edge_index, _, batch, _, _ = self.pool3(xAtom, edge_index, None, batch)
            x3 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xsum = 0
            #            if config.N_INNER_LAYER >= 4:
            #                if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
            #                    xAtom = F.relu(self.conv4(xAtom, edge_index, xProtein, drugId2ProteinIdList, batch))
            #                else:
            #                    xAtom = F.relu(self.conv4g(xAtom, edge_index))
            #
            #                xAtom, edge_index, _, batch, _, _ = self.pool4(xAtom, edge_index, None, batch)
            #                x4 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            #                xsum += x4
            #                iLevel += 1
            #                if config.N_INNER_LAYER == 5:
            #                    if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
            #                        xAtom = F.relu(self.conv5(xAtom, edge_index, xProtein, drugId2ProteinIdList, batch))
            #                    else:
            #                        xAtom = F.relu(self.conv5g(xAtom, edge_index))
            #                    xAtom, edge_index, _, batch, _, _ = self.pool5(xAtom, edge_index, None, batch)
            #                    x5 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            #                    xsum += x5

            xDrug = x1 + x2 + x3 + xsum
            xDrug = self.lin1(xDrug)
            xDrug = self.act1(xDrug)

            # xDrug = self.lin2(xDrug)
            # xDrug = self.act2(xDrug)


            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            x = torch.cat((xDrug, x), dim=0)
        else:
            x = self.nodesEmbedding(x)

        if config.OUTER_GRAPH:
            # Conv Drug:
            x0 = x
            x = self.convD1(x, drugEdges, x0)
            x = F.relu(x)
            x = self.convD2(x, drugEdges, x0)
            x = F.relu(x)
            x = self.convD3(x, drugEdges, x0)
            x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', True)
('Protein Test: ', True)
('Inner Graph, Outer Graph, Se Graph: ', True, True, False)
('Drug Features: ', False)
('Combine Features: ', False)
('Inner mode: ', False)
('Cross Prob: ', 0.0)
('Inner Level: ', 0)
MPNNX
<models.MPNNXP5.MPNNXP5 object at 0x7fb05e630150>
('Manual torch seed: ', 1772727637)
('Config: ', 'Protein Test: ', True, 'KNN: ', 2)
KFold: 5 x 10
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19463.0)
('VALIDATE SUM PROTEIN TEST: ', 2334.0)
((646, 331), (646, 331), 112131.8, 59640.0)
('Error: ', tensor(57371.0938, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5166040227198481, 0.29185623890248236)
('Val: AUC, AUPR, Erros: ', 0.4866967114820169, 0.23044942653355974, 7389.129)
('Test: AUC, AUPR, Erros: ', 0.5099451984706764, 0.2695538111078266, 7197.865)
((646, 331), (646, 331), 58531.15, 59640.0)
('Error: ', tensor(41592.6328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6243334932306233, 0.39358716769736835)
('Val: AUC, AUPR, Erros: ', 0.6126280761527348, 0.3367921418199246, 4717.9355)
('Test: AUC, AUPR, Erros: ', 0.5897813277434745, 0.33832211879064905, 5075.093)
((646, 331), (646, 331), 57773.3, 59640.0)
('Error: ', tensor(40357.2617, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6802901118374514, 0.47201102691925784)
('Val: AUC, AUPR, Erros: ', 0.6693154448228047, 0.41480689220944933, 4576.3223)
('Test: AUC, AUPR, Erros: ', 0.6470326972406324, 0.4124653551337706, 4937.0244)
((646, 331), (646, 331), 57077.957, 59640.0)
('Error: ', tensor(39266.6562, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7102407840520263, 0.5165900180231753)
('Val: AUC, AUPR, Erros: ', 0.6987671366061956, 0.45776709668529186, 4452.957)
('Test: AUC, AUPR, Erros: ', 0.6791681107359977, 0.4583773066795333, 4813.157)
((646, 331), (646, 331), 55935.242, 59640.0)
('Error: ', tensor(38250.4453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7297789130156219, 0.544957939051843)
('Val: AUC, AUPR, Erros: ', 0.7175379587051872, 0.4833822680390276, 4334.084)
('Test: AUC, AUPR, Erros: ', 0.701096156837328, 0.4887463644438158, 4692.7656)
((646, 331), (646, 331), 54999.44, 59640.0)
('Error: ', tensor(37313., grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7430445371610062, 0.563906517895239)
('Val: AUC, AUPR, Erros: ', 0.7299142815942832, 0.4994686066806333, 4228.6553)
('Test: AUC, AUPR, Erros: ', 0.7165081292566379, 0.5089754828659638, 4582.0356)
((646, 331), (646, 331), 54746.633, 59640.0)
('Error: ', tensor(36459.6094, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7521373873518831, 0.5773174987384422)
('Val: AUC, AUPR, Erros: ', 0.7382839370029577, 0.5104178396373737, 4141.7534)
('Test: AUC, AUPR, Erros: ', 0.727300611660154, 0.5227331002637332, 4486.672)
((646, 331), (646, 331), 54651.535, 59640.0)
('Error: ', tensor(35814.5898, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7587215965142591, 0.5873580115727639)
('Val: AUC, AUPR, Erros: ', 0.7439766308926572, 0.5178102701658345, 4081.1846)
('Test: AUC, AUPR, Erros: ', 0.7347406792959849, 0.5317047600300286, 4419.5044)
((646, 331), (646, 331), 54910.094, 59640.0)
('Error: ', tensor(35295.0859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7639070050211464, 0.5954629849463868)
('Val: AUC, AUPR, Erros: ', 0.7479621278629884, 0.5226898983751453, 4040.7954)
('Test: AUC, AUPR, Erros: ', 0.7403595927421485, 0.5377368554147156, 4373.3623)
((646, 331), (646, 331), 55326.01, 59640.0)
('Error: ', tensor(34890.5586, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7678596703013492, 0.601753753906275)
('Val: AUC, AUPR, Erros: ', 0.7505413635131122, 0.5254117744393252, 4017.0005)
('Test: AUC, AUPR, Erros: ', 0.7443121355498463, 0.5413711549758702, 4346.1025)
((646, 331), (646, 331), 55443.098, 59640.0)
('Error: ', tensor(34603.1797, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.771021304377095, 0.6068830792310901)
('Val: AUC, AUPR, Erros: ', 0.752314815785049, 0.5267427903530097, 4002.7454)
('Test: AUC, AUPR, Erros: ', 0.7472828110106908, 0.5437462175191659, 4330.8145)
((646, 331), (646, 331), 55904.0, 59640.0)
('Error: ', tensor(34346.0547, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7736634388067343, 0.6111975751607772)
('Val: AUC, AUPR, Erros: ', 0.7533624475000457, 0.5266629119712818, 3998.9207)
('Test: AUC, AUPR, Erros: ', 0.7496912986177623, 0.5453028271461724, 4324.126)
((646, 331), (646, 331), 56151.25, 59640.0)
('Error: ', tensor(34149.5039, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7758632020983689, 0.6148731165816332)
('Val: AUC, AUPR, Erros: ', 0.7539900803566587, 0.5255891436306833, 3999.6245)
('Test: AUC, AUPR, Erros: ', 0.7513687071883343, 0.5460401869028768, 4323.812)
((646, 331), (646, 331), 56400.816, 59640.0)
('Error: ', tensor(33983.2344, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7777623873899444, 0.6180707735852)
('Val: AUC, AUPR, Erros: ', 0.7542980909035546, 0.5240652016110132, 4004.4102)
('Test: AUC, AUPR, Erros: ', 0.7525497478878592, 0.5462757060549994, 4328.3486)
((646, 331), (646, 331), 56379.23, 59640.0)
('Error: ', tensor(33853.1328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7794921285438147, 0.6209774495622765)
('Val: AUC, AUPR, Erros: ', 0.754327353166814, 0.5218222406485112, 4010.5706)
('Test: AUC, AUPR, Erros: ', 0.7533908202785137, 0.5460877398675641, 4334.293)
((646, 331), (646, 331), 56367.816, 59640.0)
('Error: ', tensor(33738.5586, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7810585634057372, 0.623586233034206)
('Val: AUC, AUPR, Erros: ', 0.7542430126488888, 0.519494450754488, 4018.7507)
('Test: AUC, AUPR, Erros: ', 0.7540057196688448, 0.5456451873075521, 4342.164)
((646, 331), (646, 331), 56490.906, 59640.0)
('Error: ', tensor(33625.5859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7825107488505243, 0.6259931976134757)
('Val: AUC, AUPR, Erros: ', 0.7540076998096028, 0.5168457771120173, 4029.9878)
('Test: AUC, AUPR, Erros: ', 0.7544868508649842, 0.5451304400979808, 4352.5356)
Train: 0.7737 0.6112
Test: 0.7497 0.5453
[0.6143056888851789, 0.6314235904750585, 0.6385016612900547, 0.6380935716436599, 0.643282796332408, 0.6442173965800478, 0.6486023342355737, 0.6550516724667729, 0.6599993351459786, 0.6590403335701136, 0.664492327775063, 0.66608276036169, 0.6677850850020002, 0.6682357552796511, 0.6704292212118996, 0.6713339193439392, 0.6733970842245965, 0.6768534409951609, 0.677694986194121, 0.6804281203194859, 0.6803843238505816, 0.6829384684707357, 0.6846057521909765, 0.6881498909034238, 0.6891965423934092, 0.6906157732081175, 0.692656334192395, 0.6932785254064313, 0.6951119086791597, 0.6957046516557854, 0.6995981484872833, 0.7010062374633113, 0.7044875997436846, 0.7057597925338693, 0.7086814180570187, 0.7100497363762057, 0.710716900529495, 0.7137939295412243, 0.7137939295412243, 0.7152086772840015, 0.7156366594567515, 0.7171347608250942, 0.7180434369513213, 0.721651705249639, 0.7244751660979514, 0.7244751660979514, 0.725532362937836, 0.725532362937836, 0.7276527242787587, 0.7289455544602209, 0.7289455544602209, 0.7312199900157513, 0.7312199900157513, 0.7312199900157513, 0.7312199900157513, 0.7312199900157513, 0.7312199900157513, 0.7312199900157513, 0.7339106618478676, 0.7339106618478676, 0.7352042286850825, 0.7367981894601785, 0.7367981894601785, 0.7367981894601785, 0.7367981894601785, 0.7367981894601785, 0.7367981894601785, 0.738740822765147, 0.738740822765147, 0.738740822765147, 0.7450989746219578, 0.7450989746219578, 0.7450989746219578, 0.7471039421326587, 0.7471039421326587, 0.7471039421326587, 0.7471039421326587, 0.7471039421326587, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623, 0.7496912986177623]
[0.1515791250922956, 0.1660250662755669, 0.17411305392947485, 0.18198367082957934, 0.19005992228543317, 0.19345452411388742, 0.20239926907644484, 0.22105178372324655, 0.23673954614749146, 0.23598245662479228, 0.24883493243160493, 0.2542117196227358, 0.25850738879178814, 0.26080994271046487, 0.2685131719232284, 0.27409158000048417, 0.28209361037323777, 0.29594413324015933, 0.29888648255839734, 0.3072481839728691, 0.3077777785543193, 0.31835336504460604, 0.32414058068203444, 0.3351625952623465, 0.3388205714470621, 0.3441783187394145, 0.35073805920793644, 0.3522581573753416, 0.35814686092090486, 0.3607411693181598, 0.37327073512410835, 0.3763345910010282, 0.38823228057377485, 0.39303226564406374, 0.40247828506829714, 0.40700443300106937, 0.40821655879101015, 0.41599099891311475, 0.41599099891311475, 0.4203120854238183, 0.42105141618574027, 0.4266000860224418, 0.43030946437094353, 0.44216188852861427, 0.45243861984116346, 0.45243861984116346, 0.4561398466911397, 0.4561398466911397, 0.4635656177602704, 0.4681433084965857, 0.4681433084965857, 0.47609014769481295, 0.47609014769481295, 0.47609014769481295, 0.47609014769481295, 0.47609014769481295, 0.47609014769481295, 0.47609014769481295, 0.4860858905414109, 0.4860858905414109, 0.4907825963407729, 0.49658784966142394, 0.49658784966142394, 0.49658784966142394, 0.49658784966142394, 0.49658784966142394, 0.49658784966142394, 0.5043050557325559, 0.5043050557325559, 0.5043050557325559, 0.5285432765551153, 0.5285432765551153, 0.5285432765551153, 0.5356758076905019, 0.5356758076905019, 0.5356758076905019, 0.5356758076905019, 0.5356758076905019, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724, 0.5453028271461724]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19245.0)
('VALIDATE SUM PROTEIN TEST: ', 2846.0)
((646, 331), (646, 331), 78624.52, 59364.0)
('Error: ', tensor(45529.9453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.512542292508224, 0.28599421970471695)
('Val: AUC, AUPR, Erros: ', 0.5168176370368003, 0.2789371424545313, 5666.1753)
('Test: AUC, AUPR, Erros: ', 0.49109035104889376, 0.22930628193774935, 5464.3945)
((646, 331), (646, 331), 53115.16, 59364.0)
('Error: ', tensor(43448.7031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5160004310834492, 0.2904928074079944)
('Val: AUC, AUPR, Erros: ', 0.49432571127403246, 0.2646447955468568, 5421.4966)
('Test: AUC, AUPR, Erros: ', 0.548499201388593, 0.26923806725004923, 4798.022)
((646, 331), (646, 331), 59603.19, 59364.0)
('Error: ', tensor(41012.0781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6567932565502319, 0.44341807075140055)
('Val: AUC, AUPR, Erros: ', 0.6427477210330801, 0.42559999804692883, 5094.5864)
('Test: AUC, AUPR, Erros: ', 0.6686386482591662, 0.40925356256599976, 4628.047)
((646, 331), (646, 331), 52494.89, 59364.0)
('Error: ', tensor(39843.3125, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.703290210051914, 0.5118858884551026)
('Val: AUC, AUPR, Erros: ', 0.6899909477605333, 0.49247967917472374, 4934.7114)
('Test: AUC, AUPR, Erros: ', 0.7098080175092965, 0.4736599399710054, 4428.1865)
((646, 331), (646, 331), 52793.63, 59364.0)
('Error: ', tensor(38423.2617, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7213774633407412, 0.5375358734000135)
('Val: AUC, AUPR, Erros: ', 0.7066816767779687, 0.514165983829675, 4770.8423)
('Test: AUC, AUPR, Erros: ', 0.7252564278519805, 0.4960770096434963, 4275.1514)
((646, 331), (646, 331), 52685.645, 59364.0)
('Error: ', tensor(37351.2852, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7315273803474831, 0.55255006851137)
('Val: AUC, AUPR, Erros: ', 0.7142939584026333, 0.5250786941478254, 4655.2603)
('Test: AUC, AUPR, Erros: ', 0.7328918294281096, 0.507740616287854, 4162.08)
((646, 331), (646, 331), 53041.652, 59364.0)
('Error: ', tensor(36597.2734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7386469845741894, 0.5627445861440039)
('Val: AUC, AUPR, Erros: ', 0.7185821832275748, 0.5304273262388706, 4585.4844)
('Test: AUC, AUPR, Erros: ', 0.7374121660568396, 0.5143019908016047, 4094.5757)
((646, 331), (646, 331), 53144.863, 59364.0)
('Error: ', tensor(36123.1328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7440135892088252, 0.5706918732195527)
('Val: AUC, AUPR, Erros: ', 0.7212279449762359, 0.5325245995903618, 4550.7104)
('Test: AUC, AUPR, Erros: ', 0.7404695137125682, 0.518388520925422, 4057.6636)
((646, 331), (646, 331), 53366.527, 59364.0)
('Error: ', tensor(35777.3047, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7481764837758939, 0.5769014078913143)
('Val: AUC, AUPR, Erros: ', 0.7229449952398496, 0.5328495067596297, 4532.6323)
('Test: AUC, AUPR, Erros: ', 0.7426941481698504, 0.5209398690653326, 4036.0852)
((646, 331), (646, 331), 53617.92, 59364.0)
('Error: ', tensor(35509.5859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7515212209636744, 0.581956444720298)
('Val: AUC, AUPR, Erros: ', 0.7240324147737391, 0.5322287763396413, 4524.255)
('Test: AUC, AUPR, Erros: ', 0.7443442720330522, 0.5226358157552733, 4022.6897)
((646, 331), (646, 331), 53686.723, 59364.0)
('Error: ', tensor(35310.0664, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7543299412412359, 0.5862579492104754)
('Val: AUC, AUPR, Erros: ', 0.7248397786695424, 0.5314025364617972, 4521.463)
('Test: AUC, AUPR, Erros: ', 0.7457236695089251, 0.5238948225509705, 4013.242)
((646, 331), (646, 331), 53870.01, 59364.0)
('Error: ', tensor(35129.5742, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7567643564122366, 0.5900162473213615)
('Val: AUC, AUPR, Erros: ', 0.7254679629835832, 0.5303055226116421, 4520.877)
('Test: AUC, AUPR, Erros: ', 0.7468969931231508, 0.5246421945215617, 4006.3945)
((646, 331), (646, 331), 53859.445, 59364.0)
('Error: ', tensor(34991.2656, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7589540934259659, 0.5933631302243075)
('Val: AUC, AUPR, Erros: ', 0.7260113261034603, 0.5292210312969385, 4521.943)
('Test: AUC, AUPR, Erros: ', 0.7479263533878256, 0.5252411230354143, 4000.9597)
((646, 331), (646, 331), 54178.773, 59364.0)
('Error: ', tensor(34833.0664, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7610143529535898, 0.5965086069979997)
('Val: AUC, AUPR, Erros: ', 0.7265803974144985, 0.5280969157121009, 4522.4478)
('Test: AUC, AUPR, Erros: ', 0.7488709656362142, 0.5256979907982191, 3997.135)
((646, 331), (646, 331), 54292.79, 59364.0)
('Error: ', tensor(34709.2891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7628823588765171, 0.5993389151659989)
('Val: AUC, AUPR, Erros: ', 0.727108441197466, 0.5271687158117037, 4523.5195)
('Test: AUC, AUPR, Erros: ', 0.7497166683300361, 0.5259980312221684, 3994.0)
((646, 331), (646, 331), 54028.46, 59364.0)
('Error: ', tensor(34629.0625, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7646705715803078, 0.6019729153025275)
('Val: AUC, AUPR, Erros: ', 0.7276973083435873, 0.526460693574064, 4524.4175)
('Test: AUC, AUPR, Erros: ', 0.7505544616747171, 0.5261750979835647, 3990.403)
((646, 331), (646, 331), 54298.6, 59364.0)
('Error: ', tensor(34505.6680, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7663633774242593, 0.6044542027070421)
('Val: AUC, AUPR, Erros: ', 0.7283119435082823, 0.5260639513927714, 4523.9976)
('Test: AUC, AUPR, Erros: ', 0.7513464910129846, 0.5263161373975469, 3988.5615)
Train: 0.7568 0.5900
Test: 0.7469 0.5246
[0.5079367007424107, 0.5286477972180488, 0.5430729073347124, 0.5443404261639362, 0.5546267058443208, 0.5566070802663862, 0.5662722820943291, 0.5864498347114602, 0.5953951858856119, 0.5970492067507511, 0.6065389540283737, 0.6123212588170289, 0.6150673924079532, 0.6162733483574552, 0.623466264521546, 0.6280562944531665, 0.6311268408504431, 0.635677072397333, 0.6405695639788334, 0.6432437616054992, 0.6439263027289697, 0.6475301028312657, 0.6530194959220713, 0.6571221749411952, 0.6590507556403706, 0.6643527876549629, 0.6657421275023446, 0.666778783933915, 0.6693504417565298, 0.6706839404182524, 0.6776102213971495, 0.6817556711629896, 0.6852260203206156, 0.687468659774996, 0.6907377899842896, 0.6929202928193503, 0.6948147210976657, 0.6993231583679471, 0.6993231583679471, 0.7024737995890298, 0.7043370941837147, 0.7055882123541102, 0.7074897791074015, 0.7122690329366032, 0.715966988290659, 0.715966988290659, 0.7167622330528496, 0.7167622330528496, 0.720135326731294, 0.7216247179910059, 0.7216247179910059, 0.7247395651754706, 0.7247395651754706, 0.7247395651754706, 0.7247395651754706, 0.7247395651754706, 0.7247395651754706, 0.7247395651754706, 0.7279512280058676, 0.7279512280058676, 0.7294327650733887, 0.7314953612862133, 0.7314953612862133, 0.7314953612862133, 0.7314953612862133, 0.7314953612862133, 0.7314953612862133, 0.734135665926452, 0.734135665926452, 0.734135665926452, 0.7413446885014653, 0.7413446885014653, 0.7413446885014653, 0.7438176636161061, 0.7438176636161061, 0.7438176636161061, 0.7438176636161061, 0.7438176636161061, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508, 0.7468969931231508]
[0.09991246724649777, 0.10287097886946328, 0.10872556339780556, 0.11144538993735122, 0.12178027120810789, 0.12270407874707775, 0.13393473176193815, 0.15261034957859396, 0.16171262826803354, 0.1634289984774594, 0.17896089268535356, 0.18947134402135313, 0.19132026549182085, 0.19037800709043828, 0.2022292334130427, 0.2096916392886656, 0.21404010853793787, 0.22463148996821852, 0.23288367876159555, 0.23972581426762404, 0.24154730085479914, 0.2508101114713408, 0.2627344818843296, 0.2700560902268794, 0.27396528624197203, 0.28620717231109183, 0.2900265932369609, 0.29122232012195814, 0.2966271623302393, 0.3000169083767259, 0.3178851268938522, 0.3285058331294112, 0.33522956585057184, 0.33923718632134087, 0.34570959861771333, 0.3513987873220563, 0.3573945711720774, 0.3701614982734471, 0.3701614982734471, 0.3796923408370809, 0.38426449555821346, 0.38537612886707656, 0.3927740923260822, 0.4066282660824398, 0.41768828862324714, 0.41768828862324714, 0.4197004946968377, 0.4197004946968377, 0.430510016796411, 0.43467677003148136, 0.43467677003148136, 0.44387511021547604, 0.44387511021547604, 0.44387511021547604, 0.44387511021547604, 0.44387511021547604, 0.44387511021547604, 0.44387511021547604, 0.45400286023973324, 0.45400286023973324, 0.458217533628498, 0.4655236195831789, 0.4655236195831789, 0.4655236195831789, 0.4655236195831789, 0.4655236195831789, 0.4655236195831789, 0.47682722441085534, 0.47682722441085534, 0.47682722441085534, 0.5027516911583816, 0.5027516911583816, 0.5027516911583816, 0.5117243197251792, 0.5117243197251792, 0.5117243197251792, 0.5117243197251792, 0.5117243197251792, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617, 0.5246421945215617]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19732.0)
('VALIDATE SUM PROTEIN TEST: ', 2552.0)
((646, 331), (646, 331), 44514.7, 58006.0)
('Error: ', tensor(43057.6875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5328346357028212, 0.29581571527287553)
('Val: AUC, AUPR, Erros: ', 0.5428182975457251, 0.31771927291479446, 5586.7)
('Test: AUC, AUPR, Erros: ', 0.5499255148711943, 0.3063026242374964, 5364.222)
((646, 331), (646, 331), 72868.98, 58006.0)
('Error: ', tensor(41455.4688, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.641414917783679, 0.3902435563080157)
('Val: AUC, AUPR, Erros: ', 0.6472648815018156, 0.4117811705381557, 5306.127)
('Test: AUC, AUPR, Erros: ', 0.6609649922358095, 0.4110763199224051, 5188.3423)
((646, 331), (646, 331), 60883.27, 58006.0)
('Error: ', tensor(40657.2812, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6395067333843233, 0.386485034428945)
('Val: AUC, AUPR, Erros: ', 0.6464069846268082, 0.4111156601116861, 5234.335)
('Test: AUC, AUPR, Erros: ', 0.6586034529285659, 0.4083734807979703, 5067.07)
((646, 331), (646, 331), 60424.242, 58006.0)
('Error: ', tensor(40590.3984, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6416363953657009, 0.390005370328384)
('Val: AUC, AUPR, Erros: ', 0.6495602257079645, 0.41523371279772137, 5225.4863)
('Test: AUC, AUPR, Erros: ', 0.6616683232994551, 0.41268150573364903, 5055.756)
((646, 331), (646, 331), 60366.156, 58006.0)
('Error: ', tensor(40539.6250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6433093247232804, 0.39249260674073844)
('Val: AUC, AUPR, Erros: ', 0.6510637623359742, 0.4171196662395646, 5219.596)
('Test: AUC, AUPR, Erros: ', 0.6646762309349391, 0.4162457593143941, 5046.124)
((646, 331), (646, 331), 59966.33, 58006.0)
('Error: ', tensor(40508.4453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6441063039840709, 0.39374387575841124)
('Val: AUC, AUPR, Erros: ', 0.6515360005269106, 0.41782051847452684, 5217.342)
('Test: AUC, AUPR, Erros: ', 0.6661653845065583, 0.41803984015464607, 5039.8193)
((646, 331), (646, 331), 60142.85, 58006.0)
('Error: ', tensor(40483.2188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.644906695317366, 0.3950731856189167)
('Val: AUC, AUPR, Erros: ', 0.6519510041432721, 0.41848501861432863, 5214.359)
('Test: AUC, AUPR, Erros: ', 0.6672082255794707, 0.4194401046966015, 5036.0728)
((646, 331), (646, 331), 59781.723, 58006.0)
('Error: ', tensor(40461.6445, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6455540837987217, 0.39610592060459837)
('Val: AUC, AUPR, Erros: ', 0.6522517094191699, 0.41903456228019864, 5213.221)
('Test: AUC, AUPR, Erros: ', 0.6676989968843292, 0.420227552438932, 5032.8174)
((646, 331), (646, 331), 59951.03, 58006.0)
('Error: ', tensor(40436.5273, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6466198100158914, 0.39756705425285976)
('Val: AUC, AUPR, Erros: ', 0.6527161723987102, 0.419963037677747, 5210.5146)
('Test: AUC, AUPR, Erros: ', 0.6686294961532382, 0.42129386076003833, 5030.0044)
((646, 331), (646, 331), 60160.844, 58006.0)
('Error: ', tensor(40409.2891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6478484435548036, 0.3988651663340541)
('Val: AUC, AUPR, Erros: ', 0.6531849090115793, 0.4205918679467142, 5207.6787)
('Test: AUC, AUPR, Erros: ', 0.6694065486663625, 0.42217057639662847, 5027.635)
((646, 331), (646, 331), 59415.38, 58006.0)
('Error: ', tensor(40385.3281, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6488840197301344, 0.3997919649379536)
('Val: AUC, AUPR, Erros: ', 0.6538248164250726, 0.42141113138681324, 5207.1787)
('Test: AUC, AUPR, Erros: ', 0.6697463472549141, 0.4225250701089555, 5024.913)
((646, 331), (646, 331), 59487.21, 58006.0)
('Error: ', tensor(40363.8438, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6498034953810651, 0.40062731231324256)
('Val: AUC, AUPR, Erros: ', 0.654249853343662, 0.4220142739637289, 5204.618)
('Test: AUC, AUPR, Erros: ', 0.6702776709878012, 0.4233806515769475, 5022.853)
((646, 331), (646, 331), 59529.664, 58006.0)
('Error: ', tensor(40337.9727, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6498276733555989, 0.4012069086419757)
('Val: AUC, AUPR, Erros: ', 0.6545776625418874, 0.4223430479283784, 5200.5664)
('Test: AUC, AUPR, Erros: ', 0.6706012704245509, 0.42413140283655576, 5018.5806)
((646, 331), (646, 331), 61363.71, 58006.0)
('Error: ', tensor(40305.7695, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6520532687316043, 0.40103243235262054)
('Val: AUC, AUPR, Erros: ', 0.652881535704003, 0.4194310138497096, 5198.2373)
('Test: AUC, AUPR, Erros: ', 0.6709833986672142, 0.4237341246510903, 5018.1904)
((646, 331), (646, 331), 59399.06, 58006.0)
('Error: ', tensor(40308.3398, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6510509978800763, 0.4024538644405912)
('Val: AUC, AUPR, Erros: ', 0.6554646208067663, 0.42332096793322643, 5197.6743)
('Test: AUC, AUPR, Erros: ', 0.6713964400859431, 0.42526817149914475, 5014.619)
((646, 331), (646, 331), 60511.03, 58006.0)
('Error: ', tensor(40272.5859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6531471982063137, 0.4024037731208905)
('Val: AUC, AUPR, Erros: ', 0.6535368568933398, 0.42055017627362623, 5197.6626)
('Test: AUC, AUPR, Erros: ', 0.6713462906370662, 0.4245072411124075, 5014.125)
((646, 331), (646, 331), 60380.613, 58006.0)
('Error: ', tensor(40258.7578, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6533828293062758, 0.40263576628269876)
('Val: AUC, AUPR, Erros: ', 0.6536041555157063, 0.4205913856844293, 5196.7305)
('Test: AUC, AUPR, Erros: ', 0.6714446011531628, 0.42471683193758947, 5012.0664)
Train: 0.6534 0.4026
Test: 0.6714 0.4247
[0.5535574643574462, 0.577968360023696, 0.5782204353461794, 0.5764268174528567, 0.5790977688225363, 0.5798707265578833, 0.5842791700099355, 0.5846113539009938, 0.5870517328163158, 0.5881181439199101, 0.5916638751729234, 0.5955892514253882, 0.5978443097963116, 0.6005615530813332, 0.6034330433566322, 0.607444735612377, 0.6110811917817269, 0.6151893247544602, 0.6199822254609523, 0.6231842388766318, 0.6233696253776522, 0.625946747289323, 0.6253606058815376, 0.628729525250647, 0.6301587622258757, 0.6351985108690594, 0.6348446599760685, 0.6362853883979219, 0.6375667834733295, 0.6384478969238623, 0.6386609663209613, 0.6405172992060251, 0.6440544478585712, 0.6459045851987733, 0.6493714053111198, 0.6513742903299603, 0.6523740000303286, 0.653912470306437, 0.653912470306437, 0.6547648237798908, 0.6542167201670367, 0.6550443410167615, 0.6568469309968011, 0.6576903465392205, 0.6566405737886268, 0.6566405737886268, 0.6575117573840181, 0.6575117573840181, 0.6605061002134449, 0.66171884492663, 0.66171884492663, 0.6636587341588178, 0.6636587341588178, 0.6636587341588178, 0.6636587341588178, 0.6636587341588178, 0.6636587341588178, 0.6636587341588178, 0.6656969394871008, 0.6656969394871008, 0.6661191411142298, 0.6637905583422703, 0.6637905583422703, 0.6637905583422703, 0.6637905583422703, 0.6637905583422703, 0.6637905583422703, 0.6635447692625176, 0.6635447692625176, 0.6635447692625176, 0.6675037879389769, 0.6675037879389769, 0.6675037879389769, 0.6694986600954204, 0.6694986600954204, 0.6694986600954204, 0.6694986600954204, 0.6694986600954204, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628, 0.6714446011531628]
[0.1364180765588628, 0.15677285300886315, 0.16380553689784833, 0.17196941176811134, 0.17358284612190011, 0.17776176276526953, 0.18432496932189063, 0.19348752192702862, 0.20067108167764786, 0.20358558192969325, 0.2109925889126978, 0.2176769995224, 0.2201243873800994, 0.22312247559398934, 0.2295077982071701, 0.2381143028931282, 0.24687716629956097, 0.25587875533506493, 0.2647588879393515, 0.2708283527012383, 0.2713115077807335, 0.277560448103246, 0.2796284406136733, 0.28702561220724343, 0.28998501845523517, 0.301282497175679, 0.30383160617822597, 0.3080977383111648, 0.3123708635692074, 0.3139579550474313, 0.32013169553450455, 0.32408522824693553, 0.3321599721334614, 0.33771348710059207, 0.3446834068756014, 0.3495152699754673, 0.35175550478868745, 0.3572994554601624, 0.3572994554601624, 0.36194284988197034, 0.36229821390076894, 0.3648932854953838, 0.3695901015344198, 0.37803430475643346, 0.38102692859486387, 0.38102692859486387, 0.38323887014392916, 0.38323887014392916, 0.39111387109204276, 0.39441022741291815, 0.39441022741291815, 0.39901689690505543, 0.39901689690505543, 0.39901689690505543, 0.39901689690505543, 0.39901689690505543, 0.39901689690505543, 0.39901689690505543, 0.40347336107327225, 0.40347336107327225, 0.4048957133875965, 0.4044828830076123, 0.4044828830076123, 0.4044828830076123, 0.4044828830076123, 0.4044828830076123, 0.4044828830076123, 0.4055098535309597, 0.4055098535309597, 0.4055098535309597, 0.41519809504524985, 0.41519809504524985, 0.41519809504524985, 0.42018364283318543, 0.42018364283318543, 0.42018364283318543, 0.42018364283318543, 0.42018364283318543, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947, 0.42471683193758947]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_3
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (81, 2666), (647, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19668.0)
('VALIDATE SUM PROTEIN TEST: ', 2359.0)
((647, 331), (647, 331), 100352.23, 57502.0)
('Error: ', tensor(51220.2930, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5264776544731863, 0.2806690333186701)
('Val: AUC, AUPR, Erros: ', 0.5172858848374362, 0.2999110268374544, 6364.966)
('Test: AUC, AUPR, Erros: ', 0.5194961307733165, 0.2919817323820654, 6459.8237)
((647, 331), (647, 331), 40530.277, 57502.0)
('Error: ', tensor(41898.3438, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6524720097466603, 0.4138334944782646)
('Val: AUC, AUPR, Erros: ', 0.6227578058723573, 0.4141054307301649, 5625.093)
('Test: AUC, AUPR, Erros: ', 0.6449396833534911, 0.4243575151408103, 5514.284)
((647, 331), (647, 331), 47168.28, 57502.0)
('Error: ', tensor(38693.7305, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7232819523412997, 0.5256242779052198)
('Val: AUC, AUPR, Erros: ', 0.6954929154730195, 0.5243298840618387, 5198.452)
('Test: AUC, AUPR, Erros: ', 0.7068546140687053, 0.5244879846620133, 5107.422)
((647, 331), (647, 331), 46793.105, 57502.0)
('Error: ', tensor(37108.8633, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7396445562279992, 0.5512360605661419)
('Val: AUC, AUPR, Erros: ', 0.7124204938583576, 0.5494776989231532, 5018.3506)
('Test: AUC, AUPR, Erros: ', 0.7179985075420233, 0.5441062072334097, 4933.7715)
((647, 331), (647, 331), 48134.887, 57502.0)
('Error: ', tensor(35905.3750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7478172909858203, 0.5638496117949952)
('Val: AUC, AUPR, Erros: ', 0.7188190993862225, 0.5589499895462556, 4881.903)
('Test: AUC, AUPR, Erros: ', 0.7225520553135918, 0.5518511541676099, 4803.771)
((647, 331), (647, 331), 49322.15, 57502.0)
('Error: ', tensor(35198.0586, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.753236135133449, 0.571857119996976)
('Val: AUC, AUPR, Erros: ', 0.7215486307545398, 0.5630447700660581, 4811.32)
('Test: AUC, AUPR, Erros: ', 0.7252090049246194, 0.555971138202085, 4734.725)
((647, 331), (647, 331), 50186.332, 57502.0)
('Error: ', tensor(34775.5391, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7571663718199972, 0.5775369876463496)
('Val: AUC, AUPR, Erros: ', 0.7226088524570438, 0.5650808832702862, 4777.819)
('Test: AUC, AUPR, Erros: ', 0.7267448585560599, 0.5585239315884666, 4699.2188)
((647, 331), (647, 331), 50739.375, 57502.0)
('Error: ', tensor(34486.6328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7604743802592426, 0.5823973446860988)
('Val: AUC, AUPR, Erros: ', 0.7227671298576391, 0.5659762552852314, 4762.8706)
('Test: AUC, AUPR, Erros: ', 0.7277632131108922, 0.5603127956176865, 4679.6445)
((647, 331), (647, 331), 51147.402, 57502.0)
('Error: ', tensor(34257.3984, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7634802264194802, 0.5868628609778997)
('Val: AUC, AUPR, Erros: ', 0.7224326559519911, 0.5662332698997374, 4756.3447)
('Test: AUC, AUPR, Erros: ', 0.7285794599958542, 0.5616552599490243, 4667.077)
((647, 331), (647, 331), 51292.793, 57502.0)
('Error: ', tensor(34081.0977, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7662196466866401, 0.5909566462501292)
('Val: AUC, AUPR, Erros: ', 0.7218901354676733, 0.5662803743147264, 4756.7397)
('Test: AUC, AUPR, Erros: ', 0.729264816184574, 0.5626502216442492, 4660.8467)
((647, 331), (647, 331), 51466.945, 57502.0)
('Error: ', tensor(33917.5742, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7688044138408936, 0.5948023410097459)
('Val: AUC, AUPR, Erros: ', 0.7212388110887351, 0.5661270458492427, 4757.8296)
('Test: AUC, AUPR, Erros: ', 0.7299638165711482, 0.5635094156370267, 4655.22)
((647, 331), (647, 331), 51649.65, 57502.0)
('Error: ', tensor(33764.9023, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7712229272183181, 0.5984189364120471)
('Val: AUC, AUPR, Erros: ', 0.7204872091733988, 0.5657760934258347, 4759.632)
('Test: AUC, AUPR, Erros: ', 0.7305842722914558, 0.5640854984785684, 4650.4287)
((647, 331), (647, 331), 51813.49, 57502.0)
('Error: ', tensor(33615.9219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7736345590275293, 0.6020366745666104)
('Val: AUC, AUPR, Erros: ', 0.7197111386727932, 0.5653159165665553, 4762.3823)
('Test: AUC, AUPR, Erros: ', 0.7311513605458444, 0.564591435899564, 4646.7046)
((647, 331), (647, 331), 51824.773, 57502.0)
('Error: ', tensor(33484.7969, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7760323456619052, 0.6056208596249807)
('Val: AUC, AUPR, Erros: ', 0.7188311738096406, 0.564682735187801, 4768.5747)
('Test: AUC, AUPR, Erros: ', 0.7317488698272467, 0.5651026214631487, 4645.37)
((647, 331), (647, 331), 51958.48, 57502.0)
('Error: ', tensor(33345.3398, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7783858627502244, 0.6091577246955233)
('Val: AUC, AUPR, Erros: ', 0.7178834209605733, 0.5638819234743512, 4773.2876)
('Test: AUC, AUPR, Erros: ', 0.7323433113846448, 0.5655733137967714, 4642.586)
((647, 331), (647, 331), 51764.164, 57502.0)
('Error: ', tensor(33234.6094, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7807850901633361, 0.6127688954137148)
('Val: AUC, AUPR, Erros: ', 0.7168349230006249, 0.5628448906409431, 4784.1777)
('Test: AUC, AUPR, Erros: ', 0.7329470107728355, 0.5659848158150418, 4644.7646)
((647, 331), (647, 331), 51840.746, 57502.0)
('Error: ', tensor(33093.2891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7833195064385947, 0.6165964023005961)
('Val: AUC, AUPR, Erros: ', 0.7156676061131926, 0.5614149184622086, 4792.3535)
('Test: AUC, AUPR, Erros: ', 0.7337445746036999, 0.5665497339847254, 4642.6987)
Train: 0.7635 0.5869
Test: 0.7286 0.5617
[0.5464396790047612, 0.5729477084256689, 0.5758599673848424, 0.5793887900637069, 0.5887501909652678, 0.5917676792038418, 0.5947476687681058, 0.5973490229720104, 0.6017698010872282, 0.602091861461935, 0.6027579408161851, 0.6059527686941861, 0.6064770472524569, 0.6088751086427515, 0.6146936075913162, 0.6173284867014917, 0.6214850459516731, 0.6253559718010551, 0.6287650557013726, 0.6328325988218727, 0.6333687075205106, 0.637743456366719, 0.6401499545007733, 0.6436382863387474, 0.6466675055840354, 0.6532384991914607, 0.6537524090411464, 0.6543414488393771, 0.656930346570348, 0.6580005974011811, 0.6637760372168144, 0.6672128279342026, 0.6707159942743592, 0.6727291431330968, 0.677508706771351, 0.679517424623947, 0.6803982481623557, 0.6838939306013462, 0.6838939306013462, 0.6858310121295459, 0.6871665891549308, 0.6890932843434134, 0.6908324290700694, 0.6954246960172644, 0.6997991240296138, 0.6997991240296138, 0.7010327504338338, 0.7010327504338338, 0.704290472323461, 0.7055860974121054, 0.7055860974121054, 0.7083485896015448, 0.7083485896015448, 0.7083485896015448, 0.7083485896015448, 0.7083485896015448, 0.7083485896015448, 0.7083485896015448, 0.7115048070310916, 0.7115048070310916, 0.7130530029575315, 0.7149722456458587, 0.7149722456458587, 0.7149722456458587, 0.7149722456458587, 0.7149722456458587, 0.7149722456458587, 0.7173745379617552, 0.7173745379617552, 0.7173745379617552, 0.7239560463812922, 0.7239560463812922, 0.7239560463812922, 0.7261253555594049, 0.7261253555594049, 0.7261253555594049, 0.7261253555594049, 0.7261253555594049, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542, 0.7285794599958542]
[0.1428210866104174, 0.17115697204211874, 0.17715892676364722, 0.18835485937033047, 0.20153012969644143, 0.20508976815025032, 0.21412608409060666, 0.22251024190609503, 0.23034339519910807, 0.23206828087066553, 0.23306391326462156, 0.23954074824440405, 0.24104101437205672, 0.24890684921638404, 0.26207465999062884, 0.26808795634964977, 0.277038203273279, 0.2851649217520574, 0.29311661183343196, 0.30091283416758396, 0.3014824147818021, 0.31193291258780975, 0.3158440146398777, 0.32340964721522186, 0.3312823232621569, 0.3465017135924493, 0.3470263937261575, 0.34826296572087867, 0.35628007781263044, 0.3602575395598794, 0.37437239034975406, 0.3827271363438317, 0.39173677609681057, 0.3976257564733917, 0.4108921701390965, 0.4165563515820522, 0.4178219639077955, 0.4259196695665972, 0.4259196695665972, 0.43118694216957637, 0.43421993675725906, 0.4396378011236588, 0.4453168186818992, 0.4592734073796983, 0.4727789007679474, 0.4727789007679474, 0.47562479045661676, 0.47562479045661676, 0.4856235806338476, 0.4892690407231838, 0.4892690407231838, 0.49616111223217074, 0.49616111223217074, 0.49616111223217074, 0.49616111223217074, 0.49616111223217074, 0.49616111223217074, 0.49616111223217074, 0.5059844878731689, 0.5059844878731689, 0.5105631029950217, 0.5170999557759104, 0.5170999557759104, 0.5170999557759104, 0.5170999557759104, 0.5170999557759104, 0.5170999557759104, 0.525631295344284, 0.525631295344284, 0.525631295344284, 0.546422156893281, 0.546422156893281, 0.546422156893281, 0.5530735432001619, 0.5530735432001619, 0.5530735432001619, 0.5530735432001619, 0.5530735432001619, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243, 0.5616552599490243]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_4
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (80, 2666), (647, 331), (80, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19436.0)
('VALIDATE SUM PROTEIN TEST: ', 2616.0)
((647, 331), (647, 331), 87688.336, 57914.0)
('Error: ', tensor(47498.7500, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5064472602224153, 0.27288906525101714)
('Val: AUC, AUPR, Erros: ', 0.519133996077114, 0.2786546412365231, 5932.0283)
('Test: AUC, AUPR, Erros: ', 0.4925356718933586, 0.28674152776651674, 6016.0127)
((647, 331), (647, 331), 69549.734, 57914.0)
('Error: ', tensor(41851.5156, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6018396790388179, 0.3495562286427553)
('Val: AUC, AUPR, Erros: ', 0.6168558782003686, 0.36961965531599467, 5184.799)
('Test: AUC, AUPR, Erros: ', 0.573004222782051, 0.34468390378037805, 5449.19)
((647, 331), (647, 331), 62030.45, 57914.0)
('Error: ', tensor(39890.3594, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6685722266083943, 0.4481373866564001)
('Val: AUC, AUPR, Erros: ', 0.6830503159310722, 0.4691283974903048, 4944.011)
('Test: AUC, AUPR, Erros: ', 0.6379965739854966, 0.43885061852805796, 5246.2725)
((647, 331), (647, 331), 67617.6, 57914.0)
('Error: ', tensor(38916.2891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6975194201584853, 0.4964215067976735)
('Val: AUC, AUPR, Erros: ', 0.7082255473920365, 0.5120484611154963, 4821.554)
('Test: AUC, AUPR, Erros: ', 0.6692314261623394, 0.49175639022497186, 5096.251)
((647, 331), (647, 331), 67675.09, 57914.0)
('Error: ', tensor(37821.8828, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7147533239015648, 0.5203730843510406)
('Val: AUC, AUPR, Erros: ', 0.7217219255920939, 0.5304326381707369, 4690.406)
('Test: AUC, AUPR, Erros: ', 0.6885741780272654, 0.5192862448420428, 4960.453)
((647, 331), (647, 331), 68273.97, 57914.0)
('Error: ', tensor(36976.1484, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7250619824072985, 0.5339297768152683)
('Val: AUC, AUPR, Erros: ', 0.7289676642741743, 0.5393969666323339, 4591.3823)
('Test: AUC, AUPR, Erros: ', 0.7002427914884255, 0.5347730411107592, 4853.8115)
((647, 331), (647, 331), 67810.086, 57914.0)
('Error: ', tensor(36323.1992, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7319445280489313, 0.5431064490067891)
('Val: AUC, AUPR, Erros: ', 0.7334995594573119, 0.544934239774265, 4518.496)
('Test: AUC, AUPR, Erros: ', 0.7074034196541152, 0.5442208445165447, 4778.886)
((647, 331), (647, 331), 67022.23, 57914.0)
('Error: ', tensor(35864.4492, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7369130764195025, 0.5500030945048026)
('Val: AUC, AUPR, Erros: ', 0.7365317407938118, 0.5485734960122437, 4471.0933)
('Test: AUC, AUPR, Erros: ', 0.7117776373908313, 0.5500238632141281, 4732.762)
((647, 331), (647, 331), 66164.945, 57914.0)
('Error: ', tensor(35536.9922, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7407558486240448, 0.555538943191995)
('Val: AUC, AUPR, Erros: ', 0.7387413690880046, 0.5512455677923713, 4440.651)
('Test: AUC, AUPR, Erros: ', 0.7145987892915129, 0.5536436733386079, 4705.43)
((647, 331), (647, 331), 65488.758, 57914.0)
('Error: ', tensor(35298.1641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7439016099430044, 0.560162337076532)
('Val: AUC, AUPR, Erros: ', 0.7404180834105092, 0.5533319721042573, 4421.26)
('Test: AUC, AUPR, Erros: ', 0.7164550221711099, 0.5557266147436493, 4689.9053)
((647, 331), (647, 331), 64974.285, 57914.0)
('Error: ', tensor(35112.3281, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.746546560926362, 0.5641528753535305)
('Val: AUC, AUPR, Erros: ', 0.7417245136425128, 0.5550676119195113, 4408.328)
('Test: AUC, AUPR, Erros: ', 0.7177218052156903, 0.5568419126299923, 4681.0664)
((647, 331), (647, 331), 64703.7, 57914.0)
('Error: ', tensor(34965.1172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7488465335372589, 0.5676669438437203)
('Val: AUC, AUPR, Erros: ', 0.7427499483719151, 0.5565510112239391, 4399.827)
('Test: AUC, AUPR, Erros: ', 0.7185984317345553, 0.557819988547819, 4676.2417)
((647, 331), (647, 331), 64573.63, 57914.0)
('Error: ', tensor(34839.8555, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7509155314878899, 0.5708145599522101)
('Val: AUC, AUPR, Erros: ', 0.7436425337587718, 0.5575952662015772, 4393.4736)
('Test: AUC, AUPR, Erros: ', 0.7192039097478106, 0.5586398218067001, 4673.6196)
((647, 331), (647, 331), 64381.176, 57914.0)
('Error: ', tensor(34720.0898, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7527995367947362, 0.5737004553863395)
('Val: AUC, AUPR, Erros: ', 0.7444035071236575, 0.5584496383144948, 4387.599)
('Test: AUC, AUPR, Erros: ', 0.719647875157613, 0.559135333369241, 4671.837)
((647, 331), (647, 331), 64332.094, 57914.0)
('Error: ', tensor(34614.9453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7545439610028888, 0.5763985463957211)
('Val: AUC, AUPR, Erros: ', 0.7450516934153222, 0.5591492175140593, 4383.075)
('Test: AUC, AUPR, Erros: ', 0.7199577807746094, 0.5595145179075269, 4671.07)
((647, 331), (647, 331), 64325.984, 57914.0)
('Error: ', tensor(34517.2617, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.756180741613873, 0.5789518080247965)
('Val: AUC, AUPR, Erros: ', 0.7456243996167049, 0.5597706338257571, 4379.285)
('Test: AUC, AUPR, Erros: ', 0.7201746940782208, 0.5598103616641861, 4670.8555)
((647, 331), (647, 331), 64355.15, 57914.0)
('Error: ', tensor(34426.4570, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7577287853005882, 0.581369448787729)
('Val: AUC, AUPR, Erros: ', 0.7461520885603647, 0.5603665828351273, 4375.85)
('Test: AUC, AUPR, Erros: ', 0.7202892429504981, 0.5599257746541879, 4671.1875)
Train: 0.7577 0.5814
Test: 0.7203 0.5599
[0.532978904927424, 0.5144059109888096, 0.5159962100814144, 0.5174635412377149, 0.5250113571114938, 0.5270595597202412, 0.5326361393059803, 0.548562636786367, 0.557194876093719, 0.5616254035331147, 0.5670218861044937, 0.5697492778245377, 0.5735516490783273, 0.5751721393593217, 0.5835941407645587, 0.5913576814802612, 0.5978371733523873, 0.6027752733162419, 0.6080308186380332, 0.610851894690015, 0.6116272124955989, 0.6168417458894189, 0.6213329446421249, 0.6257761099594311, 0.62770297916072, 0.6319385890501003, 0.6351417214470245, 0.6365111592736805, 0.638516713539171, 0.639596386196095, 0.645728859377826, 0.6488927720089253, 0.6535745230652591, 0.6579432778876338, 0.6632278513693002, 0.6658802607168363, 0.6670766163021933, 0.6708574322404837, 0.6708574322404837, 0.6738784486737281, 0.6754695655659351, 0.6783158867454602, 0.6798423297887205, 0.6859980132819146, 0.6900579362368375, 0.6900579362368375, 0.6910905928472109, 0.6910905928472109, 0.6940188121857993, 0.6955955123725248, 0.6955955123725248, 0.6990481721377244, 0.6990481721377244, 0.6990481721377244, 0.6990481721377244, 0.6990481721377244, 0.6990481721377244, 0.6990481721377244, 0.7027401998999172, 0.7027401998999172, 0.7047637655481238, 0.7065874506640035, 0.7065874506640035, 0.7065874506640035, 0.7065874506640035, 0.7065874506640035, 0.7065874506640035, 0.7088323756366588, 0.7088323756366588, 0.7088323756366588, 0.7156651779359304, 0.7156651779359304, 0.7156651779359304, 0.717880346093988, 0.717880346093988, 0.717880346093988, 0.717880346093988, 0.717880346093988, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981, 0.7202892429504981]
[0.13924963451797573, 0.1443220317742652, 0.14915699721014505, 0.14943518288935798, 0.15808671479303563, 0.16328124402660502, 0.16999734931029797, 0.18916823556952475, 0.2014160907474692, 0.20873621129152814, 0.21510594545202844, 0.21842283588876155, 0.22217249553111568, 0.2238491662877118, 0.2385606627075249, 0.2517197356597582, 0.2613566565632466, 0.2662648008203104, 0.27719369085638745, 0.282984371421487, 0.28386741248938896, 0.2916231050422072, 0.29970201736114793, 0.3078398634585322, 0.3112319675396995, 0.31965350478518745, 0.3263666760490954, 0.32935355544812894, 0.3345897680316308, 0.337498644381247, 0.3515845140266711, 0.3602508666508476, 0.37052904093778644, 0.380761578928319, 0.3959439350270899, 0.4016065247869015, 0.4041297195007219, 0.41115620292794697, 0.41115620292794697, 0.42285331190816033, 0.4271174341308263, 0.43469223203446516, 0.4393825999532284, 0.45733399887520065, 0.4671725973215397, 0.4671725973215397, 0.4696245009873673, 0.4696245009873673, 0.4771926581156436, 0.4820156106100334, 0.4820156106100334, 0.49135170588588023, 0.49135170588588023, 0.49135170588588023, 0.49135170588588023, 0.49135170588588023, 0.49135170588588023, 0.49135170588588023, 0.5029745044225824, 0.5029745044225824, 0.50896580511748, 0.514255444965892, 0.514255444965892, 0.514255444965892, 0.514255444965892, 0.514255444965892, 0.514255444965892, 0.5215538464760414, 0.5215538464760414, 0.5215538464760414, 0.5457236065941118, 0.5457236065941118, 0.5457236065941118, 0.5522436113738227, 0.5522436113738227, 0.5522436113738227, 0.5522436113738227, 0.5522436113738227, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879, 0.5599257746541879]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_5
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19621.0)
('VALIDATE SUM PROTEIN TEST: ', 2591.0)
((646, 331), (646, 331), 55058.484, 58297.0)
('Error: ', tensor(42964.1016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5038099817610207, 0.27189175836749263)
('Val: AUC, AUPR, Erros: ', 0.5071220922618073, 0.2749885162293463, 5421.2764)
('Test: AUC, AUPR, Erros: ', 0.5193266292146461, 0.2756951911848794, 5319.393)
((646, 331), (646, 331), 63862.91, 58297.0)
('Error: ', tensor(40907.1328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6355257975003937, 0.39495851673645377)
('Val: AUC, AUPR, Erros: ', 0.6302321411573304, 0.38809429959581304, 5176.815)
('Test: AUC, AUPR, Erros: ', 0.6523482951645625, 0.4126928768723316, 5049.537)
((646, 331), (646, 331), 64881.285, 58297.0)
('Error: ', tensor(39636.6914, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6883874114399542, 0.4604075664367776)
('Val: AUC, AUPR, Erros: ', 0.6857778008785077, 0.4580929136081105, 5010.628)
('Test: AUC, AUPR, Erros: ', 0.700209498877531, 0.47193127511142363, 4896.522)
