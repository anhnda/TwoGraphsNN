class Net52(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net52, self).__init__()

        self.convD1 = GCNConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = GCNConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD3 = GCNConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.L1C = Linear(config.CHEM_FINGERPRINT_SIZE + config.EMBED_DIM, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv1g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=1)
        self.conv2 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv2g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=1)
        self.conv3 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv3g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=1)

        self.conv4 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv4g = GATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool4 = TopKPooling(config.EMBED_DIM, ratio=1)

        self.conv5 = EATConv(config.EMBED_DIM, config.EMBED_DIM, extProb=config.CROSS_PROB)
        self.conv5g = GATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool5 = TopKPooling(config.EMBED_DIM, ratio=1)

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, proteinNodes, proteinWeight, drugGraphBatch, nDrug,
                drugFeatures=None):

        xAtomProtein, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch
        xAtomProtein = self.nodesEmbedding(xAtomProtein)
        xAtomProtein = xAtomProtein.squeeze(1)

        xAtomProtein = F.relu(self.conv1g(xAtomProtein, edge_index))
        xAtomProtein, edge_index, _, batch, _, _ = self.pool1(xAtomProtein, edge_index, None, batch)
        x1 = torch.cat([gmp(xAtomProtein, batch), gap(xAtomProtein, batch)], dim=1)

        xAtomProtein = F.relu(self.conv2g(xAtomProtein, edge_index))
        xAtomProtein, edge_index, _, batch, _, _ = self.pool2(xAtomProtein, edge_index, None, batch)
        x2 = torch.cat([gmp(xAtomProtein, batch), gap(xAtomProtein, batch)], dim=1)

        xAtomProtein = F.relu(self.conv3g(xAtomProtein, edge_index))
        xAtomProtein, edge_index, _, batch, _, _ = self.pool3(xAtomProtein, edge_index, None, batch)
        x3 = torch.cat([gmp(xAtomProtein, batch), gap(xAtomProtein, batch)], dim=1)

        xDrugProtein = x1 + x2 + x3
        xDrugProtein = self.lin1(xDrugProtein)
        xDrugProtein = self.act1(xDrugProtein)

        # xDrug = self.lin2(xDrug)
        # xDrug = self.act2(xDrug)

        nProtein = len(proteinNodes)
        x = self.nodesEmbedding(x[nDrug + nProtein:])

        x = x.squeeze(1)

        x = torch.cat((xDrugProtein, x), dim=0)

        # Conv Drug:
        x = self.convD1(x, drugEdges)
        x = F.relu(x)
        x = self.convD2(x, drugEdges)
        x = F.relu(x)

        # x = self.convD3(x, drugEdges)
        # x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', True)
('Protein Test: ', True)
('Inner Graph, Outer Graph, Se Graph: ', False, True, False)
('Drug Features: ', True)
('Combine Features: ', False)
('Inner mode: ', False)
('Cross Prob: ', 0.0)
('Inner Level: ', 0)
MPNNX
<models.MPNNXP5.MPNNXP5 object at 0x7f7f9f9979d0>
('Manual torch seed: ', 1772727637)
('Config: ', 'Protein Test: ', True, 'KNN: ', 2)
KFold: 5 x 10
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19463.0)
('VALIDATE SUM PROTEIN TEST: ', 2334.0)
((646, 331), (646, 331), 25153.643, 59640.0)
('Error: ', tensor(48441.1875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5487789822048353, 0.3097605546342979)
('Val: AUC, AUPR, Erros: ', 0.4844388756106518, 0.23311961398283668, 5240.0625)
('Test: AUC, AUPR, Erros: ', 0.5477720547262117, 0.27612587975565445, 5742.7563)
((646, 331), (646, 331), 62988.59, 59640.0)
('Error: ', tensor(41696.0625, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6167665110709745, 0.37396638035614743)
('Val: AUC, AUPR, Erros: ', 0.5688021397063655, 0.29877649379868976, 5032.2)
('Test: AUC, AUPR, Erros: ', 0.6076732782196638, 0.3255360321876746, 5165.3145)
((646, 331), (646, 331), 66349.34, 59640.0)
('Error: ', tensor(40260.9648, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6645800594494808, 0.4295231396775734)
('Val: AUC, AUPR, Erros: ', 0.622310664114128, 0.34581663986687644, 4923.3076)
('Test: AUC, AUPR, Erros: ', 0.651425754540053, 0.3705186657831531, 5041.149)
((646, 331), (646, 331), 72041.484, 59640.0)
('Error: ', tensor(38858.2188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7080276198089352, 0.4919971880105378)
('Val: AUC, AUPR, Erros: ', 0.6696630603294571, 0.39682117961947694, 4897.7837)
('Test: AUC, AUPR, Erros: ', 0.6914666468320558, 0.425767159223438, 4954.591)
((646, 331), (646, 331), 71491.27, 59640.0)
('Error: ', tensor(36904.2305, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7415068830717867, 0.5477687841310255)
('Val: AUC, AUPR, Erros: ', 0.7078593409421118, 0.44503621024916395, 4732.6484)
('Test: AUC, AUPR, Erros: ', 0.7223157047698007, 0.48116947003763655, 4750.3984)
((646, 331), (646, 331), 73345.234, 59640.0)
('Error: ', tensor(36025.0820, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7595978353158918, 0.5784470144366196)
('Val: AUC, AUPR, Erros: ', 0.7265738467676073, 0.47765042452367146, 4795.808)
('Test: AUC, AUPR, Erros: ', 0.7355859251792689, 0.5100431106007977, 4783.4727)
((646, 331), (646, 331), 61173.64, 59640.0)
('Error: ', tensor(35000.5938, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7621103152234635, 0.5836846997887777)
('Val: AUC, AUPR, Erros: ', 0.7314084344895623, 0.4845728165825994, 4333.1885)
('Test: AUC, AUPR, Erros: ', 0.7410605447168994, 0.5171272354492431, 4459.2134)
((646, 331), (646, 331), 61044.934, 59640.0)
('Error: ', tensor(34323.0898, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7719887404538264, 0.602218256357553)
('Val: AUC, AUPR, Erros: ', 0.7332230169294068, 0.4891250530800065, 4411.051)
('Test: AUC, AUPR, Erros: ', 0.7434546613692288, 0.5207138121499175, 4513.5005)
((646, 331), (646, 331), 67504.74, 59640.0)
('Error: ', tensor(34161.2383, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7787807629157787, 0.6153015360953339)
('Val: AUC, AUPR, Erros: ', 0.7284253679636463, 0.4762466032451652, 4877.781)
('Test: AUC, AUPR, Erros: ', 0.7407200750117666, 0.5040492577517945, 4905.044)
((646, 331), (646, 331), 66841.45, 59640.0)
('Error: ', tensor(33886.2070, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.781783125812672, 0.6208093713217586)
('Val: AUC, AUPR, Erros: ', 0.72545680061751, 0.4661511244485298, 5040.985)
('Test: AUC, AUPR, Erros: ', 0.738677484032513, 0.4972756006313632, 4997.6406)
((646, 331), (646, 331), 66671.67, 59640.0)
('Error: ', tensor(33698., grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7841894294110949, 0.6249784156541767)
('Val: AUC, AUPR, Erros: ', 0.723179366015447, 0.45608704699928326, 5255.189)
('Test: AUC, AUPR, Erros: ', 0.7365743214990348, 0.49130845832860426, 5108.7256)
((646, 331), (646, 331), 66600.94, 59640.0)
('Error: ', tensor(33543.6719, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7861732403944636, 0.6283802771925256)
('Val: AUC, AUPR, Erros: ', 0.7210023312476713, 0.4463997685113631, 5507.056)
('Test: AUC, AUPR, Erros: ', 0.7336959534508039, 0.48478301541446844, 5235.615)
((646, 331), (646, 331), 66567.53, 59640.0)
('Error: ', tensor(33406.1641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7878956315537542, 0.6313198337803206)
('Val: AUC, AUPR, Erros: ', 0.7188466998461923, 0.43727062414840917, 5788.195)
('Test: AUC, AUPR, Erros: ', 0.7303607448714016, 0.4776117978496983, 5377.59)
((646, 331), (646, 331), 66374.56, 59640.0)
('Error: ', tensor(33268.5547, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.789384686647551, 0.6339287427932294)
('Val: AUC, AUPR, Erros: ', 0.7167827245284534, 0.4291946629127532, 6077.9165)
('Test: AUC, AUPR, Erros: ', 0.7267588836596184, 0.4701643722623694, 5519.711)
((646, 331), (646, 331), 66129.32, 59640.0)
('Error: ', tensor(33131.6953, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7907572133669802, 0.6363622898940429)
('Val: AUC, AUPR, Erros: ', 0.7147896772111564, 0.4218646549831114, 6392.9453)
('Test: AUC, AUPR, Erros: ', 0.7233804756439731, 0.4626479826818854, 5677.3667)
((646, 331), (646, 331), 66291.85, 59640.0)
('Error: ', tensor(33027.2656, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7920282867697235, 0.6386464032985284)
('Val: AUC, AUPR, Erros: ', 0.7127352839263071, 0.41529789395856465, 6779.0693)
('Test: AUC, AUPR, Erros: ', 0.7201780793594132, 0.4549741356696848, 5883.3325)
((646, 331), (646, 331), 65994.26, 59640.0)
('Error: ', tensor(32898.9766, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7931860381500432, 0.6407130817937033)
('Val: AUC, AUPR, Erros: ', 0.7110498163719242, 0.4099149160683994, 7143.187)
('Test: AUC, AUPR, Erros: ', 0.7175245316237476, 0.4482330379801474, 6064.7314)
Train: 0.7621 0.5837
Test: 0.7411 0.5171
[0.6105764013523102, 0.6321396615027008, 0.6339599086403688, 0.6318237994863454, 0.6379819910302983, 0.6365816190013939, 0.6417140164355276, 0.6476510202324208, 0.6525860009477443, 0.6509962163494296, 0.6555817973247748, 0.6582547447877728, 0.6597183111740273, 0.6604138372333865, 0.662373654047888, 0.6642177859299869, 0.6656514569587022, 0.6703717500541504, 0.6715654680870301, 0.6730889321711586, 0.6732255963237559, 0.6760208541353452, 0.6776776286281683, 0.6809224147450591, 0.6820647182614447, 0.6830412802070889, 0.6847156743411253, 0.6851142094395236, 0.6871655955570438, 0.6878006831450567, 0.6918381229592352, 0.6932419634354339, 0.6966150877780629, 0.6979287633188307, 0.700775742955446, 0.7020619588653013, 0.7027514714883719, 0.705523315668048, 0.705523315668048, 0.7070237275743914, 0.7074542857635973, 0.7089768133771472, 0.709938190357833, 0.7136416829128353, 0.716515692047231, 0.716515692047231, 0.7174573174444563, 0.7174573174444563, 0.7194866879196153, 0.7207275866605775, 0.7207275866605775, 0.7229362056780851, 0.7229362056780851, 0.7229362056780851, 0.7229362056780851, 0.7229362056780851, 0.7229362056780851, 0.7229362056780851, 0.7256591901855068, 0.7256591901855068, 0.7269747408356382, 0.7284642909026078, 0.7284642909026078, 0.7284642909026078, 0.7284642909026078, 0.7284642909026078, 0.7284642909026078, 0.7303522270252357, 0.7303522270252357, 0.7303522270252357, 0.7365636397620908, 0.7365636397620908, 0.7365636397620908, 0.7385464126010868, 0.7385464126010868, 0.7385464126010868, 0.7385464126010868, 0.7385464126010868, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994, 0.7410605447168994]
[0.14668866207217335, 0.15968452938306976, 0.1710998303203959, 0.17485942121663356, 0.18105353130402652, 0.18349438577755792, 0.1945638766478998, 0.2079933992088691, 0.2202333324475756, 0.21871676449969057, 0.23034340185523394, 0.2364051369251282, 0.24360327575770502, 0.24678060082511522, 0.2544567514945953, 0.2634183203044982, 0.26998744518170503, 0.28298659683301625, 0.28607507620871936, 0.2931559011247254, 0.29314374148400285, 0.30286541905223147, 0.3090464860064747, 0.3184059307180571, 0.3223204432904357, 0.3259664407458134, 0.33152819413678625, 0.33299975591777764, 0.33990474897753076, 0.34276271989295504, 0.35524164319204954, 0.3590917763079351, 0.36963562598323496, 0.3739499560914481, 0.3834804157750643, 0.3884490552532117, 0.3902288906418448, 0.39827139835388203, 0.39827139835388203, 0.40367494620041955, 0.40441659635147215, 0.40831537415108426, 0.4118332457726754, 0.42478839000764396, 0.43505053959291023, 0.43505053959291023, 0.4379248852637105, 0.4379248852637105, 0.44381225957385806, 0.4478628940390124, 0.4478628940390124, 0.4545744506936455, 0.4545744506936455, 0.4545744506936455, 0.4545744506936455, 0.4545744506936455, 0.4545744506936455, 0.4545744506936455, 0.46401545079890166, 0.46401545079890166, 0.4690821237272193, 0.47359882943396875, 0.47359882943396875, 0.47359882943396875, 0.47359882943396875, 0.47359882943396875, 0.47359882943396875, 0.47983574581962296, 0.47983574581962296, 0.47983574581962296, 0.5019288667576993, 0.5019288667576993, 0.5019288667576993, 0.5086751419660172, 0.5086751419660172, 0.5086751419660172, 0.5086751419660172, 0.5086751419660172, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431, 0.5171272354492431]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19245.0)
('VALIDATE SUM PROTEIN TEST: ', 2846.0)
((646, 331), (646, 331), 23376.373, 59364.0)
('Error: ', tensor(48990.4844, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5380812279911072, 0.29866121820632074)
('Val: AUC, AUPR, Erros: ', 0.5555153976756276, 0.30578701715474055, 5984.365)
('Test: AUC, AUPR, Erros: ', 0.47468950837022594, 0.22675446618593526, 5302.4976)
((646, 331), (646, 331), 57674.895, 59364.0)
('Error: ', tensor(42897.9141, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5616746435773209, 0.3194539853869807)
('Val: AUC, AUPR, Erros: ', 0.5834531242367607, 0.34419594426116057, 5199.8525)
('Test: AUC, AUPR, Erros: ', 0.4986367394592244, 0.24332844150581923, 5127.318)
((646, 331), (646, 331), 58942.29, 59364.0)
('Error: ', tensor(42543.2734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5749320788689493, 0.3298050947485566)
('Val: AUC, AUPR, Erros: ', 0.5971567796353681, 0.36131394385496984, 5157.9536)
('Test: AUC, AUPR, Erros: ', 0.5138640179055867, 0.2520177566078508, 5081.8115)
((646, 331), (646, 331), 61641.664, 59364.0)
('Error: ', tensor(42138.5547, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5929721357085036, 0.3456241535744153)
('Val: AUC, AUPR, Erros: ', 0.6155852732782481, 0.38683284407221746, 5105.3003)
('Test: AUC, AUPR, Erros: ', 0.5360981414085133, 0.2668645458894211, 5056.9097)
((646, 331), (646, 331), 63523.812, 59364.0)
('Error: ', tensor(41639.1484, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6145657425635335, 0.3672016942739849)
('Val: AUC, AUPR, Erros: ', 0.6359179326968353, 0.41418575609195873, 5046.332)
('Test: AUC, AUPR, Erros: ', 0.564023810043855, 0.2867180492827476, 5008.0264)
((646, 331), (646, 331), 66215.625, 59364.0)
('Error: ', tensor(41002.1367, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6406751001165151, 0.3981788190164994)
('Val: AUC, AUPR, Erros: ', 0.6595685289227533, 0.4468061430573466, 4972.0566)
('Test: AUC, AUPR, Erros: ', 0.5998245203391126, 0.3171844314332881, 4950.814)
((646, 331), (646, 331), 68316.47, 59364.0)
('Error: ', tensor(40239.1250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6657818718820372, 0.43421900003987013)
('Val: AUC, AUPR, Erros: ', 0.6818143599022884, 0.4791780033205364, 4881.166)
('Test: AUC, AUPR, Erros: ', 0.6353073120558956, 0.3554305709359594, 4866.593)
((646, 331), (646, 331), 67315.37, 59364.0)
('Error: ', tensor(39181.2656, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6878967716969555, 0.4696501002204543)
('Val: AUC, AUPR, Erros: ', 0.7004687477784673, 0.5062232498371726, 4756.7695)
('Test: AUC, AUPR, Erros: ', 0.667244406200141, 0.397908645180299, 4694.1514)
((646, 331), (646, 331), 66356.28, 59364.0)
('Error: ', tensor(38264.9531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7036334593698509, 0.49649036942117425)
('Val: AUC, AUPR, Erros: ', 0.713408410636216, 0.5259642755668705, 4648.014)
('Test: AUC, AUPR, Erros: ', 0.6900962001949875, 0.43324479966933166, 4551.396)
((646, 331), (646, 331), 65776.234, 59364.0)
('Error: ', tensor(37570.9805, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.714358882485151, 0.5151308202037519)
('Val: AUC, AUPR, Erros: ', 0.721964874410999, 0.5395203452332038, 4566.1875)
('Test: AUC, AUPR, Erros: ', 0.705465004762608, 0.45870306227842655, 4450.235)
((646, 331), (646, 331), 64374.88, 59364.0)
('Error: ', tensor(37033.9180, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.721779655790918, 0.5279758517617048)
('Val: AUC, AUPR, Erros: ', 0.7276373366412496, 0.5485486633704115, 4505.015)
('Test: AUC, AUPR, Erros: ', 0.7155058031880406, 0.47585175061213714, 4358.116)
((646, 331), (646, 331), 64373.69, 59364.0)
('Error: ', tensor(36722.8867, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.726877725795693, 0.5363809882256234)
('Val: AUC, AUPR, Erros: ', 0.7314220961920626, 0.5543967692205514, 4472.239)
('Test: AUC, AUPR, Erros: ', 0.7217751072586139, 0.4861896306363057, 4319.942)
((646, 331), (646, 331), 63701.527, 59364.0)
('Error: ', tensor(36466.6328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7307710645192892, 0.5425239521060479)
('Val: AUC, AUPR, Erros: ', 0.734178193766772, 0.5582826938904999, 4447.35)
('Test: AUC, AUPR, Erros: ', 0.726092967654084, 0.49317328033106345, 4277.0103)
((646, 331), (646, 331), 63474.527, 59364.0)
('Error: ', tensor(36283.4023, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7337892340290769, 0.5471462456757039)
('Val: AUC, AUPR, Erros: ', 0.736030812947553, 0.5607360071633392, 4433.0903)
('Test: AUC, AUPR, Erros: ', 0.7292151580013964, 0.49789239356779585, 4250.414)
((646, 331), (646, 331), 63385.82, 59364.0)
('Error: ', tensor(36143.3477, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7361299964741913, 0.5507856767362581)
('Val: AUC, AUPR, Erros: ', 0.737407082749195, 0.562380294238108, 4423.8804)
('Test: AUC, AUPR, Erros: ', 0.7312926700265955, 0.5008973385356844, 4233.115)
((646, 331), (646, 331), 63365.23, 59364.0)
('Error: ', tensor(36025.5859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7381080527229179, 0.5538855969630769)
('Val: AUC, AUPR, Erros: ', 0.7383365192017136, 0.5633680448634282, 4418.562)
('Test: AUC, AUPR, Erros: ', 0.7328362078422959, 0.5029221000894306, 4220.8174)
((646, 331), (646, 331), 63188.85, 59364.0)
('Error: ', tensor(35919.1602, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7397818505687288, 0.5565554859026934)
('Val: AUC, AUPR, Erros: ', 0.7389646225727842, 0.5638865579673485, 4414.458)
('Test: AUC, AUPR, Erros: ', 0.7339777232987398, 0.5044367999212022, 4208.4893)
Train: 0.7398 0.5566
Test: 0.7340 0.5044
[0.5368047187779376, 0.5369350070275771, 0.5359737221217765, 0.5365039470519786, 0.5411474717180205, 0.5450807553786778, 0.5521322716513484, 0.5679697835282363, 0.5732972231285842, 0.5746894546160517, 0.5833901217133888, 0.5880436111438153, 0.5921119358474609, 0.5940420889022142, 0.6021014350150224, 0.6077330094690799, 0.6109709087600707, 0.6163670303903113, 0.6214661431532981, 0.624663677369765, 0.625529143770399, 0.629748230023492, 0.6350908296836268, 0.6391959856319245, 0.6414107349780007, 0.6466486294824306, 0.6486124646530002, 0.6496459002733973, 0.6520015198725009, 0.6535671812431824, 0.6606742115153914, 0.6648820032733963, 0.6687784304675344, 0.6713183564449715, 0.6749858204419573, 0.677384288847, 0.6792464855896481, 0.68407997366558, 0.68407997366558, 0.6873327198766097, 0.6891443124619336, 0.6906496219110374, 0.6926618887274693, 0.6976312255228128, 0.7015206781485969, 0.7015206781485969, 0.7024540684942204, 0.7024540684942204, 0.7059408954723642, 0.707469710870198, 0.707469710870198, 0.7107395316539321, 0.7107395316539321, 0.7107395316539321, 0.7107395316539321, 0.7107395316539321, 0.7107395316539321, 0.7107395316539321, 0.71425111958099, 0.71425111958099, 0.7159217679447747, 0.7180415322598539, 0.7180415322598539, 0.7180415322598539, 0.7180415322598539, 0.7180415322598539, 0.7180415322598539, 0.7207539312447041, 0.7207539312447041, 0.7207539312447041, 0.7282466337465928, 0.7282466337465928, 0.7282466337465928, 0.7308080477572002, 0.7308080477572002, 0.7308080477572002, 0.7308080477572002, 0.7308080477572002, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398, 0.7339777232987398]
[0.11847510592915805, 0.12046559637955442, 0.12369526287783696, 0.12591023335407683, 0.1329793217301632, 0.13630087060415963, 0.14212329121343392, 0.1566426963254618, 0.15941633701186134, 0.16218975698153526, 0.17317946481746038, 0.18080466621080873, 0.18477621258265045, 0.1879711167047611, 0.19917225565630473, 0.20760526601198956, 0.21115063587610947, 0.21980322523558724, 0.22643766896954387, 0.23424275700461406, 0.2353746701280546, 0.24442032107828437, 0.2543705428795955, 0.2617696575599402, 0.26636829373254556, 0.2763435657405139, 0.28122386219806794, 0.28240235217223175, 0.2866278192505233, 0.2905540312907544, 0.3056367247330583, 0.31537529181846624, 0.32294210029177506, 0.3298248109453526, 0.3391337227179262, 0.34470904327697116, 0.3499144902966316, 0.35919629171708645, 0.35919629171708645, 0.367441750479881, 0.3708325524037168, 0.3739115622690604, 0.3800583036510921, 0.39293394995282793, 0.40261591350357334, 0.40261591350357334, 0.40426169520583966, 0.40426169520583966, 0.41496837588819596, 0.41959057064777955, 0.41959057064777955, 0.4286110392879063, 0.4286110392879063, 0.4286110392879063, 0.4286110392879063, 0.4286110392879063, 0.4286110392879063, 0.4286110392879063, 0.43949269465166474, 0.43949269465166474, 0.4439223771172048, 0.45036961358509053, 0.45036961358509053, 0.45036961358509053, 0.45036961358509053, 0.45036961358509053, 0.45036961358509053, 0.45977265444768245, 0.45977265444768245, 0.45977265444768245, 0.48398246382942134, 0.48398246382942134, 0.48398246382942134, 0.49265203471698593, 0.49265203471698593, 0.49265203471698593, 0.49265203471698593, 0.49265203471698593, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022, 0.5044367999212022]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19732.0)
('VALIDATE SUM PROTEIN TEST: ', 2552.0)
((646, 331), (646, 331), 15388.626, 58006.0)
('Error: ', tensor(50600.0859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5434273960404018, 0.29849136446908425)
('Val: AUC, AUPR, Erros: ', 0.5350367969736527, 0.2919984598839589, 6696.9414)
('Test: AUC, AUPR, Erros: ', 0.5707858978201283, 0.3317945787722955, 6334.939)
((646, 331), (646, 331), 63868.617, 58006.0)
('Error: ', tensor(41699.0391, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5980072406789603, 0.3476511406756878)
('Val: AUC, AUPR, Erros: ', 0.5680719006183138, 0.33649866694005015, 5450.8555)
('Test: AUC, AUPR, Erros: ', 0.6234626360915272, 0.4226281031827054, 5035.4307)
((646, 331), (646, 331), 63878.277, 58006.0)
('Error: ', tensor(39730.9531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6571559258562929, 0.4184972553336535)
('Val: AUC, AUPR, Erros: ', 0.6229282272832305, 0.3978020675662234, 5241.5547)
('Test: AUC, AUPR, Erros: ', 0.6746161825127429, 0.4899872866502038, 4827.081)
((646, 331), (646, 331), 66006.54, 58006.0)
('Error: ', tensor(37912.1992, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7024559238785301, 0.48655275744475435)
('Val: AUC, AUPR, Erros: ', 0.6660326054651402, 0.45909259957285536, 5034.9087)
('Test: AUC, AUPR, Erros: ', 0.711330411034033, 0.5340943828888298, 4617.647)
((646, 331), (646, 331), 65529.91, 58006.0)
('Error: ', tensor(36619.2656, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7265464606246633, 0.5246714024191967)
('Val: AUC, AUPR, Erros: ', 0.6898720185173015, 0.49378405832458105, 4901.2437)
('Test: AUC, AUPR, Erros: ', 0.7294444588343056, 0.5531739495116176, 4483.4995)
((646, 331), (646, 331), 64357.04, 58006.0)
('Error: ', tensor(35977.3555, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7377392773928781, 0.5416711412742006)
('Val: AUC, AUPR, Erros: ', 0.699794643548918, 0.5076872416798675, 4850.632)
('Test: AUC, AUPR, Erros: ', 0.7366437835024713, 0.5609499849497233, 4432.5366)
((646, 331), (646, 331), 64424.793, 58006.0)
('Error: ', tensor(35642.8594, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7444710339008521, 0.5513466987420871)
('Val: AUC, AUPR, Erros: ', 0.7039351485878426, 0.5131111772641623, 4835.9263)
('Test: AUC, AUPR, Erros: ', 0.740035554375587, 0.564759157348045, 4416.2617)
((646, 331), (646, 331), 64883.324, 58006.0)
('Error: ', tensor(35376.2305, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.749898625268022, 0.5591551515380866)
('Val: AUC, AUPR, Erros: ', 0.7060071194426882, 0.5156650641135706, 4834.3125)
('Test: AUC, AUPR, Erros: ', 0.7421455123739279, 0.5669169990955896, 4410.9893)
((646, 331), (646, 331), 66062.48, 58006.0)
('Error: ', tensor(35220.8359, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.754160173605541, 0.565285015877889)
('Val: AUC, AUPR, Erros: ', 0.7066091995645335, 0.5159396877224021, 4847.3003)
('Test: AUC, AUPR, Erros: ', 0.743284288462727, 0.5677172910684135, 4417.416)
((646, 331), (646, 331), 65802.66, 58006.0)
('Error: ', tensor(34840.6250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.760120718693727, 0.5741739241209058)
('Val: AUC, AUPR, Erros: ', 0.7072842149953903, 0.5163231259237849, 4856.656)
('Test: AUC, AUPR, Erros: ', 0.744978115132436, 0.5686224820622756, 4411.696)
((646, 331), (646, 331), 66261.62, 58006.0)
('Error: ', tensor(34559.2031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7653046631352203, 0.5821108978168908)
('Val: AUC, AUPR, Erros: ', 0.7071152954532504, 0.51471242663538, 4885.113)
('Test: AUC, AUPR, Erros: ', 0.7461279205807284, 0.5685645380311822, 4416.5664)
((646, 331), (646, 331), 66308.64, 58006.0)
('Error: ', tensor(34298.2852, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7694700044152926, 0.5887657414672105)
('Val: AUC, AUPR, Erros: ', 0.7067353007852144, 0.5122717219099098, 4916.1953)
('Test: AUC, AUPR, Erros: ', 0.7467521703625696, 0.5679949374509727, 4419.3696)
((646, 331), (646, 331), 66588.125, 58006.0)
('Error: ', tensor(34113.4141, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7727225180539241, 0.5942474109989354)
('Val: AUC, AUPR, Erros: ', 0.706307735898069, 0.5098529233474232, 4955.2456)
('Test: AUC, AUPR, Erros: ', 0.7469924055786177, 0.5670373235276593, 4427.497)
((646, 331), (646, 331), 66604.84, 58006.0)
('Error: ', tensor(33917.1836, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7757733294715399, 0.5992930655452973)
('Val: AUC, AUPR, Erros: ', 0.7058559776686091, 0.5068492799801041, 4996.002)
('Test: AUC, AUPR, Erros: ', 0.747026014507514, 0.5659396851352673, 4432.9253)
((646, 331), (646, 331), 66252.17, 58006.0)
('Error: ', tensor(33723.6016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7782319019105008, 0.6034625403384414)
('Val: AUC, AUPR, Erros: ', 0.7054533064393917, 0.5041297832672073, 5030.8657)
('Test: AUC, AUPR, Erros: ', 0.7466865432101025, 0.5645610128150216, 4435.3696)
((646, 331), (646, 331), 66076.78, 58006.0)
('Error: ', tensor(33560.4570, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.780478365528583, 0.6072344887082364)
('Val: AUC, AUPR, Erros: ', 0.7050417189967545, 0.5011869870661947, 5070.7534)
('Test: AUC, AUPR, Erros: ', 0.7462152122951105, 0.5630650157293933, 4441.094)
((646, 331), (646, 331), 65841.22, 58006.0)
('Error: ', tensor(33420.7422, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7822512355851388, 0.6102307677083626)
('Val: AUC, AUPR, Erros: ', 0.7047547535715756, 0.49885771148948665, 5106.8833)
('Test: AUC, AUPR, Erros: ', 0.7455909097243758, 0.5616015704743926, 4446.1396)
Train: 0.7499 0.5592
Test: 0.7421 0.5669
[0.5884231668367851, 0.6203035806197862, 0.6151331481125354, 0.6146087620567897, 0.616860718656981, 0.6149062480711682, 0.6190540465030103, 0.623046795135938, 0.6285010346563262, 0.6300672990896622, 0.632438153497209, 0.6351613204187366, 0.6355872258701163, 0.6377812321719489, 0.6426076530209529, 0.6449541712428868, 0.6489253332384733, 0.653787300373387, 0.6576472221750057, 0.6602036052407375, 0.6603001717947599, 0.6629444579827652, 0.6652094399680611, 0.6688681004590364, 0.6702159208069776, 0.6762802938238779, 0.6778430465568999, 0.6788049653895525, 0.6812651130889718, 0.6820617503706106, 0.6879288363685936, 0.6899570179329114, 0.6927706769441644, 0.6941997864921432, 0.6977905029898193, 0.6992804142995832, 0.7000873622205197, 0.7032556026589786, 0.7032556026589786, 0.7051679602949134, 0.7061088968482213, 0.7078139445564289, 0.7091991885244829, 0.7132416941005467, 0.7168636535880866, 0.7168636535880866, 0.7173278916359935, 0.7173278916359935, 0.7195839254309995, 0.7203956625552739, 0.7203956625552739, 0.7226780443935166, 0.7226780443935166, 0.7226780443935166, 0.7226780443935166, 0.7226780443935166, 0.7226780443935166, 0.7226780443935166, 0.7258496704572824, 0.7258496704572824, 0.7275442493111645, 0.7292065233389298, 0.7292065233389298, 0.7292065233389298, 0.7292065233389298, 0.7292065233389298, 0.7292065233389298, 0.7313218378872988, 0.7313218378872988, 0.7313218378872988, 0.7380589445859964, 0.7380589445859964, 0.7380589445859964, 0.73990707881172, 0.73990707881172, 0.73990707881172, 0.73990707881172, 0.73990707881172, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279, 0.7421455123739279]
[0.17174854715699342, 0.21415577919070136, 0.2174158705434951, 0.22456462904230268, 0.2363364332341905, 0.24054237132038386, 0.24827126242250716, 0.26424209921041664, 0.26999598587123896, 0.2748769017121959, 0.2792275911000036, 0.28368624071751264, 0.2798945409443365, 0.2854507349406473, 0.2968592971480498, 0.3018883792305276, 0.3112870468534505, 0.3218027549837917, 0.331131625871793, 0.34025400507575965, 0.3412333138449609, 0.3482416709702713, 0.3524259697366975, 0.36231461879703675, 0.3664167356328562, 0.3853655518040104, 0.38830256282686565, 0.3903099554349843, 0.3959584015644264, 0.3980907248414539, 0.41013000254896664, 0.4135365152344222, 0.4223918656795269, 0.42589071187291916, 0.43660596293209397, 0.4412276347763192, 0.4421320957751492, 0.4495551393656762, 0.4495551393656762, 0.4545832464116215, 0.45543943440408957, 0.46071483519821954, 0.46463265951074184, 0.47610027194532856, 0.4864791288745917, 0.4864791288745917, 0.487888931177335, 0.487888931177335, 0.4955595725113062, 0.49746008423555765, 0.49746008423555765, 0.5042040784329302, 0.5042040784329302, 0.5042040784329302, 0.5042040784329302, 0.5042040784329302, 0.5042040784329302, 0.5042040784329302, 0.5145047519731762, 0.5145047519731762, 0.5196382014437466, 0.5250497380207054, 0.5250497380207054, 0.5250497380207054, 0.5250497380207054, 0.5250497380207054, 0.5250497380207054, 0.531792268888149, 0.531792268888149, 0.531792268888149, 0.5539750925636207, 0.5539750925636207, 0.5539750925636207, 0.5595818145580116, 0.5595818145580116, 0.5595818145580116, 0.5595818145580116, 0.5595818145580116, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896, 0.5669169990955896]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_3
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (81, 2666), (647, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19668.0)
('VALIDATE SUM PROTEIN TEST: ', 2359.0)
((647, 331), (647, 331), 24728.717, 57502.0)
('Error: ', tensor(47072.2891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5439188311386018, 0.29407478944934273)
('Val: AUC, AUPR, Erros: ', 0.5288714041244539, 0.3256815559056059, 6319.0317)
('Test: AUC, AUPR, Erros: ', 0.5397019374760953, 0.29128167796716603, 6283.0117)
((647, 331), (647, 331), 57788.277, 57502.0)
('Error: ', tensor(41413.2617, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5905564617629673, 0.3341522518112625)
('Val: AUC, AUPR, Erros: ', 0.5571164544101985, 0.3493029561487701, 5475.734)
('Test: AUC, AUPR, Erros: ', 0.5674677127172806, 0.31752261101779783, 5488.6387)
((647, 331), (647, 331), 59877.594, 57502.0)
('Error: ', tensor(41060.5547, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6057602094071343, 0.3479211206058358)
('Val: AUC, AUPR, Erros: ', 0.5672187346093647, 0.35857036481320265, 5438.574)
('Test: AUC, AUPR, Erros: ', 0.5775942730717101, 0.327207896954426, 5440.489)
((647, 331), (647, 331), 59791.953, 57502.0)
('Error: ', tensor(40692.9219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.619733827970837, 0.361537367038968)
('Val: AUC, AUPR, Erros: ', 0.5779801022991085, 0.3685144184640201, 5406.172)
('Test: AUC, AUPR, Erros: ', 0.5882498620890668, 0.3377476243268669, 5399.761)
((647, 331), (647, 331), 60692.477, 57502.0)
('Error: ', tensor(40321.3555, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6340144306515406, 0.37672737983822857)
('Val: AUC, AUPR, Erros: ', 0.5908070490291383, 0.38015374911943334, 5366.5137)
('Test: AUC, AUPR, Erros: ', 0.6005594018635091, 0.350776039598359, 5353.55)
((647, 331), (647, 331), 61178.188, 57502.0)
('Error: ', tensor(39898.1250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6483023000036232, 0.394023159057902)
('Val: AUC, AUPR, Erros: ', 0.6050226266512297, 0.39420702929586193, 5320.184)
('Test: AUC, AUPR, Erros: ', 0.6142586855192085, 0.367069922103795, 5301.451)
((647, 331), (647, 331), 62310.496, 57502.0)
('Error: ', tensor(39459.5039, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6621366876761184, 0.4130072341283167)
('Val: AUC, AUPR, Erros: ', 0.6191203961318525, 0.41023995142889247, 5269.6445)
('Test: AUC, AUPR, Erros: ', 0.6283530086720253, 0.3858055957167752, 5244.665)
((647, 331), (647, 331), 63172.79, 57502.0)
('Error: ', tensor(38990.6367, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6749359855352454, 0.4328767574157029)
('Val: AUC, AUPR, Erros: ', 0.6324956461423816, 0.4277064262308542, 5215.4463)
('Test: AUC, AUPR, Erros: ', 0.641771786887058, 0.405708916118648, 5185.7)
((647, 331), (647, 331), 63361.16, 57502.0)
('Error: ', tensor(38469.0625, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6867406875285558, 0.4529333636205033)
('Val: AUC, AUPR, Erros: ', 0.6453569630349709, 0.44603040220512036, 5154.829)
('Test: AUC, AUPR, Erros: ', 0.6543583441887948, 0.4262016563883098, 5123.1353)
((647, 331), (647, 331), 66738.93, 57502.0)
('Error: ', tensor(38211.4531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6957636422649319, 0.46960585044966446)
('Val: AUC, AUPR, Erros: ', 0.6551029549160214, 0.462214329190904, 5117.282)
('Test: AUC, AUPR, Erros: ', 0.6637761748938834, 0.442938266945013, 5079.8936)
((647, 331), (647, 331), 61048.992, 57502.0)
('Error: ', tensor(37321.7812, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7070190865110683, 0.48984224060296405)
('Val: AUC, AUPR, Erros: ', 0.6686576297583654, 0.48153457293180524, 5022.248)
('Test: AUC, AUPR, Erros: ', 0.6758655866820604, 0.46445451327610376, 4996.9336)
((647, 331), (647, 331), 64464.316, 57502.0)
('Error: ', tensor(37040.4375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7140900824643756, 0.5027986638418147)
('Val: AUC, AUPR, Erros: ', 0.6761817111335158, 0.49397358246411766, 4981.0615)
('Test: AUC, AUPR, Erros: ', 0.6830119761485485, 0.47767591926196185, 4949.6924)
((647, 331), (647, 331), 62776.777, 57502.0)
('Error: ', tensor(36534.4766, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7209498628749094, 0.5154879454874223)
('Val: AUC, AUPR, Erros: ', 0.6842344954793971, 0.5063633210249436, 4923.884)
('Test: AUC, AUPR, Erros: ', 0.6901074919559358, 0.49098585904327574, 4897.2173)
((647, 331), (647, 331), 63027.83, 57502.0)
('Error: ', tensor(36220.6133, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7263231253615012, 0.5249443917516118)
('Val: AUC, AUPR, Erros: ', 0.6901721585180639, 0.5153783537725187, 4886.4053)
('Test: AUC, AUPR, Erros: ', 0.6953008002455272, 0.5004888511880528, 4860.413)
((647, 331), (647, 331), 62218.863, 57502.0)
('Error: ', tensor(35895.9453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7310077912498302, 0.5330337214599689)
('Val: AUC, AUPR, Erros: ', 0.6955118453634919, 0.5232585405312437, 4850.0693)
('Test: AUC, AUPR, Erros: ', 0.6997152277583518, 0.5084667894741163, 4827.5015)
((647, 331), (647, 331), 62410.78, 57502.0)
('Error: ', tensor(35687.0508, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7347399789476121, 0.5390375673010868)
('Val: AUC, AUPR, Erros: ', 0.6993522786950203, 0.5287643198227827, 4826.239)
('Test: AUC, AUPR, Erros: ', 0.7030730669000232, 0.5140345726956063, 4804.4956)
((647, 331), (647, 331), 61841.816, 57502.0)
('Error: ', tensor(35480.1406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7378666009095334, 0.5440206778750236)
('Val: AUC, AUPR, Erros: ', 0.7025010455962477, 0.5331917432174931, 4804.8906)
('Test: AUC, AUPR, Erros: ', 0.7057924846637712, 0.5185600328470874, 4785.35)
Train: 0.7379 0.5440
Test: 0.7058 0.5186
[0.5326639533097834, 0.5459328127551377, 0.5419178675930877, 0.5440076132689109, 0.5529528944319941, 0.5551061440142603, 0.559038592339579, 0.5621648134224271, 0.5667068565064584, 0.566064014054964, 0.5662029860619687, 0.5689478103944379, 0.5721428349401897, 0.5756211318971267, 0.5813594185637909, 0.584867249703343, 0.5896500205524198, 0.5940508388870808, 0.5981101851067889, 0.6019367143338821, 0.6020226179136781, 0.607098225421307, 0.6101335020627909, 0.6135489850465334, 0.6162503303187272, 0.6219977081394563, 0.6230856221908702, 0.623839285559494, 0.6266802710905282, 0.6277492148401604, 0.6345680931534302, 0.638019195138552, 0.642130590077018, 0.6444034898801184, 0.6498581534910508, 0.652086770826596, 0.6531434839341663, 0.657037490190552, 0.657037490190552, 0.6590357157584109, 0.6606175011688082, 0.6626806038900677, 0.664538017529883, 0.6696493666728092, 0.674355997815028, 0.674355997815028, 0.6757558848420976, 0.6757558848420976, 0.6793004485282446, 0.6807441892548551, 0.6807441892548551, 0.6838263908906379, 0.6838263908906379, 0.6838263908906379, 0.6838263908906379, 0.6838263908906379, 0.6838263908906379, 0.6838263908906379, 0.6872737725740994, 0.6872737725740994, 0.6890065287537765, 0.6910342757771171, 0.6910342757771171, 0.6910342757771171, 0.6910342757771171, 0.6910342757771171, 0.6910342757771171, 0.6936394296119839, 0.6936394296119839, 0.6936394296119839, 0.7008103449422449, 0.7008103449422449, 0.7008103449422449, 0.7031527413020643, 0.7031527413020643, 0.7031527413020643, 0.7031527413020643, 0.7031527413020643, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712, 0.7057924846637712]
[0.14960715675287292, 0.15848594639306712, 0.16098416693801923, 0.16558435604935634, 0.17586736132035993, 0.17992598765570444, 0.18716023374185892, 0.19553504080501188, 0.2061799855169646, 0.20755753400830768, 0.210479131613107, 0.21423975941683662, 0.2197910584198185, 0.2251462358040611, 0.23417641397737174, 0.24076418580837045, 0.24856041489341318, 0.2554997764347484, 0.26334181085537123, 0.2693300514681271, 0.2698275047969635, 0.2791908195159232, 0.2843182277990577, 0.2906031657479703, 0.2956376645882994, 0.306452080018482, 0.30916791477211336, 0.31085015870596033, 0.31732834504234264, 0.3192186369728291, 0.33408037147731173, 0.34133164988349074, 0.34937422973666177, 0.35486164924667285, 0.3674251075104482, 0.3722664567278801, 0.3748010902624602, 0.38255788270888985, 0.38255788270888985, 0.38713409728468745, 0.3910725279772326, 0.39563442241789176, 0.40021613102070314, 0.4133390997684977, 0.42637094893357363, 0.42637094893357363, 0.42937726272215115, 0.42937726272215115, 0.43920347812397825, 0.44332947053673755, 0.44332947053673755, 0.4509294121526137, 0.4509294121526137, 0.4509294121526137, 0.4509294121526137, 0.4509294121526137, 0.4509294121526137, 0.4509294121526137, 0.4601458256195414, 0.4601458256195414, 0.4648829997595727, 0.4707223161997881, 0.4707223161997881, 0.4707223161997881, 0.4707223161997881, 0.4707223161997881, 0.4707223161997881, 0.47977019303924234, 0.47977019303924234, 0.47977019303924234, 0.5032713011125847, 0.5032713011125847, 0.5032713011125847, 0.5099966347864557, 0.5099966347864557, 0.5099966347864557, 0.5099966347864557, 0.5099966347864557, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874, 0.5185600328470874]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/NTimeKFold/ATCInchikeySideEffectByDrug.txt_P3_0_4
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (80, 2666), (647, 331), (80, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19436.0)
('VALIDATE SUM PROTEIN TEST: ', 2616.0)
((647, 331), (647, 331), 23520.629, 57914.0)
('Error: ', tensor(47786.7539, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5405828764821725, 0.2925854020634266)
('Val: AUC, AUPR, Erros: ', 0.5711574436838136, 0.31652482879052857, 5790.7095)
('Test: AUC, AUPR, Erros: ', 0.5243184663556952, 0.32092872440974374, 6361.877)
((647, 331), (647, 331), 54477.367, 57914.0)
('Error: ', tensor(41632.8281, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5930433174790006, 0.34011927467302916)
('Val: AUC, AUPR, Erros: ', 0.635321887321415, 0.37525674472181136, 5049.5684)
('Test: AUC, AUPR, Erros: ', 0.5460142696168553, 0.3330912526156134, 5550.2173)
((647, 331), (647, 331), 54097.3, 57914.0)
('Error: ', tensor(41010.4688, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6164906013807308, 0.36213433769976683)
('Val: AUC, AUPR, Erros: ', 0.6562903136719371, 0.39729925884433087, 4976.0396)
('Test: AUC, AUPR, Erros: ', 0.5664078985707177, 0.35293767382418567, 5483.9937)
