    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net5, self).__init__()

        self.convD1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        self.convS1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        # self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)



        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = GATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv2 = GATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv3 = GATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)


        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, drugGraphBatch, nDrug):




        xDrug, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch

        # xDrug = self.mact1(self.mlinear1(xDrug))
        # xDrug = self.mact2(self.mlinear2(xDrug))

        xDrug = self.nodesEmbedding(xDrug)
        xDrug = xDrug.squeeze(1)

        xDrug = F.relu(self.conv1(xDrug, edge_index))

        v = self.pool1(xDrug, edge_index, None, batch)
        xDrug, edge_index, _, batch, _, _ = v
        x1 = torch.cat([gmp(xDrug, batch), gap(xDrug, batch)], dim=1)

        xDrug = F.relu(self.conv2(xDrug, edge_index))

        xDrug, edge_index, _, batch, _, _ = self.pool2(xDrug, edge_index, None, batch)
        x2 = torch.cat([gmp(xDrug, batch), gap(xDrug, batch)], dim=1)

        xDrug = F.relu(self.conv3(xDrug, edge_index))

        xDrug, edge_index, _, batch, _, _ = self.pool3(xDrug, edge_index, None, batch)
        x3 = torch.cat([gmp(xDrug, batch), gap(xDrug, batch)], dim=1)

        xDrug = x1 + x2 + x3

        xDrug = self.lin1(xDrug)
        xDrug = self.act1(xDrug)
        xDrug = self.lin2(xDrug)
        xDrug = self.act2(xDrug)


        x = self.nodesEmbedding(x[nDrug:])
        x = x.squeeze(1)

        x = torch.cat((xDrug, x), dim=0)

        # Conv Drug:
        x = self.convD1(x, drugEdges)
        x = F.relu(x)
        x = self.convD2(x, drugEdges)
        x = F.relu(x)
        # Conv SE:
        x = self.convS1(x, seEdges)
        x = F.relu(x)
        x = self.convS2(x, seEdges)
        x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

('Undirected graph: ', False)
MPNNX
<models.MPNNX5.MPNNX5 object at 0x7f598cebf050>
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_train_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((872, 598), (872, 598), 10878.573, 88676.0)
('Error: ', tensor(85187.7891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5190586066654732, 0.17365389515090063)
('Test: AUC, AUPR: ', 0.5152103497821761, 0.18461632613329917)
((872, 598), (872, 598), 83557.836, 88676.0)
('Error: ', tensor(70884.5781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6834518390108013, 0.33177033864189726)
('Test: AUC, AUPR: ', 0.6697049472718483, 0.33421361231937646)
((872, 598), (872, 598), 84100.016, 88676.0)
('Error: ', tensor(63273.5078, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7510386796000711, 0.43624226378554765)
('Test: AUC, AUPR: ', 0.7148733472732991, 0.415762353515441)
((872, 598), (872, 598), 91677.26, 88676.0)
('Error: ', tensor(58017.7383, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7942484516420918, 0.5137735293727295)
('Test: AUC, AUPR: ', 0.74065327722634, 0.45045019521063273)
((872, 598), (872, 598), 98066.66, 88676.0)
('Error: ', tensor(54771.7969, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8191863145126311, 0.5672844699567636)
('Test: AUC, AUPR: ', 0.7456980073033497, 0.46376480201923254)
((872, 598), (872, 598), 88267.66, 88676.0)
('Error: ', tensor(52787.6953, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8305555173775048, 0.5929658834347071)
('Test: AUC, AUPR: ', 0.7452556115600442, 0.45551804752970676)
((872, 598), (872, 598), 84940.016, 88676.0)
('Error: ', tensor(51762.8047, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8373941593295966, 0.6081775415108814)
('Test: AUC, AUPR: ', 0.743225160193172, 0.4553187404508634)
((872, 598), (872, 598), 81417.695, 88676.0)
('Error: ', tensor(51361.6680, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8418412625237305, 0.6168099955157881)
('Test: AUC, AUPR: ', 0.7356287336563524, 0.4393106572836139)
((872, 598), (872, 598), 81389.51, 88676.0)
('Error: ', tensor(50907.2148, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8446544803594642, 0.6225358510629405)
('Test: AUC, AUPR: ', 0.7338287687783509, 0.4329056872220696)
((872, 598), (872, 598), 87289.64, 88676.0)
('Error: ', tensor(50368.6602, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8471422672952281, 0.6269078456759639)
('Test: AUC, AUPR: ', 0.729679239888344, 0.4276036881506407)
Train: 0.8489 0.6295
Test: 0.7297 0.4276
[0.5671457905544148, 0.5782487479205857, 0.5899150759084356, 0.5876448789635947, 0.580275498401291, 0.5781315741033193, 0.5794062034900628, 0.5814846286967328, 0.5826065242526317, 0.5873526044395476, 0.5883894192374302, 0.5911926387401842, 0.598101924888687, 0.6019602690205035, 0.6029121456154672, 0.6059924611798592, 0.6073579462464115, 0.6097545193146544, 0.6118496868370238, 0.6173769535562766, 0.6222011759886285, 0.6261011523834823, 0.6304121806829197, 0.634675104396603, 0.6379721582248495, 0.6386974381749306, 0.6418724860673596, 0.6450464550960585, 0.6491269600421155, 0.6505909946033084, 0.6557414792769661, 0.6581503970107426, 0.6590831967296603, 0.6608059713442038, 0.66206838787821, 0.6683894413446361, 0.6709658627337612, 0.6750897819291546, 0.6777345472206595, 0.6819661234609382, 0.6838588136436377, 0.685005565942211, 0.6887661743166491, 0.6887661743166491, 0.6912869406290127, 0.6923197579359623, 0.6946496480391317, 0.6958540456461061, 0.7002619062658534, 0.7038612042263467, 0.7038612042263467, 0.7050779745157406, 0.7050779745157406, 0.707794799679057, 0.7089836393766088, 0.7089836393766088, 0.711354969204594, 0.711354969204594, 0.711354969204594, 0.711354969204594, 0.711354969204594, 0.711354969204594, 0.711354969204594, 0.7146190446240314, 0.7146190446240314, 0.7162494100044066, 0.7178861946065063, 0.7178861946065063, 0.7178861946065063, 0.7178861946065063, 0.7178861946065063, 0.7178861946065063, 0.7197864561953476, 0.7197864561953476, 0.7197864561953476, 0.7254140991589818, 0.7254140991589818, 0.7254140991589818, 0.7274589431311681, 0.7274589431311681, 0.7274589431311681, 0.7274589431311681, 0.7274589431311681, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344, 0.729679239888344]
[0.08027525435962476, 0.09364956791698756, 0.1015245934798378, 0.1080625995908358, 0.10848700246306546, 0.11490262873998659, 0.12102569092771986, 0.1270213934111296, 0.13137332107550023, 0.13700092326436236, 0.1391374972293984, 0.1431367981065572, 0.1521764446962562, 0.15862026697322715, 0.16047073808039936, 0.16484748771172014, 0.16634912037398125, 0.16962920229441453, 0.17206551048782276, 0.18059226837966122, 0.18618201630055492, 0.19096587919364894, 0.19673717989315023, 0.20318893735439375, 0.20856395862810737, 0.20941829477234003, 0.2134682386315402, 0.21876801758569842, 0.22619470935929775, 0.22879751741567098, 0.23810524787465545, 0.2422252660039702, 0.24413844288560543, 0.24791434631604922, 0.2504395485067371, 0.26211345932517394, 0.2676166056177478, 0.2762592749211975, 0.28205527077682885, 0.2906694350616593, 0.2949270486023353, 0.2971262756638743, 0.305137325659709, 0.305137325659709, 0.3109975838131415, 0.31298895536817545, 0.3191615212694474, 0.32218720981864507, 0.3333057482297228, 0.3428320306196332, 0.3428320306196332, 0.3458199237166762, 0.3458199237166762, 0.3540884911653304, 0.35744517417357646, 0.35744517417357646, 0.36463372236088787, 0.36463372236088787, 0.36463372236088787, 0.36463372236088787, 0.36463372236088787, 0.36463372236088787, 0.36463372236088787, 0.3746654455289802, 0.3746654455289802, 0.37978946788626666, 0.3852768476020465, 0.3852768476020465, 0.3852768476020465, 0.3852768476020465, 0.3852768476020465, 0.3852768476020465, 0.3916559508603423, 0.3916559508603423, 0.3916559508603423, 0.4117096065910121, 0.4117096065910121, 0.4117096065910121, 0.41902545536566677, 0.41902545536566677, 0.41902545536566677, 0.41902545536566677, 0.41902545536566677, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407, 0.4276036881506407]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_train_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((872, 598), (872, 598), -24263.723, 89035.0)
('Error: ', tensor(98441.7812, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5031501513933336, 0.17497526149185463)
('Test: AUC, AUPR: ', 0.4856755904732916, 0.17504491985194404)
((872, 598), (872, 598), 100690.43, 89035.0)
('Error: ', tensor(73636.6094, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5927329007377189, 0.2265556718288325)
('Test: AUC, AUPR: ', 0.590786110853485, 0.23248358600205127)
((872, 598), (872, 598), 93900.734, 89035.0)
('Error: ', tensor(69835.8047, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6883753242006141, 0.3322243185244118)
('Test: AUC, AUPR: ', 0.6679612824411609, 0.31161948350239743)
((872, 598), (872, 598), 96598.27, 89035.0)
('Error: ', tensor(61858.6992, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7660931245004541, 0.46298280314092827)
('Test: AUC, AUPR: ', 0.727271101481225, 0.42123068696198634)
((872, 598), (872, 598), 93385.44, 89035.0)
('Error: ', tensor(56779.7578, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8031325751235001, 0.5402066824117939)
('Test: AUC, AUPR: ', 0.733596631971295, 0.4283187970899374)
((872, 598), (872, 598), 101936.34, 89035.0)
('Error: ', tensor(55338.4453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8184370391146543, 0.5671067523587634)
('Test: AUC, AUPR: ', 0.7423757259082815, 0.4309278751123426)
((872, 598), (872, 598), 79872.02, 89035.0)
('Error: ', tensor(53582.3164, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8279864400806908, 0.5888087552495858)
('Test: AUC, AUPR: ', 0.7340514403851506, 0.4076747121484215)
((872, 598), (872, 598), 91879.164, 89035.0)
('Error: ', tensor(52263.9414, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8345728147449789, 0.6042834547434462)
('Test: AUC, AUPR: ', 0.7364196479539837, 0.4073506081067715)
((872, 598), (872, 598), 83903.84, 89035.0)
('Error: ', tensor(51664.4062, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8386066598002141, 0.6136076887433948)
('Test: AUC, AUPR: ', 0.7331822751659057, 0.4008354441091483)
((872, 598), (872, 598), 92713.99, 89035.0)
('Error: ', tensor(51154.6094, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8413586509048026, 0.6199529402755759)
('Test: AUC, AUPR: ', 0.7337899990979013, 0.4053545367615664)
Train: 0.8433 0.6232
Test: 0.7338 0.4054
[0.5386304268884256, 0.5562964576123264, 0.5568596371271298, 0.5582798697196385, 0.5576036080401399, 0.5562388718103735, 0.5604206319473197, 0.5641667826186236, 0.5691199760415369, 0.5722001232080323, 0.5733409059345334, 0.5795016871527783, 0.5905738299519561, 0.5983022524288386, 0.5999716696757967, 0.6048709172857241, 0.6076459791360083, 0.6129721471843225, 0.6147919961545173, 0.6215170280994493, 0.6255796511039505, 0.6297310034524524, 0.634507469063256, 0.6385927395776554, 0.6415084141495284, 0.6421659491386181, 0.6455382519180032, 0.6487004530125677, 0.6533962961861359, 0.655315366318813, 0.6603838720349, 0.6633733879558961, 0.6643952080018625, 0.6665968286913364, 0.667662501974576, 0.6738482228386977, 0.6764616851017593, 0.6807727514252926, 0.6837555489900569, 0.6881678109709939, 0.6901080314513124, 0.691271614525349, 0.6951379212094051, 0.6951379212094051, 0.6967715041109203, 0.6976389030375462, 0.7001638000420575, 0.7012039719091638, 0.705511191144719, 0.7089130211482408, 0.7089130211482408, 0.7098023468902744, 0.7098023468902744, 0.7123632151465672, 0.7136146213576722, 0.7136146213576722, 0.7161588600567131, 0.7161588600567131, 0.7161588600567131, 0.7161588600567131, 0.7161588600567131, 0.7161588600567131, 0.7161588600567131, 0.7193944640255053, 0.7193944640255053, 0.7208572180880779, 0.7223218858750485, 0.7223218858750485, 0.7223218858750485, 0.7223218858750485, 0.7223218858750485, 0.7223218858750485, 0.7242530765569437, 0.7242530765569437, 0.7242530765569437, 0.7295710841147109, 0.7295710841147109, 0.7295710841147109, 0.731631774430249, 0.731631774430249, 0.731631774430249, 0.731631774430249, 0.731631774430249, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013, 0.7337899990979013]
[0.0627945321182638, 0.06801909143858151, 0.07149362501345022, 0.0790214958794134, 0.08220928701520293, 0.08562379329513463, 0.09256674988900764, 0.09817283298427523, 0.1048894553543965, 0.10770764897969827, 0.10977718539751717, 0.11500325085789781, 0.125492689678905, 0.1341030400920062, 0.1364068361574202, 0.14190799910071697, 0.14544754267867557, 0.15207409566957059, 0.1549211554652582, 0.16365827929980936, 0.16882239070035007, 0.17387738788932344, 0.18056069450781756, 0.18627686475121202, 0.19091616617150528, 0.19190857630450153, 0.19731863025664795, 0.20218447023634653, 0.21001141758867303, 0.21350838589131999, 0.22258920266676668, 0.22787097736038814, 0.23008652434217353, 0.23419745421919957, 0.23624042689703445, 0.24864328581506587, 0.25413802956912157, 0.26260592589649945, 0.2689280561240401, 0.27874898573616186, 0.28283668831799713, 0.2855102924062197, 0.2945490958324331, 0.2945490958324331, 0.29824208992644186, 0.2997269437418554, 0.3057854469689757, 0.30847638498245955, 0.3195058502421713, 0.32806946596473496, 0.32806946596473496, 0.32956768504594613, 0.32956768504594613, 0.3365855161344626, 0.34005447381267595, 0.34005447381267595, 0.34697452505514953, 0.34697452505514953, 0.34697452505514953, 0.34697452505514953, 0.34697452505514953, 0.34697452505514953, 0.34697452505514953, 0.3568961838281787, 0.3568961838281787, 0.3611552659738967, 0.36574388179919537, 0.36574388179919537, 0.36574388179919537, 0.36574388179919537, 0.36574388179919537, 0.36574388179919537, 0.3714246452072118, 0.3714246452072118, 0.3714246452072118, 0.391091586266288, 0.391091586266288, 0.391091586266288, 0.39737538508566744, 0.39737538508566744, 0.39737538508566744, 0.39737538508566744, 0.39737538508566744, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664, 0.4053545367615664]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_train_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((872, 598), (872, 598), 23889.371, 87628.0)
('Error: ', tensor(80702.0391, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.4929110385134312, 0.16381742849927072)
('Test: AUC, AUPR: ', 0.4840608721123708, 0.19239272749877462)
((872, 598), (872, 598), 88908.99, 87628.0)
('Error: ', tensor(70370.5938, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6493327821163727, 0.28665215593499416)
('Test: AUC, AUPR: ', 0.6506921469476958, 0.32859358007124184)
((872, 598), (872, 598), 97107.54, 87628.0)
('Error: ', tensor(64610.0430, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7297339187003753, 0.396045134087452)
('Test: AUC, AUPR: ', 0.6969096191326858, 0.3968398589067555)
((872, 598), (872, 598), 97549.24, 87628.0)
('Error: ', tensor(58035.4922, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7943781673994397, 0.504669487083266)
('Test: AUC, AUPR: ', 0.7251240158208583, 0.4423684133012746)
((872, 598), (872, 598), 86324.16, 87628.0)
('Error: ', tensor(54347.6992, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.818838922870405, 0.5602103974983034)
('Test: AUC, AUPR: ', 0.7400790495372253, 0.45940576452476)
