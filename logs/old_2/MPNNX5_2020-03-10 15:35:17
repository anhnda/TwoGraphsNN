class Net5(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net5, self).__init__()

        self.convD1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        # self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv3 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, drugGraphBatch, nDrug):

        xDrug, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch

        # xDrug = self.mact1(self.mlinear1(xDrug))
        # xDrug = self.mact2(self.mlinear2(xDrug))

        xDrug = self.nodesEmbedding(xDrug)
        xDrug = xDrug.squeeze(1)

        xDrug = F.relu(self.conv1(xDrug, edge_index))

        v = self.pool1(xDrug, edge_index, None, batch)
        xDrug, edge_index, _, batch, _, _ = v
        x1 = torch.cat([gmp(xDrug, batch), gap(xDrug, batch)], dim=1)

        xDrug = F.relu(self.conv2(xDrug, edge_index))

        xDrug, edge_index, _, batch, _, _ = self.pool2(xDrug, edge_index, None, batch)
        x2 = torch.cat([gmp(xDrug, batch), gap(xDrug, batch)], dim=1)

        xDrug = F.relu(self.conv3(xDrug, edge_index))

        xDrug, edge_index, _, batch, _, _ = self.pool3(xDrug, edge_index, None, batch)
        x3 = torch.cat([gmp(xDrug, batch), gap(xDrug, batch)], dim=1)

        xDrug = x1 + x2 + x3

        xDrug = self.lin1(xDrug)
        xDrug = self.act1(xDrug)
        xDrug = self.lin2(xDrug)
        xDrug = self.act2(xDrug)

        x = self.nodesEmbedding(x[nDrug:])
        x = x.squeeze(1)

        x = torch.cat((xDrug, x), dim=0)

        # Conv Drug:
        x = self.convD1(x, drugEdges)
        x = F.relu(x)
        x = self.convD2(x, drugEdges)
        x = F.relu(x)
        # Conv SE:
        x = self.convS1(x, seEdges)
        x = F.relu(x)
        x = self.convS2(x, seEdges)
        x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', False)
MPNNX
<models.MPNNX5.MPNNX5 object at 0x7fcdbbcb4250>
('Manual torch seed: ', 443181909)
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_train_0
('Number of substructures, proteins, pathways, drugs, se: ', 2936, 1448, 330, 969, 598)
((872, 598), (872, 598), 83703.27, 88676.0)
('Error: ', tensor(73626.5312, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5143617063866157, 0.1753979170917028)
('Test: AUC, AUPR: ', 0.5155255478992835, 0.18708386862826462)
((872, 598), (872, 598), 84391.22, 88676.0)
('Error: ', tensor(71839.3594, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6617951135568119, 0.30672465990221803)
('Test: AUC, AUPR: ', 0.6503991700006899, 0.3060756247902144)
((872, 598), (872, 598), 110525.04, 88676.0)
('Error: ', tensor(70421.4375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.685770947313902, 0.3349278337146045)
('Test: AUC, AUPR: ', 0.6748075150261847, 0.3328186915575232)
((872, 598), (872, 598), 98243.61, 88676.0)
('Error: ', tensor(67086.2734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7214921251673997, 0.386441815459896)
('Test: AUC, AUPR: ', 0.7030822300698245, 0.3748536281776315)
((872, 598), (872, 598), 98213.03, 88676.0)
('Error: ', tensor(64461.1016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7407524756194246, 0.41937602742347835)
('Test: AUC, AUPR: ', 0.7165841622554222, 0.3984890598322558)
((872, 598), (872, 598), 101871.445, 88676.0)
('Error: ', tensor(62967.2734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7538309473791281, 0.44378586315857205)
('Test: AUC, AUPR: ', 0.7265184783177476, 0.41655650384855275)
((872, 598), (872, 598), 105938.03, 88676.0)
('Error: ', tensor(62027.3008, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7637066972543286, 0.4624277776146863)
('Test: AUC, AUPR: ', 0.7332971910939134, 0.42928020917666615)
((872, 598), (872, 598), 107841.945, 88676.0)
('Error: ', tensor(61263.2383, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7714194134648171, 0.4772754242072799)
('Test: AUC, AUPR: ', 0.7378174254875598, 0.43773201700223585)
((872, 598), (872, 598), 107493.195, 88676.0)
('Error: ', tensor(60467.4023, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7780714270767911, 0.49006057335749387)
('Test: AUC, AUPR: ', 0.7413601204175715, 0.44379927069410485)
((872, 598), (872, 598), 106629.21, 88676.0)
('Error: ', tensor(59744.1172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7839120423432838, 0.5008850488516343)
('Test: AUC, AUPR: ', 0.7439304712207094, 0.44722893324262264)
((872, 598), (872, 598), 106585.83, 88676.0)
('Error: ', tensor(59169.5352, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7889222342438742, 0.5101901366744206)
('Test: AUC, AUPR: ', 0.7458833780806247, 0.44920446191556934)
((872, 598), (872, 598), 106685.08, 88676.0)
('Error: ', tensor(58654.0312, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7933954485930375, 0.5186705526832389)
('Test: AUC, AUPR: ', 0.7476186556083142, 0.45046518009019765)
((872, 598), (872, 598), 106103.86, 88676.0)
('Error: ', tensor(58155.7148, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7973263920263854, 0.5260097868358034)
('Test: AUC, AUPR: ', 0.7485331560493762, 0.4495419413086558)
((872, 598), (872, 598), 106176.984, 88676.0)
('Error: ', tensor(57745.9922, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8006980579615658, 0.5327085105964056)
('Test: AUC, AUPR: ', 0.7496349469786943, 0.4496518522043849)
((872, 598), (872, 598), 105990.03, 88676.0)
('Error: ', tensor(57373.2109, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8037984597426309, 0.5383656028292608)
('Test: AUC, AUPR: ', 0.7499666734368273, 0.4486500343911553)
((872, 598), (872, 598), 106054.33, 88676.0)
('Error: ', tensor(57063.6172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8064521973501344, 0.543295829346414)
('Test: AUC, AUPR: ', 0.7507766022036533, 0.44806616734999494)
((872, 598), (872, 598), 105529.41, 88676.0)
('Error: ', tensor(56742.5000, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8088993197369143, 0.54779723297064)
('Test: AUC, AUPR: ', 0.7516386025049626, 0.447575658962917)
((872, 598), (872, 598), 105629.54, 88676.0)
('Error: ', tensor(56494.6406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8110048024458131, 0.55179072452419)
('Test: AUC, AUPR: ', 0.7523907096170885, 0.446962896540965)
((872, 598), (872, 598), 105159.016, 88676.0)
('Error: ', tensor(56229.2070, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8129806857807785, 0.5554624448762223)
('Test: AUC, AUPR: ', 0.7532954763123297, 0.4467438459401793)
((872, 598), (872, 598), 105207.23, 88676.0)
('Error: ', tensor(56021.1406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8147792406726143, 0.5587408857529764)
('Test: AUC, AUPR: ', 0.7535431360529576, 0.4453610298835603)
((872, 598), (872, 598), 104735.79, 88676.0)
('Error: ', tensor(55788.7188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8164362188704252, 0.5618954133411127)
('Test: AUC, AUPR: ', 0.7543404760421382, 0.4454670398851476)
((872, 598), (872, 598), 104719.734, 88676.0)
('Error: ', tensor(55605.2656, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8179216757971818, 0.564752446064033)
('Test: AUC, AUPR: ', 0.7550682908491078, 0.445486239090626)
((872, 598), (872, 598), 104917.336, 88676.0)
('Error: ', tensor(55450.3594, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8193374125893222, 0.5673404871994926)
('Test: AUC, AUPR: ', 0.7554989139673243, 0.4452052465702906)
((872, 598), (872, 598), 104492.48, 88676.0)
('Error: ', tensor(55263.7227, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8206588301224258, 0.5698242409814576)
('Test: AUC, AUPR: ', 0.756282117993953, 0.4458207064316244)
((872, 598), (872, 598), 104416.695, 88676.0)
('Error: ', tensor(55105.1367, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8219681222136332, 0.5721896551347879)
('Test: AUC, AUPR: ', 0.7563132199155267, 0.4452264646168185)
((872, 598), (872, 598), 104248.664, 88676.0)
('Error: ', tensor(54957.1797, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8230914764398096, 0.5743422603306221)
('Test: AUC, AUPR: ', 0.7570479635072016, 0.4458173458672172)
((872, 598), (872, 598), 104159.555, 88676.0)
('Error: ', tensor(54820.2812, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8242812252061766, 0.5763622148373613)
('Test: AUC, AUPR: ', 0.7566848617414238, 0.44471919829434076)
((872, 598), (872, 598), 104604.66, 88676.0)
('Error: ', tensor(54715.3438, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8253000671157888, 0.5784278112431297)
('Test: AUC, AUPR: ', 0.7574287582586954, 0.44546069139205036)
((872, 598), (872, 598), 103523.82, 88676.0)
('Error: ', tensor(54524.8828, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8264031533699767, 0.580363305851868)
('Test: AUC, AUPR: ', 0.7569092916773393, 0.44468949199471364)
((872, 598), (872, 598), 103731.47, 88676.0)
('Error: ', tensor(54424.2031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.827320834158589, 0.5821220571469171)
('Test: AUC, AUPR: ', 0.7576322526297833, 0.44554931575386175)
Train: 0.8284 0.5842
Test: 0.7576 0.4455
[0.5982507841234741, 0.6130821806194402, 0.6206020444270447, 0.6205952734729883, 0.618039901879867, 0.6237172674467284, 0.6304407229955377, 0.6326819424607785, 0.6332949447673848, 0.6367991313225276, 0.6385682176769694, 0.6414709355663815, 0.648120940575387, 0.6527189016663959, 0.6539473079237433, 0.6562550876040198, 0.6570987969976128, 0.6590629822763305, 0.6603496115960987, 0.6652337878507658, 0.669608265907695, 0.6725870394766131, 0.6763502683169889, 0.6796874637024548, 0.6826872276537871, 0.6832098717091919, 0.6856940177721909, 0.6883409075780005, 0.691566719971394, 0.6927596250547238, 0.6971970157386651, 0.6989848964835268, 0.6996958578756727, 0.7011245916750243, 0.7021506738826682, 0.7073368640462455, 0.7093895000788655, 0.7128027059939834, 0.7149207739510018, 0.7184132779319741, 0.7200466519940074, 0.721044127723122, 0.7240820871432082, 0.7240820871432082, 0.7262927174335523, 0.7271121373994625, 0.7289967235937999, 0.7299998654251961, 0.733607733727009, 0.7366225292234789, 0.7366225292234789, 0.7375128855340157, 0.7375128855340157, 0.7396981951031996, 0.7406646729551741, 0.7406646729551741, 0.7426604674955983, 0.7426604674955983, 0.7426604674955983, 0.7426604674955983, 0.7426604674955983, 0.7426604674955983, 0.7426604674955983, 0.7453725500766724, 0.7453725500766724, 0.7467204909109731, 0.7480455201523476, 0.7480455201523476, 0.7480455201523476, 0.7480455201523476, 0.7480455201523476, 0.7480455201523476, 0.7495286094880652, 0.7495286094880652, 0.7495286094880652, 0.7540835994663883, 0.7540835994663883, 0.7540835994663883, 0.7557889743861339, 0.7557889743861339, 0.7557889743861339, 0.7557889743861339, 0.7557889743861339, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833, 0.7576322526297833]
[0.07584854310433453, 0.08858015193565069, 0.09668256526639812, 0.1021714546591677, 0.10456937702759735, 0.1133171393342593, 0.12333843969673415, 0.12960720903803039, 0.13389718291606464, 0.13922906255779388, 0.14228425130175518, 0.14756839689126766, 0.15813217832830279, 0.1659898195314921, 0.16864040422635257, 0.1738141895683763, 0.17589896586188752, 0.17980607763023526, 0.18275948956345606, 0.1928487007635874, 0.20101170701823814, 0.20730597421334257, 0.21499460274027987, 0.22212714418865187, 0.2282906271232148, 0.22958744827858363, 0.23478765897211762, 0.2406696723787958, 0.24800617662970748, 0.2508333430547024, 0.26067681354192823, 0.26518667129004153, 0.2664827386393243, 0.26991836683113163, 0.2731814516143156, 0.28726524875572423, 0.2926492145508516, 0.30153910306379494, 0.30765202466535513, 0.31745268071701294, 0.3220399556811192, 0.3245718932111698, 0.3326468136510034, 0.3326468136510034, 0.3391281486367582, 0.3411763687413515, 0.3472311804785994, 0.35048555351169813, 0.3610349189642677, 0.36934032391680427, 0.36934032391680427, 0.37219551354472963, 0.37219551354472963, 0.37969009832053713, 0.3832083298637626, 0.3832083298637626, 0.3906153538622563, 0.3906153538622563, 0.3906153538622563, 0.3906153538622563, 0.3906153538622563, 0.3906153538622563, 0.3906153538622563, 0.4003833843952135, 0.4003833843952135, 0.40540656498354655, 0.41033342886714347, 0.41033342886714347, 0.41033342886714347, 0.41033342886714347, 0.41033342886714347, 0.41033342886714347, 0.41503874731121054, 0.41503874731121054, 0.41503874731121054, 0.4320304708649651, 0.4320304708649651, 0.4320304708649651, 0.43837695940798355, 0.43837695940798355, 0.43837695940798355, 0.43837695940798355, 0.43837695940798355, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175, 0.44554931575386175]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_train_1
('Number of substructures, proteins, pathways, drugs, se: ', 2936, 1448, 330, 969, 598)
((872, 598), (872, 598), 78064.18, 89035.0)
('Error: ', tensor(74100.0781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5031105091708246, 0.16604425843711107)
('Test: AUC, AUPR: ', 0.5290371267105813, 0.18606719740493355)
((872, 598), (872, 598), 83930.4, 89035.0)
('Error: ', tensor(72605.6328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6434965485353576, 0.26669583045143)
('Test: AUC, AUPR: ', 0.6591504322936104, 0.2860400049154633)
((872, 598), (872, 598), 80186.08, 89035.0)
('Error: ', tensor(71187.1641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6746690134598222, 0.30715971296327044)
('Test: AUC, AUPR: ', 0.6809691593314828, 0.31288418048542554)
((872, 598), (872, 598), 76369.766, 89035.0)
('Error: ', tensor(69586.4453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7031794016489337, 0.3437843121079385)
('Test: AUC, AUPR: ', 0.7001010835375459, 0.3396521542069539)
((872, 598), (872, 598), 73199.72, 89035.0)
('Error: ', tensor(68014.5312, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7232732275879985, 0.3756704071687197)
('Test: AUC, AUPR: ', 0.7161331272045868, 0.3651035415849856)
((872, 598), (872, 598), 72392.195, 89035.0)
('Error: ', tensor(66430.3203, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7387657184358177, 0.4033129683584109)
('Test: AUC, AUPR: ', 0.7280827505022504, 0.38611369124407063)
((872, 598), (872, 598), 73911.78, 89035.0)
('Error: ', tensor(64852.6367, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7509018364228516, 0.4263589402008244)
('Test: AUC, AUPR: ', 0.7371752214344305, 0.40347435282090527)
((872, 598), (872, 598), 74702.336, 89035.0)
('Error: ', tensor(63548.6016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.759857091718928, 0.44476244129802034)
('Test: AUC, AUPR: ', 0.7433494190716827, 0.4170229396068946)
((872, 598), (872, 598), 67112.516, 89035.0)
('Error: ', tensor(63102.8320, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7671013908452415, 0.4610386313708177)
('Test: AUC, AUPR: ', 0.7468917677628271, 0.42757188694861864)
((872, 598), (872, 598), 65674.375, 89035.0)
('Error: ', tensor(62341.3633, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7743334114887744, 0.47581844492193487)
('Test: AUC, AUPR: ', 0.7499390313686489, 0.43597098706036636)
((872, 598), (872, 598), 67838.8, 89035.0)
('Error: ', tensor(61266.8242, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7810097441969374, 0.48846377447317657)
('Test: AUC, AUPR: ', 0.7525791527767376, 0.4415880947268038)
((872, 598), (872, 598), 74435.73, 89035.0)
('Error: ', tensor(59945.5859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7865554801669398, 0.4993880918461411)
('Test: AUC, AUPR: ', 0.7543087518008837, 0.4454130581110176)
((872, 598), (872, 598), 74269.47, 89035.0)
('Error: ', tensor(59443.4453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7911860897471715, 0.5088533769560059)
('Test: AUC, AUPR: ', 0.7546657694031353, 0.4468723787519365)
((872, 598), (872, 598), 72053.0, 89035.0)
('Error: ', tensor(59170.1797, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7954140593296856, 0.517500316640013)
('Test: AUC, AUPR: ', 0.7542746895090536, 0.4470561229478232)
((872, 598), (872, 598), 75291.49, 89035.0)
('Error: ', tensor(58427.6289, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.798820264837595, 0.5246995602519517)
('Test: AUC, AUPR: ', 0.7543708976553354, 0.4483854071021616)
((872, 598), (872, 598), 75313.164, 89035.0)
('Error: ', tensor(58052.5039, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8023803278808506, 0.5313737855770246)
('Test: AUC, AUPR: ', 0.7539551763413523, 0.4472961550821114)
((872, 598), (872, 598), 75452.04, 89035.0)
('Error: ', tensor(57721.0234, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8051531810608892, 0.536884134507672)
('Test: AUC, AUPR: ', 0.753217955810206, 0.44660004823072863)
((872, 598), (872, 598), 76125.74, 89035.0)
('Error: ', tensor(57337.4219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8082779688519603, 0.542344805706813)
('Test: AUC, AUPR: ', 0.7530043988958075, 0.44618543522327975)
((872, 598), (872, 598), 76022.46, 89035.0)
('Error: ', tensor(57088.3281, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8103450316192814, 0.5465783968382933)
('Test: AUC, AUPR: ', 0.75215530512462, 0.4453375244835937)
((872, 598), (872, 598), 76536.24, 89035.0)
('Error: ', tensor(56774.2422, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8127437114071531, 0.5509748866420116)
('Test: AUC, AUPR: ', 0.7518478965682234, 0.4443312142240181)
((872, 598), (872, 598), 76794.0, 89035.0)
('Error: ', tensor(56541.7305, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8147997904506108, 0.5546104589780527)
('Test: AUC, AUPR: ', 0.7504488996594467, 0.44014882260001925)
((872, 598), (872, 598), 77690.984, 89035.0)
('Error: ', tensor(56238.0312, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8167181907439769, 0.5583280324244936)
('Test: AUC, AUPR: ', 0.7509073436757624, 0.4414334023317664)
((872, 598), (872, 598), 76334.484, 89035.0)
('Error: ', tensor(56147.5508, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8182096174082242, 0.5614388881985231)
('Test: AUC, AUPR: ', 0.7505413065276395, 0.44120933842921467)
((872, 598), (872, 598), 77471.55, 89035.0)
('Error: ', tensor(55857.5117, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8203048353833821, 0.5648085835076405)
('Test: AUC, AUPR: ', 0.7504661998996282, 0.43881813749560095)
((872, 598), (872, 598), 77662.484, 89035.0)
('Error: ', tensor(55695.0820, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8217225097236518, 0.5672771578761265)
('Test: AUC, AUPR: ', 0.7499473388180294, 0.43656609334630436)
((872, 598), (872, 598), 77363.414, 89035.0)
('Error: ', tensor(55535.6797, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8229796569318655, 0.5701371108899049)
('Test: AUC, AUPR: ', 0.7483954366815243, 0.43378851743668556)
((872, 598), (872, 598), 78379.74, 89035.0)
('Error: ', tensor(55277.7188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8249070950445448, 0.5730148003597167)
('Test: AUC, AUPR: ', 0.7493143169378647, 0.43458407225014395)
((872, 598), (872, 598), 77998.64, 89035.0)
('Error: ', tensor(55137.0781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8262915701262054, 0.5757004345752892)
('Test: AUC, AUPR: ', 0.7486747462396819, 0.43343726221234)
((872, 598), (872, 598), 77639.72, 89035.0)
('Error: ', tensor(54998.8516, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8275480023196576, 0.5782220971975671)
('Test: AUC, AUPR: ', 0.7481309895650121, 0.4324614081071221)
((872, 598), (872, 598), 79259.37, 89035.0)
('Error: ', tensor(54743.4609, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8288425211236496, 0.5800999273559481)
('Test: AUC, AUPR: ', 0.7479253675870899, 0.42954040627155415)
Train: 0.8298 0.5827
Test: 0.7479 0.4295
[0.5615372520058475, 0.5749116308491321, 0.5737825387287708, 0.5785029202315717, 0.5803089935502909, 0.5820916305105945, 0.5918472889458803, 0.5964848726941566, 0.6019718922992576, 0.6058419813190138, 0.6075134081829868, 0.6140464994546893, 0.6241825504614937, 0.6311412939796066, 0.6333076623234769, 0.6374592879507925, 0.6399403479484144, 0.644765257617474, 0.6458105430369941, 0.6521049775996266, 0.6559696807316199, 0.659443883064869, 0.66404356688644, 0.6680631467182826, 0.6707315597058883, 0.6712883433198868, 0.6745228695358658, 0.6770575951594717, 0.6811450608156955, 0.6828662369548004, 0.6871204906414277, 0.6897448799567785, 0.6903609928078052, 0.6919371929918919, 0.6929410994493996, 0.6982679922273023, 0.7005432088522195, 0.7036720845388326, 0.7064349576741539, 0.7104488849503923, 0.712120191217108, 0.7131143749334623, 0.7157554380033101, 0.7157554380033101, 0.7175100196365922, 0.718094756707541, 0.7200038695517831, 0.721038489108857, 0.7248555736934368, 0.7277319313044889, 0.7277319313044889, 0.728402094057572, 0.728402094057572, 0.7306466699095425, 0.7317831686486732, 0.7317831686486732, 0.7339873110723726, 0.7339873110723726, 0.7339873110723726, 0.7339873110723726, 0.7339873110723726, 0.7339873110723726, 0.7339873110723726, 0.7364103893702154, 0.7364103893702154, 0.7376290553890417, 0.7389549179688334, 0.7389549179688334, 0.7389549179688334, 0.7389549179688334, 0.7389549179688334, 0.7389549179688334, 0.7403101143139409, 0.7403101143139409, 0.7403101143139409, 0.7444934204244213, 0.7444934204244213, 0.7444934204244213, 0.7461706329361456, 0.7461706329361456, 0.7461706329361456, 0.7461706329361456, 0.7461706329361456, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899, 0.7479253675870899]
[0.06433684160992814, 0.06886426193009232, 0.07129194565694105, 0.0789267886159699, 0.0832575362823855, 0.08656630922415562, 0.0961341101885102, 0.10275165455345119, 0.11027514190367342, 0.11390397044397486, 0.11609615592855224, 0.12212372374521108, 0.13362925512518234, 0.14309048712053224, 0.14602426724327539, 0.15204037435667225, 0.15568229810783588, 0.1634094596905544, 0.16644254001878142, 0.17661727185243392, 0.18283667094940048, 0.18863174993427706, 0.19664697403534714, 0.2039534180519995, 0.20956698112374297, 0.2105886219533994, 0.2163591479497102, 0.22233835735913313, 0.23088602401855135, 0.2349161299708698, 0.24445791016662816, 0.2514873769264893, 0.253115811831489, 0.2577250290048567, 0.26006382193641, 0.2739293175797176, 0.28025430163015874, 0.28863129074870303, 0.29563837346240585, 0.30710651237285147, 0.31160279955605874, 0.31485391009287467, 0.32332855612983635, 0.32332855612983635, 0.3271687798496729, 0.32904955396354035, 0.33466262506423944, 0.3381861871597991, 0.34959083158006254, 0.35816512337956286, 0.35816512337956286, 0.3594533446645871, 0.3594533446645871, 0.3671472876596298, 0.370594958992845, 0.370594958992845, 0.3780347713516239, 0.3780347713516239, 0.3780347713516239, 0.3780347713516239, 0.3780347713516239, 0.3780347713516239, 0.3780347713516239, 0.38670024824730953, 0.38670024824730953, 0.3914076773853439, 0.396391454416487, 0.396391454416487, 0.396391454416487, 0.396391454416487, 0.396391454416487, 0.396391454416487, 0.4003948507972841, 0.4003948507972841, 0.4003948507972841, 0.4152911844586856, 0.4152911844586856, 0.4152911844586856, 0.4219503150769415, 0.4219503150769415, 0.4219503150769415, 0.4219503150769415, 0.4219503150769415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415, 0.42954040627155415]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_train_2
('Number of substructures, proteins, pathways, drugs, se: ', 2936, 1448, 330, 969, 598)
((872, 598), (872, 598), 101462.766, 87628.0)
('Error: ', tensor(73297.1484, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5060284759286601, 0.16613994285126157)
('Test: AUC, AUPR: ', 0.5232955377118507, 0.20658864643969743)
((872, 598), (872, 598), 72246.555, 87628.0)
('Error: ', tensor(70615.8750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6903320481168542, 0.3234671773203821)
('Test: AUC, AUPR: ', 0.6803052783370808, 0.34648062484442843)
((872, 598), (872, 598), 52515.863, 87628.0)
('Error: ', tensor(69214.3750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7188680872634488, 0.3783640579386745)
('Test: AUC, AUPR: ', 0.7002634003726731, 0.3892961014445767)
((872, 598), (872, 598), 91469.836, 87628.0)
('Error: ', tensor(63094.8516, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7444207537932108, 0.4191749871838012)
('Test: AUC, AUPR: ', 0.7070625345836022, 0.4108881437447386)
((872, 598), (872, 598), 95802.03, 87628.0)
('Error: ', tensor(61562.5469, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.759110125181788, 0.44831476092619)
('Test: AUC, AUPR: ', 0.7185272391282815, 0.43078273222040314)
((872, 598), (872, 598), 107022.56, 87628.0)
('Error: ', tensor(60893.4844, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7705499872769934, 0.4695654152277544)
('Test: AUC, AUPR: ', 0.7259278960359569, 0.44245477643879505)
((872, 598), (872, 598), 105760.39, 87628.0)
('Error: ', tensor(59954.9453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7787951512636623, 0.48438436695415915)
('Test: AUC, AUPR: ', 0.730395679103803, 0.44959577801486106)
((872, 598), (872, 598), 105520.61, 87628.0)
('Error: ', tensor(59209.1836, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7855539149464603, 0.49699227601658424)
('Test: AUC, AUPR: ', 0.7338306512323866, 0.4550893758258654)
((872, 598), (872, 598), 105164.57, 87628.0)
('Error: ', tensor(58556.6211, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7911219017399742, 0.5077516109435732)
('Test: AUC, AUPR: ', 0.7375733350688124, 0.45984192699343607)
((872, 598), (872, 598), 105204.15, 87628.0)
('Error: ', tensor(57999.4414, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7958750204188926, 0.517190691904599)
('Test: AUC, AUPR: ', 0.740016911610191, 0.4632271611380641)
((872, 598), (872, 598), 105012.92, 87628.0)
('Error: ', tensor(57484.8242, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7999367466568617, 0.5255017508045612)
('Test: AUC, AUPR: ', 0.7414077629052853, 0.46523475656920077)
((872, 598), (872, 598), 105312.06, 87628.0)
('Error: ', tensor(57065.3516, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8033698724007672, 0.5327652335372128)
('Test: AUC, AUPR: ', 0.7428046743476768, 0.46686171494404)
((872, 598), (872, 598), 104356.45, 87628.0)
('Error: ', tensor(56603.8633, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8065981820407258, 0.5392052369797535)
('Test: AUC, AUPR: ', 0.7464120682823652, 0.4709334057077737)
((872, 598), (872, 598), 104343.22, 87628.0)
('Error: ', tensor(56257.0703, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8093384887274715, 0.5448192210285151)
('Test: AUC, AUPR: ', 0.7481368571593763, 0.4725476643217098)
((872, 598), (872, 598), 104348.055, 87628.0)
('Error: ', tensor(55925.1406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8118207546370355, 0.550173286520803)
('Test: AUC, AUPR: ', 0.7473468068932108, 0.47192456843509917)
((872, 598), (872, 598), 104135.12, 87628.0)
('Error: ', tensor(55672.3672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8138411760293821, 0.5539851666514104)
('Test: AUC, AUPR: ', 0.7493533861012496, 0.4732442392312858)
((872, 598), (872, 598), 103940.73, 87628.0)
('Error: ', tensor(55341.0781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8162976259555519, 0.5589989163561659)
('Test: AUC, AUPR: ', 0.7477273912204725, 0.4718613236153535)
((872, 598), (872, 598), 104074.72, 87628.0)
('Error: ', tensor(55110.8320, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8181989371327465, 0.5628062705151328)
('Test: AUC, AUPR: ', 0.7476702649272355, 0.47147374104608714)
((872, 598), (872, 598), 103960.78, 87628.0)
('Error: ', tensor(54885.4492, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8199639523720186, 0.5663179325485005)
('Test: AUC, AUPR: ', 0.7466848931711405, 0.469959871778952)
((872, 598), (872, 598), 103503.79, 87628.0)
('Error: ', tensor(54658.9961, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8215484888299391, 0.5693644891612737)
('Test: AUC, AUPR: ', 0.7481101247210533, 0.4714682619881066)
((872, 598), (872, 598), 103765.664, 87628.0)
('Error: ', tensor(54490.5703, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8230320780158112, 0.5722620523168445)
('Test: AUC, AUPR: ', 0.7474381961120468, 0.4705993359527132)
((872, 598), (872, 598), 103331.016, 87628.0)
('Error: ', tensor(54299.4219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8244013046840504, 0.574831293155667)
('Test: AUC, AUPR: ', 0.7472959521261027, 0.4701370496910393)
((872, 598), (872, 598), 103276.445, 87628.0)
('Error: ', tensor(54148.1406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8256725337339095, 0.5771289370089759)
('Test: AUC, AUPR: ', 0.7476569126758382, 0.470001082676693)
((872, 598), (872, 598), 103324.79, 87628.0)
('Error: ', tensor(53999.9375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8269524129704856, 0.5794727866752599)
('Test: AUC, AUPR: ', 0.7462636524070103, 0.4682577827183581)
((872, 598), (872, 598), 103034.92, 87628.0)
('Error: ', tensor(53852.9531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8281219066745954, 0.5814712145924319)
('Test: AUC, AUPR: ', 0.7461980476809, 0.4678676797080858)
((872, 598), (872, 598), 102615.66, 87628.0)
('Error: ', tensor(53721.4102, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8291060396650443, 0.5831328581740097)
('Test: AUC, AUPR: ', 0.7469715368346377, 0.4684433413377125)
((872, 598), (872, 598), 103298.62, 87628.0)
('Error: ', tensor(53671.6250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8298355604947607, 0.5845700804143519)
('Test: AUC, AUPR: ', 0.7437915965255987, 0.46395991955202964)
((872, 598), (872, 598), 102867.9, 87628.0)
('Error: ', tensor(53497.3242, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8311630759442892, 0.5868602501598872)
('Test: AUC, AUPR: ', 0.7448849512044071, 0.4655279694130599)
((872, 598), (872, 598), 101451.69, 87628.0)
('Error: ', tensor(53327.8164, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8320008053248837, 0.5883157116838128)
('Test: AUC, AUPR: ', 0.7455523263222824, 0.4659319333559093)
((872, 598), (872, 598), 103287.82, 87628.0)
('Error: ', tensor(53322.5078, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8328597939924934, 0.5900259118440844)
('Test: AUC, AUPR: ', 0.7438768436529208, 0.46366801384877226)
Train: 0.8345 0.5916
Test: 0.7439 0.4637
[0.5613560941271118, 0.563452711778025, 0.582703969056007, 0.5818756952197066, 0.5906759719126542, 0.594447374287654, 0.602691138099633, 0.6092766746882593, 0.6135487244227052, 0.616722565653375, 0.6201110477361881, 0.6252988714176795, 0.6315175387277614, 0.6344730354339208, 0.6356853302723463, 0.6393464972464029, 0.6424682497647869, 0.6459155145464652, 0.6472045598613192, 0.652522147781879, 0.6564707210556943, 0.6597404745309955, 0.6638613032648889, 0.6678122647464443, 0.6707679802901143, 0.6712737111871261, 0.6744248568394102, 0.6771260217517274, 0.6798876449957485, 0.681143218802544, 0.6849736179166234, 0.6870554533412252, 0.6878202355880498, 0.6891284137126714, 0.6900555181798684, 0.695267330929135, 0.69781523031166, 0.7008009194323204, 0.7035339793725671, 0.7066091936862686, 0.7081083115009807, 0.709189112094634, 0.7118938572300925, 0.7118938572300925, 0.7138332794966649, 0.714639323168858, 0.7163048757871143, 0.7173811591690499, 0.7211466409730374, 0.7238096123504852, 0.7238096123504852, 0.7246543798992797, 0.7246543798992797, 0.72638204955914, 0.7275330394771888, 0.7275330394771888, 0.7293039665132505, 0.7293039665132505, 0.7293039665132505, 0.7293039665132505, 0.7293039665132505, 0.7293039665132505, 0.7293039665132505, 0.7317651427732789, 0.7317651427732789, 0.7331887100605275, 0.7346379018435142, 0.7346379018435142, 0.7346379018435142, 0.7346379018435142, 0.7346379018435142, 0.7346379018435142, 0.7361281248489961, 0.7361281248489961, 0.7361281248489961, 0.7405029123229775, 0.7405029123229775, 0.7405029123229775, 0.7421392835776186, 0.7421392835776186, 0.7421392835776186, 0.7421392835776186, 0.7421392835776186, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208, 0.7438768436529208]
[0.08379079094188399, 0.0906429389244155, 0.10488483396694252, 0.10898998702978901, 0.11746429097622836, 0.12242750185276766, 0.13381809493277735, 0.14279935550969627, 0.14971046200556598, 0.15440768054640858, 0.1589081131834704, 0.1664711612739444, 0.17924917498731166, 0.18535985965068624, 0.18875090020277707, 0.1963751485680942, 0.2018121610150702, 0.2073465272726004, 0.2102596543536647, 0.22012297874854267, 0.2295073850818163, 0.2352340120981002, 0.24414225933959213, 0.25315281932204803, 0.260451393625322, 0.26163624160525684, 0.26832988117683754, 0.27560923093246903, 0.283270330532008, 0.2859560356783655, 0.2960059466088587, 0.3007807815915444, 0.3031488977843288, 0.30614360121027206, 0.3085623635764333, 0.32238439874898284, 0.32903585439412936, 0.33645999814830746, 0.34380372795889924, 0.3517995814875341, 0.3557936981066948, 0.3589071522573031, 0.36636581148198455, 0.36636581148198455, 0.37140053338582746, 0.3735390333438903, 0.3780230260517974, 0.38144054779468917, 0.3924985699726165, 0.4001218478169032, 0.4001218478169032, 0.40196344109486126, 0.40196344109486126, 0.40649818439813, 0.40974004352907, 0.40974004352907, 0.4141986554879, 0.4141986554879, 0.4141986554879, 0.4141986554879, 0.4141986554879, 0.4141986554879, 0.4141986554879, 0.4221619661851578, 0.4221619661851578, 0.42630278004395683, 0.4314492296253339, 0.4314492296253339, 0.4314492296253339, 0.4314492296253339, 0.4314492296253339, 0.4314492296253339, 0.4362097644663132, 0.4362097644663132, 0.4362097644663132, 0.4515032558188932, 0.4515032558188932, 0.4515032558188932, 0.457495892308757, 0.457495892308757, 0.457495892308757, 0.457495892308757, 0.457495892308757, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226, 0.46366801384877226]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_train_3
('Number of substructures, proteins, pathways, drugs, se: ', 2936, 1448, 330, 969, 598)
((872, 598), (872, 598), 110586.1, 89031.0)
('Error: ', tensor(74625.8203, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5260095858397252, 0.18378965809882988)
('Test: AUC, AUPR: ', 0.5049626987066973, 0.18042558516106993)
((872, 598), (872, 598), 57298.38, 89031.0)
('Error: ', tensor(74324.2891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.652491661049168, 0.3137850147619161)
('Test: AUC, AUPR: ', 0.6386265383878377, 0.2976209298628697)
((872, 598), (872, 598), 61582.14, 89031.0)
('Error: ', tensor(70403.6719, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7242647771333002, 0.3876792400581816)
('Test: AUC, AUPR: ', 0.6983608605747958, 0.3452454059176943)
((872, 598), (872, 598), 103583.734, 89031.0)
('Error: ', tensor(63530.7773, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.750707508504097, 0.4420341313662814)
('Test: AUC, AUPR: ', 0.7314988091597007, 0.40804639849682106)
((872, 598), (872, 598), 112596.56, 89031.0)
('Error: ', tensor(62391.1172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7654788732278853, 0.4688821684639471)
('Test: AUC, AUPR: ', 0.740857087593024, 0.4262119481599494)
((872, 598), (872, 598), 108711.28, 89031.0)
('Error: ', tensor(60972.4375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7754971113133433, 0.48722335720450494)
('Test: AUC, AUPR: ', 0.747454979959015, 0.4376362099253637)
