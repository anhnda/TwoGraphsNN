class Net52(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net52, self).__init__()

        self.convD1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv1g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv2 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv2g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv3 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv3g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=0.8)

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, proteinNodes, proteinWeight, drugGraphBatch, nDrug, drugFeatures = None):


        if config.INNER_FEATURE and drugFeatures is not None:
            nDrug = drugFeatures.shape[0]
            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            xDrug = self.L1(drugFeatures)
            xDrug = self.actL1(xDrug)
            xDrug = self.L2(xDrug)
            xDrug = self.actL2(xDrug)

            x = torch.cat((xDrug, x), dim=0)

        elif config.INNER_GRAPH:
            xAtom, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch
            # xDrug = self.mact1(self.mlinear1(xDrug))
            # xDrug = self.mact2(self.mlinear2(xDrug))

            xProtein = self.nodesEmbedding(proteinNodes)

            xAtom = self.nodesEmbedding(xAtom)
            xAtom = xAtom.squeeze(1)




            iLevel = 0
            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv1(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv1g(xAtom, edge_index))
            xAtom, edge_index, _, batch, _, _ = self.pool1(xAtom, edge_index, None, batch)
            x1 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            iLevel += 1

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv2(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv2g(xAtom, edge_index))

            iLevel += 1
            xAtom, edge_index, _, batch, _, _ = self.pool2(xAtom, edge_index, None, batch)
            x2 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv3(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv3g(xAtom, edge_index))

            xAtom, edge_index, _, batch, _, _ = self.pool3(xAtom, edge_index, None, batch)
            x3 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xDrug = x1 + x2 + x3

            xDrug = self.lin1(xDrug)
            xDrug = self.act1(xDrug)
            xDrug = self.lin2(xDrug)
            xDrug = self.act2(xDrug)

            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            x = torch.cat((xDrug, x), dim=0)
        else:
            x = self.nodesEmbedding(x)

        if config.OUTER_GRAPH:
            # Conv Drug:
            x = self.convD1(x, drugEdges)
            x = F.relu(x)
            x = self.convD2(x, drugEdges)
            x = F.relu(x)

        if config.SE_GRAPH:
            # Conv SE:
            x = self.convS1(x, seEdges)
            x = F.relu(x)
            # x = self.convS2(x, seEdges)
            # x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', False)
('Protein Test: ', True)
('Inner Graph, Outer Graph, Se Graph: ', True, True, False)
('Drug Features: ', False)
('Cross Prob: ', 0.001)
MPNNX
<models.MPNNXP5.MPNNXP5 object at 0x7f4f3f6142d0>
('Manual torch seed: ', 1772727637)
('Config: ', 'Protein Test: ', True, 'KNN: ', 2)
('EXT MODE: ', True)
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 1472)
((775, 2666), (97, 2666), (775, 1472), (97, 1472))
('VALIDATE SUM PROTEIN TRAIN: ', 19983.0)
('VALIDATE SUM PROTEIN TEST: ', 2685.0)
((775, 1472), (775, 1472), 293931.9, 93593.0)
('Error: ', tensor(121148.5156, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5258337057388935, 0.08937106717077764)
('Val: AUC, AUPR, Erros: ', 0.5268866801419809, 0.09094266367394306, 15350.818)
('Test: AUC, AUPR, Erros: ', 0.5272167029060241, 0.09750989084703537, 15626.143)
((775, 1472), (775, 1472), 91726.195, 93593.0)
('Error: ', tensor(81882.0547, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7955525936293594, 0.3757418618387436)
('Val: AUC, AUPR, Erros: ', 0.7874521882766323, 0.35483558479411437, 10494.797)
('Test: AUC, AUPR, Erros: ', 0.7558258368180022, 0.333251986499011, 11126.955)
((775, 1472), (775, 1472), 115993.45, 93593.0)
('Error: ', tensor(68064.0625, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8463374045726897, 0.4377378369128631)
('Val: AUC, AUPR, Erros: ', 0.8245516647047808, 0.37996810697602296, 9008.758)
('Test: AUC, AUPR, Erros: ', 0.8102404705701629, 0.3562090301529002, 9702.522)
((775, 1472), (775, 1472), 85820.24, 93593.0)
('Error: ', tensor(64765.7891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8377079590417333, 0.47696699384959934)
('Val: AUC, AUPR, Erros: ', 0.8219672488748148, 0.3955991728506624, 9294.333)
('Test: AUC, AUPR, Erros: ', 0.8130137758591223, 0.3758788345191701, 10011.069)
((775, 1472), (775, 1472), 88555.57, 93593.0)
('Error: ', tensor(63354.3281, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8527440760683458, 0.5071608605334194)
('Val: AUC, AUPR, Erros: ', 0.8168191137507439, 0.3730351585712185, 9461.631)
('Test: AUC, AUPR, Erros: ', 0.8149646675563589, 0.3824559092081298, 9749.386)
((775, 1472), (775, 1472), 94159.01, 93593.0)
('Error: ', tensor(62405.9609, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8584129732536796, 0.5156442590012833)
('Val: AUC, AUPR, Erros: ', 0.8126306431280681, 0.3545282395653726, 10030.947)
('Test: AUC, AUPR, Erros: ', 0.8140544390992549, 0.3800092185252933, 9817.19)
((775, 1472), (775, 1472), 98460.4, 93593.0)
('Error: ', tensor(61907.0859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8625110459954392, 0.5225070457766798)
('Val: AUC, AUPR, Erros: ', 0.8023549743798626, 0.3344025742043675, 10961.742)
('Test: AUC, AUPR, Erros: ', 0.8112000544749577, 0.37179733055138287, 10093.915)
((775, 1472), (775, 1472), 92691.16, 93593.0)
('Error: ', tensor(61584.7344, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8668911401478053, 0.5299692642940301)
('Val: AUC, AUPR, Erros: ', 0.8022509351523844, 0.3174452354077644, 11598.614)
('Test: AUC, AUPR, Erros: ', 0.809702578180739, 0.36165102575568436, 10176.849)
((775, 1472), (775, 1472), 98259.71, 93593.0)
('Error: ', tensor(61020.7109, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8703400531103821, 0.5356282064038803)
('Val: AUC, AUPR, Erros: ', 0.8004872625979007, 0.3085331832453183, 12788.475)
('Test: AUC, AUPR, Erros: ', 0.8107575154797889, 0.3555347516895917, 10504.424)
((775, 1472), (775, 1472), 105091.19, 93593.0)
('Error: ', tensor(60441.0156, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.871171594222905, 0.5420759089464531)
('Val: AUC, AUPR, Erros: ', 0.8017602754810602, 0.30776464555669514, 13467.387)
('Test: AUC, AUPR, Erros: ', 0.810978837655304, 0.35198063314348094, 10872.44)
((775, 1472), (775, 1472), 104881.98, 93593.0)
('Error: ', tensor(59592.4375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8723291312054036, 0.550503837802407)
('Val: AUC, AUPR, Erros: ', 0.8017366404598419, 0.30095868484767985, 13965.986)
('Test: AUC, AUPR, Erros: ', 0.8078918031381495, 0.34123579431843476, 11197.791)
Train: 0.8463 0.4377
Test: 0.8102 0.3562
[0.5614421503643907, 0.5522748083723727, 0.565591356819458, 0.5867255115545729, 0.6030096376788588, 0.6186279215859942, 0.6348785341371743, 0.6478639725679072, 0.6552544280164648, 0.6657507212474343, 0.6769696763430704, 0.6855887552174225, 0.6909243991694966, 0.6955592618098226, 0.6986851473500195, 0.7025975105468805, 0.7110420641520476, 0.716757049669406, 0.7188541986034032, 0.7216014489759645, 0.7231187216477992, 0.7258411728131061, 0.727638863296107, 0.7324314575784869, 0.7363359791519918, 0.7397793844076159, 0.743360888414756, 0.7464246121943069, 0.7492437823774185, 0.749696563559465, 0.7520653311181645, 0.7544352828464955, 0.7574750088601346, 0.7585839054136673, 0.762510398130665, 0.7644015182806899, 0.765100157577492, 0.7663372844688437, 0.7671115656764449, 0.7715089077092361, 0.7734069707039614, 0.7762199253060993, 0.7781125442951787, 0.7809702516299079, 0.782249287816086, 0.7830439868568315, 0.7857263399014807, 0.7857263399014807, 0.7873772154202081, 0.7880761591995746, 0.7895916995032272, 0.7903834768599577, 0.793236517107467, 0.7955383401366036, 0.7955383401366036, 0.7963395451052906, 0.7963395451052906, 0.7980061974838715, 0.7987574204649852, 0.7987574204649852, 0.8002328999091937, 0.8002328999091937, 0.8002328999091937, 0.8002328999091937, 0.8002328999091937, 0.8002328999091937, 0.8002328999091937, 0.8020951908969581, 0.8020951908969581, 0.8030293307610873, 0.8039558281338639, 0.8039558281338639, 0.8039558281338639, 0.8039558281338639, 0.8039558281338639, 0.8039558281338639, 0.805007981863996, 0.805007981863996, 0.805007981863996, 0.8079782213472784, 0.8079782213472784, 0.8079782213472784, 0.8090841971431331, 0.8090841971431331, 0.8090841971431331, 0.8090841971431331, 0.8090841971431331, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629, 0.8102404705701629]
[0.017306509466508614, 0.02267876217142322, 0.028201342899826943, 0.034583249558865804, 0.04047861077284835, 0.04755590567918965, 0.05569405928850294, 0.06400751195797934, 0.06913237801105912, 0.07814357379258877, 0.08825611161779855, 0.0958257707535051, 0.09981555701563705, 0.10536461312852467, 0.10881711762883393, 0.11353366157841836, 0.12483303801317927, 0.13232409972382153, 0.13521952695175538, 0.13958362635981303, 0.14121437027857384, 0.1457180074965268, 0.14872747046184126, 0.15890804302770115, 0.16753131978114044, 0.17341773310292327, 0.18070087951493655, 0.18691921399821776, 0.1928154708828477, 0.19352521647451132, 0.19762679679441475, 0.20350220043743322, 0.21077184959722012, 0.21350482314959932, 0.22272477359269943, 0.2269120975558838, 0.22870067427859592, 0.2317112102665948, 0.23405152465290885, 0.2460734609185053, 0.25063419315694324, 0.2578843337510578, 0.26297652850133507, 0.27005768496189303, 0.27375448697979093, 0.2758651246730782, 0.2826527457333856, 0.2826527457333856, 0.28753066774348246, 0.28906432254548275, 0.2937173168540654, 0.2960907307150809, 0.3040939195490382, 0.3104346369354857, 0.3104346369354857, 0.31277884531853195, 0.31277884531853195, 0.3180957647789563, 0.32037349250312314, 0.32037349250312314, 0.32513992360651234, 0.32513992360651234, 0.32513992360651234, 0.32513992360651234, 0.32513992360651234, 0.32513992360651234, 0.32513992360651234, 0.33100132231299884, 0.33100132231299884, 0.3339545615870554, 0.33698124093821014, 0.33698124093821014, 0.33698124093821014, 0.33698124093821014, 0.33698124093821014, 0.33698124093821014, 0.3403176412217509, 0.3403176412217509, 0.3403176412217509, 0.34883472554126077, 0.34883472554126077, 0.34883472554126077, 0.3524285907056435, 0.3524285907056435, 0.3524285907056435, 0.3524285907056435, 0.3524285907056435, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002, 0.3562090301529002]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 1472)
((775, 2666), (97, 2666), (775, 1472), (97, 1472))
('VALIDATE SUM PROTEIN TRAIN: ', 19862.0)
('VALIDATE SUM PROTEIN TEST: ', 2514.0)
((775, 1472), (775, 1472), 312205.9, 92264.0)
('Error: ', tensor(127322.5625, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5230257518159231, 0.08523580763865045)
('Val: AUC, AUPR, Erros: ', 0.5445973409777083, 0.1078789003388046, 16950.172)
('Test: AUC, AUPR, Erros: ', 0.5292923664539758, 0.09050401142059127, 16169.278)
((775, 1472), (775, 1472), 141907.52, 92264.0)
('Error: ', tensor(82148.9297, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7758275584289979, 0.3452538204103903)
('Val: AUC, AUPR, Erros: ', 0.7725642612731479, 0.3720001652545678, 11998.391)
('Test: AUC, AUPR, Erros: ', 0.7808623305256224, 0.3483544642811359, 10613.516)
((775, 1472), (775, 1472), 120357.805, 92264.0)
('Error: ', tensor(70056.7188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8447035175035635, 0.42239640969278436)
('Val: AUC, AUPR, Erros: ', 0.8221901174362052, 0.40081171261461174, 10580.959)
('Test: AUC, AUPR, Erros: ', 0.8185384614229123, 0.36571712019744596, 9274.212)
((775, 1472), (775, 1472), 88138.195, 92264.0)
('Error: ', tensor(64527.8672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.852499754422803, 0.46361635220960096)
('Val: AUC, AUPR, Erros: ', 0.8186106668580537, 0.40322273096727573, 10436.963)
('Test: AUC, AUPR, Erros: ', 0.824552334088249, 0.38840645889355, 9178.399)
((775, 1472), (775, 1472), 87001.695, 92264.0)
('Error: ', tensor(62810.9062, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.856386498486375, 0.49657211117098815)
('Val: AUC, AUPR, Erros: ', 0.8184571778636116, 0.4172324240246788, 10311.14)
('Test: AUC, AUPR, Erros: ', 0.8215544480997734, 0.38174635282647923, 9309.152)
((775, 1472), (775, 1472), 92493.06, 92264.0)
('Error: ', tensor(61892.5781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8615842955461389, 0.5099185248421265)
('Val: AUC, AUPR, Erros: ', 0.8023629179462446, 0.40137935576793093, 10497.78)
('Test: AUC, AUPR, Erros: ', 0.7953928199105472, 0.3565613340353186, 9935.976)
((775, 1472), (775, 1472), 95404.125, 92264.0)
('Error: ', tensor(61315.7500, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8661277362262987, 0.5181051436061772)
('Val: AUC, AUPR, Erros: ', 0.7973421428993329, 0.3820887152990079, 10752.994)
('Test: AUC, AUPR, Erros: ', 0.7965911380533712, 0.3362484100361225, 10704.65)
((775, 1472), (775, 1472), 96875.06, 92264.0)
('Error: ', tensor(60938.9023, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8680494829837886, 0.5241340086114183)
('Val: AUC, AUPR, Erros: ', 0.797571771977488, 0.3768333289333726, 10850.45)
('Test: AUC, AUPR, Erros: ', 0.7910794771686405, 0.32044326934496925, 11362.974)
((775, 1472), (775, 1472), 96846.19, 92264.0)
('Error: ', tensor(60658.7852, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8699203226263652, 0.5281800344977878)
('Val: AUC, AUPR, Erros: ', 0.7994708306575113, 0.3753851883752369, 10955.34)
('Test: AUC, AUPR, Erros: ', 0.7841767001278324, 0.30951002256150195, 12095.846)
((775, 1472), (775, 1472), 97219.83, 92264.0)
('Error: ', tensor(60394.2305, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8715463289362381, 0.5323425634239971)
('Val: AUC, AUPR, Erros: ', 0.8055710890578875, 0.3777172321989471, 10999.568)
('Test: AUC, AUPR, Erros: ', 0.7812301348099591, 0.29981952929198297, 12903.589)
((775, 1472), (775, 1472), 97813.34, 92264.0)
('Error: ', tensor(60177.9297, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8728124752128663, 0.53535832871708)
('Val: AUC, AUPR, Erros: ', 0.8016037345347713, 0.37139640168333493, 11153.407)
('Test: AUC, AUPR, Erros: ', 0.7805205915122648, 0.2931250814444309, 13630.186)
Train: 0.8564 0.4966
Test: 0.8216 0.3817
[0.49063090124649633, 0.5165632772178338, 0.5538763211431001, 0.5861995741954009, 0.612508593217742, 0.6304402149364806, 0.6447080508433768, 0.6587866808456456, 0.6684186705492329, 0.6754609508876327, 0.6873850105714074, 0.6953346291866953, 0.7027618079449705, 0.706390051943246, 0.7083972520074769, 0.7129030653946472, 0.7207130318514319, 0.7268361682857871, 0.7288534390968213, 0.7325012022662407, 0.7344453505242596, 0.7383814315160079, 0.7398216906262327, 0.7444732936853934, 0.7473687416526174, 0.7507052093841632, 0.7541750279416024, 0.7571549266250943, 0.7594345143813863, 0.7600372360844809, 0.7625762727614092, 0.7649707421361847, 0.76830818723173, 0.7696354426508863, 0.7732660731354357, 0.7753820525237476, 0.7760223431762314, 0.7774788593838777, 0.7782659473978382, 0.7825644104154789, 0.7843622213840645, 0.787481588425416, 0.789582890788852, 0.7926232605322424, 0.7940501233432533, 0.7948078122275805, 0.7973825841317599, 0.7973825841317599, 0.7985785769750169, 0.7991369269409339, 0.8007804605287678, 0.801525464712641, 0.8045119589493992, 0.8067955009716378, 0.8067955009716378, 0.8074727310466994, 0.8074727310466994, 0.8091728662959238, 0.809941024256746, 0.809941024256746, 0.8115678181662861, 0.8115678181662861, 0.8115678181662861, 0.8115678181662861, 0.8115678181662861, 0.8115678181662861, 0.8115678181662861, 0.8133996649731854, 0.8133996649731854, 0.8142368702952805, 0.8151410639796617, 0.8151410639796617, 0.8151410639796617, 0.8151410639796617, 0.8151410639796617, 0.8151410639796617, 0.8162494305691763, 0.8162494305691763, 0.8162494305691763, 0.8192792794749674, 0.8192792794749674, 0.8192792794749674, 0.8204045616271599, 0.8204045616271599, 0.8204045616271599, 0.8204045616271599, 0.8204045616271599, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734, 0.8215544480997734]
[0.013344612869942263, 0.017042985387553757, 0.023216367365950685, 0.030342130154980548, 0.03829386261118797, 0.04602542985842868, 0.05160378531137647, 0.05930549266662394, 0.06450022724952387, 0.06886938812629122, 0.07759606070865564, 0.08401102539964717, 0.09124746114714474, 0.09429147821302535, 0.09667774946004869, 0.1015097301075968, 0.11110608204009234, 0.11937834809795207, 0.1218959155530661, 0.1268816743275096, 0.1300688212013036, 0.13625298823655801, 0.13859880879878936, 0.14664570232955004, 0.1522240509310926, 0.15685900464923316, 0.16366453989619198, 0.16919456036384511, 0.17404530703413845, 0.1749475350036786, 0.18010503792862204, 0.18563005714697603, 0.1934513415741587, 0.1970825623483598, 0.20602429972443292, 0.21185473596040538, 0.21373773223175838, 0.21823933031862003, 0.2205708541572141, 0.23354832215583973, 0.23909842512274368, 0.2486338524499319, 0.2557261598391257, 0.26610495941225043, 0.27062358354296256, 0.2734563884608767, 0.28268140102890793, 0.28268140102890793, 0.2862206685878246, 0.28810010278819453, 0.29463033245759884, 0.29739174172199606, 0.3078219625088239, 0.31628373580831476, 0.31628373580831476, 0.3181495417722539, 0.3181495417722539, 0.32499489944924737, 0.3280381017603453, 0.3280381017603453, 0.33510915721465995, 0.33510915721465995, 0.33510915721465995, 0.33510915721465995, 0.33510915721465995, 0.33510915721465995, 0.33510915721465995, 0.3435626540659543, 0.3435626540659543, 0.3473493499874393, 0.35126545042035007, 0.35126545042035007, 0.35126545042035007, 0.35126545042035007, 0.35126545042035007, 0.35126545042035007, 0.3565295908556644, 0.3565295908556644, 0.3565295908556644, 0.370554010199958, 0.370554010199958, 0.370554010199958, 0.375946342988142, 0.375946342988142, 0.375946342988142, 0.375946342988142, 0.375946342988142, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923, 0.38174635282647923]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 1472)
((775, 2666), (97, 2666), (775, 1472), (97, 1472))
('VALIDATE SUM PROTEIN TRAIN: ', 20003.0)
('VALIDATE SUM PROTEIN TEST: ', 2806.0)
((775, 1472), (775, 1472), 340948.44, 92125.0)
('Error: ', tensor(139067.0938, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5217809401415929, 0.08526168131294781)
('Val: AUC, AUPR, Erros: ', 0.5403891576802561, 0.09315209688583757, 17603.404)
('Test: AUC, AUPR, Erros: ', 0.5519013737342746, 0.111215812733852, 18230.475)
((775, 1472), (775, 1472), 140514.92, 92125.0)
('Error: ', tensor(85420.6797, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.691713678904558, 0.26143115357368096)
('Val: AUC, AUPR, Erros: ', 0.7009381781029689, 0.2629246416106582, 11091.939)
('Test: AUC, AUPR, Erros: ', 0.691571961109066, 0.2820932197415843, 12471.709)
((775, 1472), (775, 1472), 125008.45, 92125.0)
('Error: ', tensor(80142.6641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7949368816364153, 0.4148922188562958)
('Val: AUC, AUPR, Erros: ', 0.7976875733711477, 0.4072424285346352, 10495.932)
('Test: AUC, AUPR, Erros: ', 0.7794028881719265, 0.420955161823006, 11893.781)
((775, 1472), (775, 1472), 128305.29, 92125.0)
('Error: ', tensor(69578.5000, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8467818413667256, 0.4643976008901223)
('Val: AUC, AUPR, Erros: ', 0.8259650925741424, 0.43058951163096254, 9316.119)
('Test: AUC, AUPR, Erros: ', 0.8162733433451754, 0.44087452162475116, 10574.424)
((775, 1472), (775, 1472), 79600.164, 92125.0)
('Error: ', tensor(64287.6562, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8413820631844042, 0.472837337522409)
('Val: AUC, AUPR, Erros: ', 0.8283568691599938, 0.4296073519133934, 8936.342)
('Test: AUC, AUPR, Erros: ', 0.8136062826438012, 0.42731653353024973, 10297.118)
((775, 1472), (775, 1472), 91710.46, 92125.0)
('Error: ', tensor(62609.4922, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8498918641760865, 0.4973569018542381)
('Val: AUC, AUPR, Erros: ', 0.8313036641967823, 0.4366346439038975, 8762.295)
('Test: AUC, AUPR, Erros: ', 0.8132978914568731, 0.4369794002362283, 10078.547)
((775, 1472), (775, 1472), 96169.89, 92125.0)
('Error: ', tensor(61864.8789, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8534200076409661, 0.5097027100759041)
('Val: AUC, AUPR, Erros: ', 0.8286510378973747, 0.4284978395236994, 8977.52)
('Test: AUC, AUPR, Erros: ', 0.807115290588247, 0.4221815877083177, 10290.382)
((775, 1472), (775, 1472), 95159.67, 92125.0)
('Error: ', tensor(61337.6172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8529167676973259, 0.5165835630412755)
('Val: AUC, AUPR, Erros: ', 0.8236378909024575, 0.41747304666964297, 9138.058)
('Test: AUC, AUPR, Erros: ', 0.8003801077425834, 0.4228348646965917, 10276.693)
((775, 1472), (775, 1472), 97673.92, 92125.0)
('Error: ', tensor(61058.0391, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.856405063532553, 0.5201697442045656)
('Val: AUC, AUPR, Erros: ', 0.8191412079643708, 0.4036384568551231, 9377.364)
('Test: AUC, AUPR, Erros: ', 0.7939909617796432, 0.4201914248223913, 10303.648)
((775, 1472), (775, 1472), 109566.77, 92125.0)
('Error: ', tensor(61163.0742, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8634455863348137, 0.5249123299521318)
('Val: AUC, AUPR, Erros: ', 0.8272336211579117, 0.3946376919030288, 9888.0625)
('Test: AUC, AUPR, Erros: ', 0.8120020230964283, 0.42695022334505034, 10347.443)
((775, 1472), (775, 1472), 95439.08, 92125.0)
('Error: ', tensor(60593.0312, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8652104742551814, 0.528238559318962)
('Val: AUC, AUPR, Erros: ', 0.8266472826484315, 0.38067617131199327, 9809.39)
('Test: AUC, AUPR, Erros: ', 0.8101962661429672, 0.42629178496275866, 10248.942)
Train: 0.8499 0.4974
Test: 0.8133 0.4370
[0.4555474489096653, 0.49454120907872634, 0.5496998108426087, 0.5875548438200074, 0.6177136468114311, 0.6349224785867508, 0.6558322885283739, 0.6680695952934409, 0.6779159910214174, 0.6853350534916304, 0.6965198334785441, 0.7049589584870313, 0.71114266160752, 0.7149489784304408, 0.7179185517129898, 0.7222123081320448, 0.7289638617398884, 0.7334829760144468, 0.734929751762783, 0.7378081643249541, 0.7402218888396134, 0.7430872339574516, 0.7445390395455667, 0.7487979036436561, 0.7516568329054997, 0.7543802066292034, 0.7575854941931762, 0.7606478421253555, 0.7630948627857334, 0.7635205082429937, 0.7659355448977513, 0.7677753366613971, 0.7697598821478041, 0.7707478655733496, 0.7738531909999975, 0.7752478057939047, 0.7757277167870857, 0.7767644328772007, 0.7773627783902004, 0.7809821496077284, 0.7828093287657711, 0.7850248740596036, 0.7868042835380249, 0.7890656198269269, 0.7900547341878471, 0.7907310982416922, 0.7925372855134994, 0.7925372855134994, 0.7939053972715852, 0.7943910375334394, 0.7955615345736422, 0.7963667171614637, 0.7989728355943294, 0.800798661867657, 0.800798661867657, 0.8013912098575124, 0.8013912098575124, 0.8025130966010998, 0.80324631097871, 0.80324631097871, 0.8043331109624039, 0.8043331109624039, 0.8043331109624039, 0.8043331109624039, 0.8043331109624039, 0.8043331109624039, 0.8043331109624039, 0.8058614502356393, 0.8058614502356393, 0.8066747069394353, 0.8075692432479477, 0.8075692432479477, 0.8075692432479477, 0.8075692432479477, 0.8075692432479477, 0.8075692432479477, 0.8085206281607484, 0.8085206281607484, 0.8085206281607484, 0.8112716848989843, 0.8112716848989843, 0.8112716848989843, 0.8122543766458886, 0.8122543766458886, 0.8122543766458886, 0.8122543766458886, 0.8122543766458886, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731, 0.8132978914568731]
[0.017902074047544854, 0.025169219276768663, 0.03877411081526798, 0.05111025731619289, 0.06341077802310915, 0.07312937533560619, 0.08881845644490168, 0.09680564771006397, 0.10669972766575325, 0.11267584771611859, 0.12581520761377987, 0.1354258854340968, 0.1441253159878113, 0.14981993056577464, 0.15416159212887848, 0.16227160758075762, 0.1731576702093128, 0.17928861255780099, 0.18258759325847768, 0.18963300380922665, 0.1948361971002987, 0.19948724472494384, 0.20252026752572258, 0.2118541038601247, 0.21902589981620973, 0.2243296120099056, 0.23352189517578545, 0.24212665402575384, 0.24904562100252003, 0.2502541758419434, 0.25751219745662457, 0.2639981210133534, 0.26997182055378144, 0.272562624380376, 0.28187367876908836, 0.2856527374907912, 0.287397981059508, 0.28942256138184225, 0.291127719092704, 0.3035690403666729, 0.31011962323399767, 0.3170853923710557, 0.3238676301793604, 0.3312609580629378, 0.3345249568677809, 0.33718734706881076, 0.344030829071055, 0.344030829071055, 0.34891256136756543, 0.35092636153096257, 0.3557396049322975, 0.35895723522783884, 0.3691090489155714, 0.3764872956945244, 0.3764872956945244, 0.3783838609844713, 0.3783838609844713, 0.3824873785705771, 0.3857495994807027, 0.3857495994807027, 0.3897269573233932, 0.3897269573233932, 0.3897269573233932, 0.3897269573233932, 0.3897269573233932, 0.3897269573233932, 0.3897269573233932, 0.3971961025485569, 0.3971961025485569, 0.40095059968002444, 0.4055331203964524, 0.4055331203964524, 0.4055331203964524, 0.4055331203964524, 0.4055331203964524, 0.4055331203964524, 0.4108694859490219, 0.4108694859490219, 0.4108694859490219, 0.425761099907364, 0.425761099907364, 0.425761099907364, 0.43124890870084015, 0.43124890870084015, 0.43124890870084015, 0.43124890870084015, 0.43124890870084015, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283, 0.4369794002362283]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_3
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 1472)
((775, 2666), (97, 2666), (775, 1472), (97, 1472))
('VALIDATE SUM PROTEIN TRAIN: ', 20391.0)
('VALIDATE SUM PROTEIN TEST: ', 2373.0)
((775, 1472), (775, 1472), 206745.33, 95228.0)
('Error: ', tensor(98220.6875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5087760459021127, 0.0866239326649187)
('Val: AUC, AUPR, Erros: ', 0.47753080150921756, 0.073621842709784, 11723.005)
('Test: AUC, AUPR, Erros: ', 0.517042376201831, 0.08921340900050813, 12456.017)
((775, 1472), (775, 1472), 63096.227, 95228.0)
('Error: ', tensor(84125.3750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8094106800344364, 0.36455647006617087)
('Val: AUC, AUPR, Erros: ', 0.759824670660547, 0.2535930369626296, 9796.622)
('Test: AUC, AUPR, Erros: ', 0.8137092014646102, 0.3423825071810402, 10736.132)
((775, 1472), (775, 1472), 80417.164, 95228.0)
('Error: ', tensor(68380.1250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8440915434534656, 0.4349883218948404)
('Val: AUC, AUPR, Erros: ', 0.8204552530132112, 0.3182374619859306, 8570.118)
('Test: AUC, AUPR, Erros: ', 0.8312470568342412, 0.39812138475894066, 8961.63)
((775, 1472), (775, 1472), 110077.305, 95228.0)
('Error: ', tensor(65147.3398, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8544777340463348, 0.48956080555844383)
('Val: AUC, AUPR, Erros: ', 0.8193045157832837, 0.34204377533339125, 8756.607)
('Test: AUC, AUPR, Erros: ', 0.837858408498517, 0.4310257396264568, 8816.668)
((775, 1472), (775, 1472), 106896.055, 95228.0)
('Error: ', tensor(63853.8008, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8599288390452369, 0.5117426253614581)
('Val: AUC, AUPR, Erros: ', 0.8225880980785845, 0.349071099550079, 9129.833)
('Test: AUC, AUPR, Erros: ', 0.8341851533051927, 0.42413550672845, 9013.042)
((775, 1472), (775, 1472), 103227.82, 95228.0)
('Error: ', tensor(63071.3750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8634859527860065, 0.521849606539928)
('Val: AUC, AUPR, Erros: ', 0.8198772872253018, 0.33666710712184555, 9390.807)
('Test: AUC, AUPR, Erros: ', 0.8361826917878379, 0.41782598079161265, 9103.217)
((775, 1472), (775, 1472), 103966.59, 95228.0)
('Error: ', tensor(62663.7266, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.867820892245776, 0.5280147615793325)
('Val: AUC, AUPR, Erros: ', 0.8156452267818615, 0.32169512530892985, 9860.225)
('Test: AUC, AUPR, Erros: ', 0.8368232445634216, 0.4084127150324986, 9297.707)
((775, 1472), (775, 1472), 101147.47, 95228.0)
('Error: ', tensor(62367.6836, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8697159003243138, 0.5328166881562854)
('Val: AUC, AUPR, Erros: ', 0.8137908435687207, 0.31441081915935737, 10083.818)
('Test: AUC, AUPR, Erros: ', 0.8356501998355055, 0.397062117899181, 9443.204)
((775, 1472), (775, 1472), 99414.125, 95228.0)
('Error: ', tensor(62109.9727, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8715455038187279, 0.5361809744744543)
('Val: AUC, AUPR, Erros: ', 0.8130575806099853, 0.3083298996318264, 10378.222)
('Test: AUC, AUPR, Erros: ', 0.8319887666895671, 0.38514515070577426, 9629.9795)
((775, 1472), (775, 1472), 93526.62, 95228.0)
('Error: ', tensor(61898.1875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8736709718405037, 0.54189305578246)
('Val: AUC, AUPR, Erros: ', 0.8033885590153996, 0.2978060655108955, 10575.9)
('Test: AUC, AUPR, Erros: ', 0.8263250179900585, 0.3694102732835199, 9848.403)
((775, 1472), (775, 1472), 121946.45, 95228.0)
('Error: ', tensor(62055.9375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8746181249302243, 0.5462947877757507)
('Val: AUC, AUPR, Erros: ', 0.805298913969815, 0.30401187987172207, 12250.494)
('Test: AUC, AUPR, Erros: ', 0.8282900631426422, 0.36886084880039904, 10930.055)
Train: 0.8441 0.4350
Test: 0.8312 0.3981
[0.5640654091988881, 0.573039443187505, 0.5965006079445077, 0.6220502210860684, 0.6444181669610881, 0.6604972121051933, 0.6761726489759402, 0.6885376326592956, 0.6985826259374666, 0.7080676072290765, 0.7163817981226831, 0.7246507361015218, 0.7305794823341023, 0.7348195121461675, 0.7376580859138564, 0.7413092933825638, 0.7485209560692148, 0.7533913504720147, 0.7551303038587251, 0.7575415684218764, 0.7596464827567155, 0.7617078636836194, 0.7636100481894119, 0.7665208794407419, 0.7695163979727133, 0.7727438839216174, 0.7760645287960168, 0.7786991971561837, 0.7805305093464879, 0.7810348488455083, 0.7835800658125704, 0.7854756586499758, 0.7879329582457468, 0.7886071565451466, 0.7918546275515879, 0.7932394885270737, 0.7936197941587878, 0.7946413764566322, 0.7950956889027349, 0.7983528596229248, 0.8002022732334523, 0.8023479197391845, 0.803992498405391, 0.8063059871767115, 0.8072918701646025, 0.8079047636004782, 0.8102787271685905, 0.8102787271685905, 0.811504620964774, 0.8121832663222388, 0.8133892732610254, 0.8140964249078553, 0.8166685222097616, 0.818647400551169, 0.818647400551169, 0.8192171258361441, 0.8192171258361441, 0.8205649165060888, 0.8212942173326792, 0.8212942173326792, 0.8227639563977427, 0.8227639563977427, 0.8227639563977427, 0.8227639563977427, 0.8227639563977427, 0.8227639563977427, 0.8227639563977427, 0.8242684784319019, 0.8242684784319019, 0.8250618504683049, 0.8259113781529944, 0.8259113781529944, 0.8259113781529944, 0.8259113781529944, 0.8259113781529944, 0.8259113781529944, 0.826792011639778, 0.826792011639778, 0.826792011639778, 0.8293913695228725, 0.8293913695228725, 0.8293913695228725, 0.8303164597230451, 0.8303164597230451, 0.8303164597230451, 0.8303164597230451, 0.8303164597230451, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412, 0.8312470568342412]
[0.017172801629921665, 0.023738091856256388, 0.032612858132211237, 0.040407910904959314, 0.05133257675853889, 0.06138958754638341, 0.07085456550647981, 0.07827742822763255, 0.08658474705587817, 0.09601545629804659, 0.1054198161818598, 0.11784924034455063, 0.12503062082713312, 0.13263427045077497, 0.13858261090607082, 0.1450794997377475, 0.15688644610567581, 0.16676085954340847, 0.17012610410656034, 0.17497033827405334, 0.1802833119838488, 0.18327124001153483, 0.18794193604782877, 0.19416663910722926, 0.20192576839426157, 0.21094712123771217, 0.22044039853783937, 0.2275038426943131, 0.23163641518702888, 0.2332347459744771, 0.2407824635705561, 0.2460163161125893, 0.25397416414656815, 0.2558752063934746, 0.2668132494805837, 0.27168141508727833, 0.27219029851716237, 0.27577346092603966, 0.27695551145087743, 0.28701701375670374, 0.2927980585758301, 0.29999188846485486, 0.30507489708354785, 0.3129813414773793, 0.3160764938083259, 0.3179175705302809, 0.32526287192470077, 0.32526287192470077, 0.32970642235870834, 0.33157036081145574, 0.3360711857513078, 0.3383083553668406, 0.34730929718589254, 0.3545054009572856, 0.3545054009572856, 0.35638525728534326, 0.35638525728534326, 0.36154710344116825, 0.3642930377552296, 0.3642930377552296, 0.3695933653711074, 0.3695933653711074, 0.3695933653711074, 0.3695933653711074, 0.3695933653711074, 0.3695933653711074, 0.3695933653711074, 0.3745486613034785, 0.3745486613034785, 0.3771094209467457, 0.3805064793702916, 0.3805064793702916, 0.3805064793702916, 0.3805064793702916, 0.3805064793702916, 0.3805064793702916, 0.3834720219006262, 0.3834720219006262, 0.3834720219006262, 0.39171033244041686, 0.39171033244041686, 0.39171033244041686, 0.39496118250160106, 0.39496118250160106, 0.39496118250160106, 0.39496118250160106, 0.39496118250160106, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066, 0.39812138475894066]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_4
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 1472)
((775, 2666), (97, 2666), (775, 1472), (97, 1472))
('VALIDATE SUM PROTEIN TRAIN: ', 20255.0)
('VALIDATE SUM PROTEIN TEST: ', 2418.0)
((775, 1472), (775, 1472), 381753.62, 96143.0)
('Error: ', tensor(159457.7188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5391623928077887, 0.09391236271540165)
('Val: AUC, AUPR, Erros: ', 0.5327054203973963, 0.08767821204155175, 19781.688)
('Test: AUC, AUPR, Erros: ', 0.5206339795489924, 0.08402875575786799, 19624.555)
((775, 1472), (775, 1472), 97388.59, 96143.0)
('Error: ', tensor(82500.4375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8064755449213202, 0.40226889961090434)
('Val: AUC, AUPR, Erros: ', 0.788493077889737, 0.3252096376397211, 9785.5625)
('Test: AUC, AUPR, Erros: ', 0.7577944689425741, 0.28979491357745746, 9653.455)
((775, 1472), (775, 1472), 105830.58, 96143.0)
('Error: ', tensor(68750.6406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.827932449624704, 0.4430209621331394)
('Val: AUC, AUPR, Erros: ', 0.807255638167392, 0.35141383150318284, 8701.486)
('Test: AUC, AUPR, Erros: ', 0.7804432965784297, 0.3214152143694923, 8708.798)
((775, 1472), (775, 1472), 86736.49, 96143.0)
('Error: ', tensor(66072.2344, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8283106108997513, 0.4812930033917256)
('Val: AUC, AUPR, Erros: ', 0.8128571359041957, 0.3705067749370796, 8742.134)
('Test: AUC, AUPR, Erros: ', 0.7878445619797725, 0.33364896927452203, 8877.476)
((775, 1472), (775, 1472), 89201.49, 96143.0)
('Error: ', tensor(65003.3672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8287379209958615, 0.5047521973745431)
('Val: AUC, AUPR, Erros: ', 0.7856540278362701, 0.3595709811310222, 8934.075)
('Test: AUC, AUPR, Erros: ', 0.7662712303732927, 0.32796883668688925, 9028.099)
((775, 1472), (775, 1472), 97256.58, 96143.0)
('Error: ', tensor(64172.0352, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8463762885880786, 0.5129134158339541)
('Val: AUC, AUPR, Erros: ', 0.7991995332996598, 0.35321479651930243, 9353.817)
('Test: AUC, AUPR, Erros: ', 0.7851026528696757, 0.32286750807069353, 9334.981)
((775, 1472), (775, 1472), 108792.76, 96143.0)
('Error: ', tensor(63841.9258, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8592236338780679, 0.523118665612462)
('Val: AUC, AUPR, Erros: ', 0.797351182194234, 0.3477654060565273, 10297.8545)
('Test: AUC, AUPR, Erros: ', 0.8141851557353339, 0.32645168911740063, 10040.02)
((775, 1472), (775, 1472), 93322.36, 96143.0)
('Error: ', tensor(63100.4219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8635462888467629, 0.5302919895792444)
('Val: AUC, AUPR, Erros: ', 0.7977613070646628, 0.3423584609596281, 10010.747)
('Test: AUC, AUPR, Erros: ', 0.8190582071812456, 0.3247750120572751, 9528.512)
((775, 1472), (775, 1472), 101214.93, 96143.0)
('Error: ', tensor(62704.2891, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8672990987246649, 0.5338668494464709)
('Val: AUC, AUPR, Erros: ', 0.7957060902450956, 0.33511054593586076, 10779.157)
('Test: AUC, AUPR, Erros: ', 0.8162334110231981, 0.3178002181149446, 10212.182)
((775, 1472), (775, 1472), 100745.445, 96143.0)
('Error: ', tensor(62287.0820, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8697938444485955, 0.5396864831908892)
('Val: AUC, AUPR, Erros: ', 0.7908572312797162, 0.3278479535817725, 11025.374)
('Test: AUC, AUPR, Erros: ', 0.8171629826796094, 0.3185961241686302, 10363.366)
((775, 1472), (775, 1472), 102016.12, 96143.0)
('Error: ', tensor(61677.3320, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8722757704701365, 0.546153100834978)
('Val: AUC, AUPR, Erros: ', 0.7933404139136139, 0.3201641645846222, 11558.811)
('Test: AUC, AUPR, Erros: ', 0.8144125768763537, 0.3120295199641071, 10958.057)
Train: 0.8279 0.4430
Test: 0.7804 0.3214
[0.5189431961372004, 0.5356925837240365, 0.5516255682600909, 0.5717978256785822, 0.5896272130880091, 0.6099728825901045, 0.6200705859440891, 0.6316235790577622, 0.6382520350171398, 0.6440559891213835, 0.6536116920495416, 0.6644708094191145, 0.6716771223841914, 0.6766026253516055, 0.6789150706677582, 0.6831132807721095, 0.6934188253981424, 0.6990746970650634, 0.7001570915166195, 0.7023425509153525, 0.7049316247147648, 0.7075665662870305, 0.709570532515401, 0.7142338729787419, 0.7172702374099609, 0.7207909460118735, 0.7236132701769818, 0.726269986600726, 0.7283833913347542, 0.728630781673732, 0.7315232433449774, 0.7334511666347158, 0.7357820982778709, 0.7368015852575664, 0.7397411830975018, 0.7408151565845906, 0.7414225691634099, 0.742831352056585, 0.7435460223207686, 0.7479637475430165, 0.7498206797981077, 0.7521167315547341, 0.7536032932210341, 0.7561326747203849, 0.7572551245977704, 0.7578139390662817, 0.7600394553287375, 0.7600394553287375, 0.7613881477720857, 0.7619676677107957, 0.7632497543640986, 0.7641642208370271, 0.7662915840598982, 0.7683882223614252, 0.7683882223614252, 0.7688632556560052, 0.7688632556560052, 0.7699794705144803, 0.7704572821502387, 0.7704572821502387, 0.7716000676683301, 0.7716000676683301, 0.7716000676683301, 0.7716000676683301, 0.7716000676683301, 0.7716000676683301, 0.7716000676683301, 0.773127604609618, 0.773127604609618, 0.7738599361042892, 0.7746022230570817, 0.7746022230570817, 0.7746022230570817, 0.7746022230570817, 0.7746022230570817, 0.7746022230570817, 0.7755346643869084, 0.7755346643869084, 0.7755346643869084, 0.7784680300215008, 0.7784680300215008, 0.7784680300215008, 0.7794342386916856, 0.7794342386916856, 0.7794342386916856, 0.7794342386916856, 0.7794342386916856, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297, 0.7804432965784297]
[0.012907910380847624, 0.01721197551437078, 0.022545600169396406, 0.02801463608596059, 0.034340617632848416, 0.04331053256680036, 0.04750680019538288, 0.05659762338293315, 0.06026996629578529, 0.06472021383300862, 0.07400131378899176, 0.0840083070935255, 0.091403955899978, 0.09598529644833277, 0.09848567577440996, 0.10322791329351719, 0.11523779913977612, 0.12235039859109938, 0.12325375474459878, 0.12605161486184097, 0.12993588783768026, 0.1353353356425684, 0.14039773504040015, 0.14673182650587496, 0.15090048066482759, 0.15755463911647777, 0.1617679373243372, 0.1654285796847968, 0.17071286336024644, 0.1714764086204569, 0.17731113144825694, 0.18184365080464363, 0.18799804133149878, 0.1902495435736061, 0.19701020453792445, 0.2006072371855696, 0.2017523191770226, 0.20611350703474063, 0.20818260840805988, 0.21850726977699236, 0.22302963333432754, 0.23133359358753425, 0.23603751736679002, 0.24342353275482487, 0.24645217093870123, 0.24812705382157296, 0.2549957574477395, 0.2549957574477395, 0.25761920627502227, 0.25943441688222113, 0.26396460556446344, 0.26606753390331184, 0.2731372549942003, 0.2787266377684692, 0.2787266377684692, 0.28056807808990936, 0.28056807808990936, 0.28462248925210326, 0.28614291298385625, 0.28614291298385625, 0.2903908432749066, 0.2903908432749066, 0.2903908432749066, 0.2903908432749066, 0.2903908432749066, 0.2903908432749066, 0.2903908432749066, 0.29561986951597985, 0.29561986951597985, 0.2975746070097125, 0.29990401359564095, 0.29990401359564095, 0.29990401359564095, 0.29990401359564095, 0.29990401359564095, 0.29990401359564095, 0.3034482844124902, 0.3034482844124902, 0.3034482844124902, 0.31462434731134115, 0.31462434731134115, 0.31462434731134115, 0.317853524615122, 0.317853524615122, 0.317853524615122, 0.317853524615122, 0.317853524615122, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923, 0.3214152143694923]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_5
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 1472)
((775, 2666), (97, 2666), (775, 1472), (97, 1472))
('VALIDATE SUM PROTEIN TRAIN: ', 20433.0)
('VALIDATE SUM PROTEIN TEST: ', 2509.0)
((775, 1472), (775, 1472), 339652.34, 96162.0)
('Error: ', tensor(140037.6250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5363671359099209, 0.09016479401844489)
('Val: AUC, AUPR, Erros: ', 0.5293132833403084, 0.0819368046752703, 17107.066)
('Test: AUC, AUPR, Erros: ', 0.5424426155793795, 0.08714061173780807, 17252.633)
((775, 1472), (775, 1472), 103831.2, 96162.0)
('Error: ', tensor(84037.6094, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7726209944749891, 0.3703951900209349)
('Val: AUC, AUPR, Erros: ', 0.7521230049130615, 0.3248422049205171, 9717.739)
('Test: AUC, AUPR, Erros: ', 0.750052784666113, 0.31476150043231654, 9954.186)
((775, 1472), (775, 1472), 115613.21, 96162.0)
('Error: ', tensor(71003.5859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8421574538721359, 0.44457350001328905)
('Val: AUC, AUPR, Erros: ', 0.8287413371464326, 0.379633990556301, 8435.703)
('Test: AUC, AUPR, Erros: ', 0.816025087281284, 0.35635670300558114, 8722.952)
((775, 1472), (775, 1472), 77900.32, 96162.0)
('Error: ', tensor(66434.0703, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8395224792279296, 0.47716109084156655)
('Val: AUC, AUPR, Erros: ', 0.8311116854642594, 0.4062382582068953, 8161.4697)
('Test: AUC, AUPR, Erros: ', 0.8218153841673643, 0.3775160006673993, 8594.44)
((775, 1472), (775, 1472), 100248.88, 96162.0)
('Error: ', tensor(64691.9609, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8556889051893322, 0.511541767199928)
('Val: AUC, AUPR, Erros: ', 0.837016133074924, 0.41466400205269643, 8142.1885)
('Test: AUC, AUPR, Erros: ', 0.8250619330388796, 0.3814882010832869, 8701.968)
((775, 1472), (775, 1472), 91877.164, 96162.0)
('Error: ', tensor(63698.9219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8614252580398393, 0.522120732477992)
('Val: AUC, AUPR, Erros: ', 0.8327771723551904, 0.3953699902838818, 8384.257)
('Test: AUC, AUPR, Erros: ', 0.8016250978111629, 0.3613174046877329, 9192.583)
((775, 1472), (775, 1472), 97154.766, 96162.0)
('Error: ', tensor(62974.5742, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8653840744564836, 0.5301735149053939)
('Val: AUC, AUPR, Erros: ', 0.8290869065910359, 0.3786160049835466, 8705.474)
('Test: AUC, AUPR, Erros: ', 0.7980335400355736, 0.34447668412214055, 9829.497)
