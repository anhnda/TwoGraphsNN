class Net52(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net52, self).__init__()

        self.convD1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv1g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv2 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv2g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv3 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv3g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=0.8)

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, proteinNodes, proteinWeight, drugGraphBatch, nDrug, drugFeatures = None):


        if config.INNER_FEATURE and drugFeatures is not None:
            nDrug = drugFeatures.shape[0]
            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            xDrug = self.L1(drugFeatures)
            xDrug = self.actL1(xDrug)
            xDrug = self.L2(xDrug)
            xDrug = self.actL2(xDrug)

            x = torch.cat((xDrug, x), dim=0)

        elif config.INNER_GRAPH:
            xAtom, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch
            # xDrug = self.mact1(self.mlinear1(xDrug))
            # xDrug = self.mact2(self.mlinear2(xDrug))

            xProtein = self.nodesEmbedding(proteinNodes)

            xAtom = self.nodesEmbedding(xAtom)
            xAtom = xAtom.squeeze(1)




            iLevel = 0
            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv1(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv1g(xAtom, edge_index))
            xAtom, edge_index, _, batch, _, _ = self.pool1(xAtom, edge_index, None, batch)
            x1 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            iLevel += 1

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv2(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv2g(xAtom, edge_index))

            iLevel += 1
            xAtom, edge_index, _, batch, _, _ = self.pool2(xAtom, edge_index, None, batch)
            x2 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv3(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv3g(xAtom, edge_index))

            xAtom, edge_index, _, batch, _, _ = self.pool3(xAtom, edge_index, None, batch)
            x3 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xDrug = x1 + x2 + x3

            xDrug = self.lin1(xDrug)
            xDrug = self.act1(xDrug)
            xDrug = self.lin2(xDrug)
            xDrug = self.act2(xDrug)

            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            x = torch.cat((xDrug, x), dim=0)
        else:
            x = self.nodesEmbedding(x)

        if config.OUTER_GRAPH:
            # Conv Drug:
            x = self.convD1(x, drugEdges)
            x = F.relu(x)
            x = self.convD2(x, drugEdges)
            x = F.relu(x)

        if config.SE_GRAPH:
            # Conv SE:
            x = self.convS1(x, seEdges)
            x = F.relu(x)
            # x = self.convS2(x, seEdges)
            # x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', False)
('Protein Test: ', True)
('Inner Graph, Outer Graph, Se Graph: ', True, True, False)
('Drug Features: ', False)
('Cross Prob: ', 0.5)
('Inner Level: ', 1)
MPNNX
<models.MPNNXP5.MPNNXP5 object at 0x7f05d98e46d0>
('Manual torch seed: ', 1772727637)
('Config: ', 'Protein Test: ', True, 'KNN: ', 2)
('EXT MODE: ', True)
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 19983.0)
('VALIDATE SUM PROTEIN TEST: ', 2685.0)
((775, 598), (775, 598), 119778.02, 78522.0)
('Error: ', tensor(68743.7812, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5326623902099963, 0.18077414777263467)
('Val: AUC, AUPR, Erros: ', 0.5363670404879624, 0.18571110198239518, 8759.853)
('Test: AUC, AUPR, Erros: ', 0.5281307437299421, 0.19171075867393442, 8936.949)
((775, 598), (775, 598), 71910.74, 78522.0)
('Error: ', tensor(59670.9844, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7701394416892777, 0.4768508196470064)
('Val: AUC, AUPR, Erros: ', 0.7565749319956083, 0.44706993956413754, 7689.323)
('Test: AUC, AUPR, Erros: ', 0.7237597154424731, 0.4198127644439325, 8035.868)
((775, 598), (775, 598), 65492.566, 78522.0)
('Error: ', tensor(51747.2812, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.796211477070282, 0.5154534882092042)
('Val: AUC, AUPR, Erros: ', 0.769869550179431, 0.4705335641385996, 6903.7544)
('Test: AUC, AUPR, Erros: ', 0.7466700990738502, 0.43806708623922574, 7398.529)
((775, 598), (775, 598), 75271.02, 78522.0)
('Error: ', tensor(49594.5586, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8073017192496013, 0.5548232423673994)
('Val: AUC, AUPR, Erros: ', 0.7659988478278776, 0.46292323468465135, 7043.7544)
('Test: AUC, AUPR, Erros: ', 0.7543657998038986, 0.447429010749078, 7397.7017)
((775, 598), (775, 598), 80673.086, 78522.0)
('Error: ', tensor(48579.1562, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8195145836054099, 0.5744461711324149)
('Val: AUC, AUPR, Erros: ', 0.7409022542027728, 0.4221533797240973, 7594.938)
('Test: AUC, AUPR, Erros: ', 0.7428332417329769, 0.43816276434797086, 7561.917)
((775, 598), (775, 598), 81149.55, 78522.0)
('Error: ', tensor(47909.4219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8277622003902598, 0.5848974579750081)
('Val: AUC, AUPR, Erros: ', 0.7368677521646045, 0.397649044839361, 8209.012)
('Test: AUC, AUPR, Erros: ', 0.7529295074977572, 0.4355147993280916, 7614.558)
((775, 598), (775, 598), 82989.7, 78522.0)
('Error: ', tensor(47295.8672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8347633311836492, 0.5960729800298903)
('Val: AUC, AUPR, Erros: ', 0.7167551939124361, 0.360135431792831, 9519.283)
('Test: AUC, AUPR, Erros: ', 0.7469717100033759, 0.42458393403114214, 7768.105)
((775, 598), (775, 598), 81018.98, 78522.0)
('Error: ', tensor(46809.6680, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8396558904199098, 0.6040630997318311)
('Val: AUC, AUPR, Erros: ', 0.7077317160746653, 0.3413009701084398, 10767.814)
('Test: AUC, AUPR, Erros: ', 0.7446002841184269, 0.41643055496906883, 7873.8213)
((775, 598), (775, 598), 85461.266, 78522.0)
('Error: ', tensor(46420.1172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8430813610775204, 0.6106399676066205)
('Val: AUC, AUPR, Erros: ', 0.7119389900094262, 0.33677493390550095, 12497.821)
('Test: AUC, AUPR, Erros: ', 0.7461950882721463, 0.41446164548173625, 8109.7783)
((775, 598), (775, 598), 85960.016, 78522.0)
('Error: ', tensor(45949.1953, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8474510099236143, 0.6183519377933876)
('Val: AUC, AUPR, Erros: ', 0.7092792849187957, 0.3276758370859274, 13827.853)
('Test: AUC, AUPR, Erros: ', 0.7412652544495592, 0.4054552928177633, 8297.027)
((775, 598), (775, 598), 88985.125, 78522.0)
('Error: ', tensor(45352.3164, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8512792473821558, 0.6267803406661729)
('Val: AUC, AUPR, Erros: ', 0.701441754392701, 0.32127565538477243, 14913.124)
('Test: AUC, AUPR, Erros: ', 0.7332123272507216, 0.3974795884865572, 8650.286)
Train: 0.7962 0.5155
Test: 0.7467 0.4381
[0.5506183481132146, 0.56910503583805, 0.57954563634721, 0.5824496992986924, 0.5797046582319252, 0.5870068156440036, 0.5946698813199419, 0.5991340023201464, 0.5991313800120259, 0.6039844526140947, 0.6070003331047007, 0.610024063984431, 0.6198100788130309, 0.6256688184555227, 0.6272250099079912, 0.6302429597358301, 0.6315942083394693, 0.634454078945952, 0.6364972385190271, 0.6427950412204158, 0.6484430214479328, 0.6525800201507346, 0.6570727205735549, 0.6607389581295431, 0.6640565980661512, 0.6645681716813255, 0.6673394420539345, 0.6705958099448281, 0.6742458695931063, 0.6757269478619854, 0.6809744533975669, 0.6831531902812503, 0.6840924229952556, 0.6857230604763505, 0.686826562062756, 0.6928765826952223, 0.6953606091189664, 0.6991449402609617, 0.701602472825722, 0.7055550525447866, 0.7072113850240866, 0.7082954733830158, 0.7116172248118632, 0.7116172248118632, 0.7140429125091217, 0.7149739289515344, 0.7170755222347522, 0.7182018019447131, 0.7221925962898187, 0.7254202683399675, 0.7254202683399675, 0.726460769825843, 0.726460769825843, 0.7289050689841781, 0.7299098019596448, 0.7299098019596448, 0.7318687559670689, 0.7318687559670689, 0.7318687559670689, 0.7318687559670689, 0.7318687559670689, 0.7318687559670689, 0.7318687559670689, 0.7346066270725512, 0.7346066270725512, 0.7359532092933094, 0.7373292494340814, 0.7373292494340814, 0.7373292494340814, 0.7373292494340814, 0.7373292494340814, 0.7373292494340814, 0.7388699241405191, 0.7388699241405191, 0.7388699241405191, 0.7433258858003405, 0.7433258858003405, 0.7433258858003405, 0.7449449264376033, 0.7449449264376033, 0.7449449264376033, 0.7449449264376033, 0.7449449264376033, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502, 0.7466700990738502]
[0.06605283241636101, 0.07709486617124048, 0.08492100593015589, 0.09230365815393496, 0.09504674897676767, 0.10520079040410371, 0.11549322595105577, 0.12330247338103041, 0.12572504908000434, 0.13292928140595228, 0.13681788277167342, 0.14216516152474457, 0.15583584530238362, 0.16404815605412473, 0.16698841301937462, 0.17237409691233774, 0.17366243283353083, 0.17820703077529243, 0.1816476911611836, 0.193593184392495, 0.20427173092797635, 0.21064129637465423, 0.21881804433950502, 0.22603702835729134, 0.23220595029634464, 0.23301853817760693, 0.23739255164580267, 0.24472325816884669, 0.25245099139381727, 0.2554190032698175, 0.26607713905968366, 0.2700913928516165, 0.27219289411435443, 0.2756644358326636, 0.27910907482082703, 0.29427982956194587, 0.29966686744558635, 0.3091188729050723, 0.3151715629256049, 0.324428853368826, 0.3289525837873267, 0.3314933905971688, 0.3385428637845521, 0.3385428637845521, 0.34514187856635237, 0.3469911515217611, 0.3527839355512167, 0.35556922874170555, 0.3661451466423806, 0.3748625477216967, 0.3748625477216967, 0.3775022410226187, 0.3775022410226187, 0.38513291663749316, 0.38813499351970315, 0.38813499351970315, 0.39395706991384905, 0.39395706991384905, 0.39395706991384905, 0.39395706991384905, 0.39395706991384905, 0.39395706991384905, 0.39395706991384905, 0.4023061825423013, 0.4023061825423013, 0.4063984320851219, 0.4104638142549493, 0.4104638142549493, 0.4104638142549493, 0.4104638142549493, 0.4104638142549493, 0.4104638142549493, 0.41509872815442617, 0.41509872815442617, 0.41509872815442617, 0.4282391978228681, 0.4282391978228681, 0.4282391978228681, 0.43280755266178983, 0.43280755266178983, 0.43280755266178983, 0.43280755266178983, 0.43280755266178983, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574, 0.43806708623922574]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 19862.0)
('VALIDATE SUM PROTEIN TEST: ', 2514.0)
((775, 598), (775, 598), 126774.51, 77474.0)
('Error: ', tensor(69567.4453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5456855043206299, 0.18665411619386788)
('Val: AUC, AUPR, Erros: ', 0.5667087931331194, 0.23035215746125431, 9485.465)
('Test: AUC, AUPR, Erros: ', 0.565047225745339, 0.20494438059646036, 8896.678)
((775, 598), (775, 598), 65787.59, 77474.0)
('Error: ', tensor(59532.3594, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7735368649292393, 0.4716036468659869)
('Val: AUC, AUPR, Erros: ', 0.7519827394936829, 0.46701292193910876, 8740.399)
('Test: AUC, AUPR, Erros: ', 0.7559999572989075, 0.4317733780030354, 7778.01)
((775, 598), (775, 598), 91231.375, 77474.0)
('Error: ', tensor(51435.7773, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7988487630420699, 0.5111577838064189)
('Val: AUC, AUPR, Erros: ', 0.7539763575477221, 0.46809128487307883, 7852.3013)
('Test: AUC, AUPR, Erros: ', 0.7606762990710425, 0.45045883380441076, 7176.227)
((775, 598), (775, 598), 73761.16, 77474.0)
('Error: ', tensor(49348.6641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8099339594846479, 0.5463869237785052)
('Val: AUC, AUPR, Erros: ', 0.7501637790192057, 0.47815104047601587, 7844.3647)
('Test: AUC, AUPR, Erros: ', 0.757483995199169, 0.4589520293166576, 7020.3833)
((775, 598), (775, 598), 82091.02, 77474.0)
('Error: ', tensor(48101.1875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8230561152920106, 0.5707328844801025)
('Val: AUC, AUPR, Erros: ', 0.7320768419972752, 0.46513954790808537, 7992.731)
('Test: AUC, AUPR, Erros: ', 0.7326216555935524, 0.42966272148837126, 7498.554)
((775, 598), (775, 598), 81884.32, 77474.0)
('Error: ', tensor(47450.3867, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8299301776204762, 0.5810782610807013)
('Val: AUC, AUPR, Erros: ', 0.730635432051674, 0.45050740667711103, 8143.4077)
('Test: AUC, AUPR, Erros: ', 0.7277235544198379, 0.404738059650395, 7979.682)
((775, 598), (775, 598), 81960.39, 77474.0)
('Error: ', tensor(46922.5742, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8352964398537029, 0.5906437275412803)
('Val: AUC, AUPR, Erros: ', 0.7305966035295478, 0.43426184905933096, 8330.627)
('Test: AUC, AUPR, Erros: ', 0.7177756847812105, 0.37914134375157404, 8571.314)
((775, 598), (775, 598), 79434.945, 77474.0)
('Error: ', tensor(46435.1602, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8404413271299398, 0.5994443028206006)
('Val: AUC, AUPR, Erros: ', 0.7310501228655755, 0.4275522132989081, 8439.887)
('Test: AUC, AUPR, Erros: ', 0.7060349496381488, 0.360961733136631, 9126.895)
((775, 598), (775, 598), 79873.12, 77474.0)
('Error: ', tensor(45725.3047, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8465001100649595, 0.6088774759654672)
('Val: AUC, AUPR, Erros: ', 0.7292925507147868, 0.42038463983519414, 8652.686)
('Test: AUC, AUPR, Erros: ', 0.7113151543798025, 0.35849239597989163, 9701.911)
((775, 598), (775, 598), 80132.06, 77474.0)
('Error: ', tensor(44862.5703, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8500789808660237, 0.6181145967809448)
('Val: AUC, AUPR, Erros: ', 0.7266046286246662, 0.4151763331107114, 8837.68)
('Test: AUC, AUPR, Erros: ', 0.7103436283771094, 0.3515474390985007, 10142.427)
((775, 598), (775, 598), 76819.79, 77474.0)
('Error: ', tensor(44344.8633, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8530233021700175, 0.6251202921049933)
('Val: AUC, AUPR, Erros: ', 0.7234114552558177, 0.41055591950037174, 8931.555)
('Test: AUC, AUPR, Erros: ', 0.7090346674256655, 0.34153561572770075, 10615.932)
Train: 0.8099 0.5464
Test: 0.7575 0.4590
[0.5107607382640079, 0.5262206119773674, 0.523667623496685, 0.5319418169631029, 0.5367369778045317, 0.5457321968609734, 0.5626442275885207, 0.5733998024892086, 0.582793604783267, 0.5878065752589533, 0.5900609963709442, 0.5972303616291113, 0.608753639903771, 0.6183053294805816, 0.6212487485754523, 0.6268243217671139, 0.6295127239379984, 0.6353836034372856, 0.6372525191748136, 0.6437288873994319, 0.6479483333086268, 0.652470740190222, 0.6574736503804308, 0.6616275680801543, 0.6645862017892171, 0.6654003517188489, 0.66882553180048, 0.6722612251427056, 0.6772514559654442, 0.6791354998515533, 0.6845592084646485, 0.6878669630060456, 0.6889169902231287, 0.6912765275720849, 0.692431264310361, 0.6988569257485001, 0.7015163906617718, 0.7061283953216876, 0.7092250902550994, 0.7137628976532318, 0.7157523288621029, 0.7169402151911997, 0.7208350301507584, 0.7208350301507584, 0.7223922023884992, 0.7232558698410388, 0.7258058238154103, 0.7268493844676696, 0.7310380167931861, 0.7343937440997195, 0.7343937440997195, 0.7353109947162387, 0.7353109947162387, 0.7378250823709668, 0.739028815645099, 0.739028815645099, 0.7415019132210313, 0.7415019132210313, 0.7415019132210313, 0.7415019132210313, 0.7415019132210313, 0.7415019132210313, 0.7415019132210313, 0.7444991400740903, 0.7444991400740903, 0.7458437047332427, 0.7472132968548086, 0.7472132968548086, 0.7472132968548086, 0.7472132968548086, 0.7472132968548086, 0.7472132968548086, 0.7490322191622792, 0.7490322191622792, 0.7490322191622792, 0.7537317664661262, 0.7537317664661262, 0.7537317664661262, 0.7555762910454915, 0.7555762910454915, 0.7555762910454915, 0.7555762910454915, 0.7555762910454915, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169, 0.757483995199169]
[0.058883104715359735, 0.06600905463330872, 0.06769808341752764, 0.07666073609553249, 0.08063433122608656, 0.08579150919259396, 0.09802106050082171, 0.10616664110204899, 0.11563390528452315, 0.11896154070929656, 0.12167795763068937, 0.12878999036007632, 0.1416800356643575, 0.15325592816527275, 0.1562494273669481, 0.16300793220583035, 0.16704251880407261, 0.1753026872735603, 0.1780773567728377, 0.18877001123483694, 0.19574133234255459, 0.20079788413255328, 0.20923121266579223, 0.21578983303457078, 0.22125967580982495, 0.22237039427558922, 0.22795890647655356, 0.23484901127041283, 0.24447246545773343, 0.2487756655452994, 0.2593408865304636, 0.2666884511828451, 0.26901296004432146, 0.2746646120732176, 0.2775304454476369, 0.2934693924903758, 0.29959330433297615, 0.3105426098395809, 0.3184672591882048, 0.3305772779041148, 0.3352877028660184, 0.33852554404072766, 0.3489267261805424, 0.3489267261805424, 0.3520483048491759, 0.353741795340489, 0.36127354201864337, 0.3641765135096853, 0.3751496654443263, 0.3846130850663233, 0.3846130850663233, 0.38653611485531447, 0.38653611485531447, 0.39435961525155394, 0.39761000804374685, 0.39761000804374685, 0.4056242634404248, 0.4056242634404248, 0.4056242634404248, 0.4056242634404248, 0.4056242634404248, 0.4056242634404248, 0.4056242634404248, 0.4157346723008274, 0.4157346723008274, 0.420100879984275, 0.4246216280755356, 0.4246216280755356, 0.4246216280755356, 0.4246216280755356, 0.4246216280755356, 0.4246216280755356, 0.4306768918917409, 0.4306768918917409, 0.4306768918917409, 0.44635143090528295, 0.44635143090528295, 0.44635143090528295, 0.4524369605086477, 0.4524369605086477, 0.4524369605086477, 0.4524369605086477, 0.4524369605086477, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576, 0.4589520293166576]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 20003.0)
('VALIDATE SUM PROTEIN TEST: ', 2806.0)
((775, 598), (775, 598), 138428.03, 77470.0)
('Error: ', tensor(72283.2031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5575065607768366, 0.1922014000035138)
('Val: AUC, AUPR, Erros: ', 0.5748300349709501, 0.2063812145938804, 9198.925)
('Test: AUC, AUPR, Erros: ', 0.5822664427565777, 0.2374421968537569, 9715.711)
((775, 598), (775, 598), 129595.92, 77470.0)
('Error: ', tensor(66931.5781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7303239958840568, 0.44955194031964923)
('Val: AUC, AUPR, Erros: ', 0.7428374894769976, 0.45855494145483605, 8477.949)
('Test: AUC, AUPR, Erros: ', 0.7220211831573459, 0.47054520966839397, 9020.375)
((775, 598), (775, 598), 117890.41, 77470.0)
('Error: ', tensor(57366.3906, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.785619741779633, 0.5091998713247134)
('Val: AUC, AUPR, Erros: ', 0.7786128147020925, 0.500541336687813, 7464.0923)
('Test: AUC, AUPR, Erros: ', 0.7614770981418602, 0.5071949964553322, 8048.708)
((775, 598), (775, 598), 84597.77, 77470.0)
('Error: ', tensor(50323.7305, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7991422869544489, 0.5254221541795471)
('Val: AUC, AUPR, Erros: ', 0.7723035405663252, 0.4906960188641474, 6870.2183)
('Test: AUC, AUPR, Erros: ', 0.7611001305343437, 0.49661369636900354, 7641.966)
((775, 598), (775, 598), 74644.266, 77470.0)
('Error: ', tensor(49215.4922, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8066877648952169, 0.5457849801101952)
('Val: AUC, AUPR, Erros: ', 0.7737755727520557, 0.4994735087803296, 6824.3613)
('Test: AUC, AUPR, Erros: ', 0.7599747626711576, 0.49767859013683247, 7715.2163)
((775, 598), (775, 598), 82300.81, 77470.0)
('Error: ', tensor(48361.1602, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.816339672876519, 0.5650040628790847)
('Val: AUC, AUPR, Erros: ', 0.7810583172103799, 0.5068404024454518, 6761.911)
('Test: AUC, AUPR, Erros: ', 0.7507767850804984, 0.49200011350505374, 7728.518)
((775, 598), (775, 598), 83136.67, 77470.0)
('Error: ', tensor(47754.6406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8262966163394474, 0.5759779032673924)
('Val: AUC, AUPR, Erros: ', 0.7764812987073096, 0.4946805506465155, 6897.479)
('Test: AUC, AUPR, Erros: ', 0.7484262385046581, 0.4825276741657287, 7810.2363)
((775, 598), (775, 598), 81830.92, 77470.0)
('Error: ', tensor(47414.5977, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8305584135428637, 0.5809114948723532)
('Val: AUC, AUPR, Erros: ', 0.7676695812746138, 0.48198931559211017, 7043.928)
('Test: AUC, AUPR, Erros: ', 0.7500383959870278, 0.4778960327228037, 7870.526)
((775, 598), (775, 598), 81103.46, 77470.0)
('Error: ', tensor(46958.5078, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8339207823506533, 0.5896407440183672)
('Val: AUC, AUPR, Erros: ', 0.7658706531436311, 0.4711482786346172, 7184.745)
('Test: AUC, AUPR, Erros: ', 0.7500426710540594, 0.47708839333656167, 7895.206)
((775, 598), (775, 598), 80415.27, 77470.0)
('Error: ', tensor(46630.5469, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8374756351865156, 0.5961024876702002)
('Val: AUC, AUPR, Erros: ', 0.7561192918235302, 0.4516308311038656, 7432.7896)
('Test: AUC, AUPR, Erros: ', 0.7501957959283204, 0.47752000053186927, 7903.65)
((775, 598), (775, 598), 82052.21, 77470.0)
('Error: ', tensor(46385.7344, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8396263392297605, 0.6001284007471456)
('Val: AUC, AUPR, Erros: ', 0.7549209356817032, 0.4444589538679979, 7633.3857)
('Test: AUC, AUPR, Erros: ', 0.7549860471813009, 0.4843751140533386, 7876.6343)
Train: 0.8163 0.5650
Test: 0.7508 0.4920
[0.5830497138140252, 0.5857144863102526, 0.6075796464234041, 0.607096960277013, 0.6141664380301363, 0.6166124457095333, 0.6247082496071111, 0.6317907943492538, 0.6358873024310796, 0.6392616114912816, 0.6415898534613269, 0.6466300107071093, 0.6508984465185922, 0.6540850722072622, 0.655188422203753, 0.6581049547837129, 0.6612399317990382, 0.6639248558908291, 0.6653282836171541, 0.6696726715828936, 0.6729569964000456, 0.6758983870447918, 0.6797163686840101, 0.6831901135653682, 0.6863881431792673, 0.686855474324833, 0.6895285906597945, 0.6917908844179034, 0.6938361459205644, 0.6947495265778342, 0.698119547214452, 0.6995380160840383, 0.7000381224988399, 0.701175029475671, 0.7020235698110132, 0.7066738663489807, 0.7091894155180417, 0.7117825228101695, 0.7138954251827899, 0.7167578815349007, 0.7179757233436499, 0.7189815333772276, 0.7211252510981977, 0.7211252510981977, 0.7230568639649237, 0.7238305605315494, 0.7253754405195189, 0.7264546160163403, 0.7298796441477419, 0.7322300197458118, 0.7322300197458118, 0.7330296741433985, 0.7330296741433985, 0.7345679364935289, 0.7356178779804865, 0.7356178779804865, 0.7371102899941692, 0.7371102899941692, 0.7371102899941692, 0.7371102899941692, 0.7371102899941692, 0.7371102899941692, 0.7371102899941692, 0.7393748439276671, 0.7393748439276671, 0.7406053296296002, 0.7419744469111397, 0.7419744469111397, 0.7419744469111397, 0.7419744469111397, 0.7419744469111397, 0.7419744469111397, 0.7434715838763274, 0.7434715838763274, 0.7434715838763274, 0.7476203497827869, 0.7476203497827869, 0.7476203497827869, 0.7491399213070861, 0.7491399213070861, 0.7491399213070861, 0.7491399213070861, 0.7491399213070861, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984, 0.7507767850804984]
[0.09259104928555956, 0.09955120508408515, 0.12004798187749453, 0.12480491863137483, 0.13588357758265296, 0.13960385017551444, 0.15522575479102008, 0.16444459736563266, 0.17368521786283642, 0.17807811662851192, 0.18242029226802642, 0.1916841253882315, 0.20345681471019, 0.2092020795730531, 0.2127217467025507, 0.22097528064592434, 0.22750502999417221, 0.23228605632880528, 0.23545230902881512, 0.24671915523126087, 0.25523888416636265, 0.2609461308968011, 0.2710985566100138, 0.28047972917099884, 0.2884321442409718, 0.2896627306937879, 0.2974308894721527, 0.3047952355587436, 0.3112083353589266, 0.3138233245191305, 0.3238568043751942, 0.3276394737506686, 0.3294504192441155, 0.33128382096378345, 0.3332454358934033, 0.34706063087479244, 0.3542223708741651, 0.3611699800567588, 0.3680912278931693, 0.37572104231903813, 0.3791519779201997, 0.38198347609776584, 0.3887616916984159, 0.3887616916984159, 0.3945963017545622, 0.3968209974033292, 0.40156886417302107, 0.40508718640176067, 0.4164269495918118, 0.4243101920242892, 0.4243101920242892, 0.4260791413809143, 0.4260791413809143, 0.43030440135414993, 0.4337135605372491, 0.4337135605372491, 0.4377847493590704, 0.4377847493590704, 0.4377847493590704, 0.4377847493590704, 0.4377847493590704, 0.4377847493590704, 0.4377847493590704, 0.4464467445467304, 0.4464467445467304, 0.4505502867810839, 0.45584594788579624, 0.45584594788579624, 0.45584594788579624, 0.45584594788579624, 0.45584594788579624, 0.45584594788579624, 0.46212020806842036, 0.46212020806842036, 0.46212020806842036, 0.47935695905791986, 0.47935695905791986, 0.47935695905791986, 0.4855413097726592, 0.4855413097726592, 0.4855413097726592, 0.4855413097726592, 0.4855413097726592, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374, 0.49200011350505374]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_3
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 20391.0)
('VALIDATE SUM PROTEIN TEST: ', 2373.0)
((775, 598), (775, 598), 83941.695, 79773.0)
('Error: ', tensor(65967.9297, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5287839189174252, 0.18615936889574222)
('Val: AUC, AUPR, Erros: ', 0.5028874308870395, 0.16315133394976394, 7817.012)
('Test: AUC, AUPR, Erros: ', 0.5389301366613493, 0.19201272537188566, 8357.958)
((775, 598), (775, 598), 110726.84, 79773.0)
('Error: ', tensor(64344.1289, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7415974413079862, 0.4625095070458159)
('Val: AUC, AUPR, Erros: ', 0.6898877632358411, 0.3799581373629694, 7915.487)
('Test: AUC, AUPR, Erros: ', 0.7444854259150828, 0.45565226867911873, 8118.424)
((775, 598), (775, 598), 81561.18, 79773.0)
('Error: ', tensor(54082.8555, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7858779462105622, 0.5182732674940995)
('Val: AUC, AUPR, Erros: ', 0.7348221313050574, 0.4181297656395066, 6752.259)
('Test: AUC, AUPR, Erros: ', 0.7781415695215725, 0.49611826065594533, 6942.281)
((775, 598), (775, 598), 77078.8, 79773.0)
('Error: ', tensor(50814.8164, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8010081680447432, 0.5434915916767941)
('Val: AUC, AUPR, Erros: ', 0.767400986415994, 0.4296379637425167, 6718.398)
('Test: AUC, AUPR, Erros: ', 0.7724185197899274, 0.49418912268316517, 6874.2227)
((775, 598), (775, 598), 84465.39, 79773.0)
('Error: ', tensor(49675.7344, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8125247164234652, 0.5675412143480776)
('Val: AUC, AUPR, Erros: ', 0.7565985856820434, 0.4109525752096531, 6937.555)
('Test: AUC, AUPR, Erros: ', 0.7807705024119991, 0.5009249820325572, 6815.093)
((775, 598), (775, 598), 81914.96, 79773.0)
('Error: ', tensor(48893.3203, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8215859482204815, 0.5813875543691834)
('Val: AUC, AUPR, Erros: ', 0.7521191235581519, 0.3960020812728765, 7187.8457)
('Test: AUC, AUPR, Erros: ', 0.7745672792220322, 0.48670998647400177, 6932.409)
((775, 598), (775, 598), 84180.05, 79773.0)
('Error: ', tensor(48443.5078, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8274998630830019, 0.5874718914638274)
('Val: AUC, AUPR, Erros: ', 0.746657867329315, 0.3819307618029239, 7628.749)
('Test: AUC, AUPR, Erros: ', 0.7747236953657707, 0.4782657737655218, 7082.077)
((775, 598), (775, 598), 85181.52, 79773.0)
('Error: ', tensor(48079.8867, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8318425441962026, 0.5944390638195338)
('Val: AUC, AUPR, Erros: ', 0.7430473752767129, 0.3674130671901453, 8082.788)
('Test: AUC, AUPR, Erros: ', 0.7703144079191642, 0.46747114421793073, 7269.337)
((775, 598), (775, 598), 81879.59, 79773.0)
('Error: ', tensor(47826.0977, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8349649178376385, 0.5998740553728351)
('Val: AUC, AUPR, Erros: ', 0.7349870327420737, 0.35133069333224226, 8345.439)
('Test: AUC, AUPR, Erros: ', 0.7640407717979021, 0.4520013112215297, 7391.3164)
((775, 598), (775, 598), 80580.75, 79773.0)
('Error: ', tensor(47512.3789, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8387119619693513, 0.6058033733709267)
('Val: AUC, AUPR, Erros: ', 0.7266329834462147, 0.3387900090713447, 8843.873)
('Test: AUC, AUPR, Erros: ', 0.7597319431645772, 0.4431050450484466, 7514.023)
((775, 598), (775, 598), 89805.5, 79773.0)
('Error: ', tensor(46807.5781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8442493956050978, 0.6153007967126737)
('Val: AUC, AUPR, Erros: ', 0.7156685761877055, 0.33524112831885583, 9680.156)
('Test: AUC, AUPR, Erros: ', 0.7522183164667375, 0.43746267035526487, 7877.969)
Train: 0.8010 0.5435
Test: 0.7724 0.4942
[0.5912081371091056, 0.6038806269513054, 0.6119356843060691, 0.6160953756992291, 0.6205839427416473, 0.6294776377782215, 0.6341458231166386, 0.6418344374929124, 0.6452771718605264, 0.6497734835658824, 0.6523577426234898, 0.6557872146091178, 0.6631602149115681, 0.6683672769728886, 0.6701487425183676, 0.672698635496312, 0.6752658357512024, 0.6770757871473132, 0.6794420934384819, 0.6821209740428361, 0.6859722829161231, 0.6899142283507207, 0.694114452655783, 0.6972462887173203, 0.6991317643897266, 0.699770335780932, 0.7030173514388166, 0.7053805735061964, 0.708588808507314, 0.7091966158112833, 0.7134756376945708, 0.7151388809610483, 0.7155321588235732, 0.7168456016975697, 0.7173780239012487, 0.7218001793789035, 0.7244203006033983, 0.7272759750197151, 0.7294877904690191, 0.7327074055490246, 0.7339885299324945, 0.7348908764314308, 0.738355276588383, 0.738355276588383, 0.7400873825469345, 0.7411282762559017, 0.7429064609467072, 0.7440293433911778, 0.7477952495215769, 0.7508036651839819, 0.7508036651839819, 0.751707732584864, 0.751707732584864, 0.7537502216218416, 0.7549152319338138, 0.7549152319338138, 0.7572799769431778, 0.7572799769431778, 0.7572799769431778, 0.7572799769431778, 0.7572799769431778, 0.7572799769431778, 0.7572799769431778, 0.7598233662795204, 0.7598233662795204, 0.7612101779528517, 0.762619863939693, 0.762619863939693, 0.762619863939693, 0.762619863939693, 0.762619863939693, 0.762619863939693, 0.7641943899873533, 0.7641943899873533, 0.7641943899873533, 0.7689871061339489, 0.7689871061339489, 0.7689871061339489, 0.7706764426550893, 0.7706764426550893, 0.7706764426550893, 0.7706764426550893, 0.7706764426550893, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274, 0.7724185197899274]
[0.07343482684229026, 0.08719657951863706, 0.09654803073913754, 0.10155170611974568, 0.11119626720774328, 0.12175047001291968, 0.13121690733822375, 0.14545598710485064, 0.15233918445606381, 0.16069792667625754, 0.16675365847757265, 0.17429545123555795, 0.1871587564231082, 0.19846619535097007, 0.20167479696436716, 0.2072908968275769, 0.21303679872774844, 0.2149101209103429, 0.22056515193518766, 0.2255114019253219, 0.23437987297172086, 0.24490173062334586, 0.25589349086922664, 0.2626781206994997, 0.26589124863984565, 0.2679452024103712, 0.2772699478822046, 0.28270943948094357, 0.29237295790277285, 0.292958011551564, 0.3057158130279151, 0.3113759481209224, 0.3108356180896349, 0.3145173444835735, 0.31573456801179045, 0.3280562928457217, 0.3349791576148476, 0.34363882899560194, 0.3499175225641329, 0.36044815055860846, 0.3638860359985047, 0.36642953383611854, 0.3759365125171088, 0.3759365125171088, 0.38159403647328755, 0.3842318649475681, 0.3909077192674977, 0.3951814681178697, 0.4074441481818939, 0.41735741553190026, 0.41735741553190026, 0.42007283313050015, 0.42007283313050015, 0.42734611742972883, 0.4312774149397573, 0.4312774149397573, 0.4395096268313278, 0.4395096268313278, 0.4395096268313278, 0.4395096268313278, 0.4395096268313278, 0.4395096268313278, 0.4395096268313278, 0.448126485101423, 0.448126485101423, 0.45316362339018795, 0.4583980230697377, 0.4583980230697377, 0.4583980230697377, 0.4583980230697377, 0.4583980230697377, 0.4583980230697377, 0.464203810664049, 0.464203810664049, 0.464203810664049, 0.481446854707199, 0.481446854707199, 0.481446854707199, 0.48760872166958835, 0.48760872166958835, 0.48760872166958835, 0.48760872166958835, 0.48760872166958835, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517, 0.49418912268316517]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_4
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 20255.0)
('VALIDATE SUM PROTEIN TEST: ', 2418.0)
((775, 598), (775, 598), 154980.38, 80458.0)
('Error: ', tensor(78391.3984, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5263302132760701, 0.18162595462881048)
('Val: AUC, AUPR, Erros: ', 0.5198645018842059, 0.1716671901961948, 9640.789)
('Test: AUC, AUPR, Erros: ', 0.5021511891728705, 0.16049788066073828, 9576.753)
((775, 598), (775, 598), 90824.22, 80458.0)
('Error: ', tensor(61045.8359, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7711824492242745, 0.48288293096123874)
('Val: AUC, AUPR, Erros: ', 0.7422336669832068, 0.41181812029960274, 7425.1187)
('Test: AUC, AUPR, Erros: ', 0.716031664461614, 0.3842173709470116, 7390.366)
((775, 598), (775, 598), 69521.336, 80458.0)
('Error: ', tensor(53938.2734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7973364208817708, 0.5189825557296095)
('Val: AUC, AUPR, Erros: ', 0.7595889623445701, 0.4349685683260943, 6739.735)
('Test: AUC, AUPR, Erros: ', 0.7463807833260417, 0.4088346397578249, 6706.6914)
((775, 598), (775, 598), 77208.23, 80458.0)
('Error: ', tensor(50980.8125, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8066445536821281, 0.5471228228250907)
('Val: AUC, AUPR, Erros: ', 0.7651840348946939, 0.4486063969416496, 6696.5615)
('Test: AUC, AUPR, Erros: ', 0.7579408634152073, 0.4165566855196368, 6770.6772)
((775, 598), (775, 598), 84250.234, 80458.0)
('Error: ', tensor(49604.5195, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8166695671296273, 0.5746966900583125)
('Val: AUC, AUPR, Erros: ', 0.7452842956196302, 0.4416071129290255, 6865.9224)
('Test: AUC, AUPR, Erros: ', 0.7568224954724145, 0.4114384845141618, 6921.537)
((775, 598), (775, 598), 84328.055, 80458.0)
('Error: ', tensor(48953.0352, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8260003611892569, 0.5857452691480941)
('Val: AUC, AUPR, Erros: ', 0.7428261371474488, 0.4286140591143532, 7017.1743)
('Test: AUC, AUPR, Erros: ', 0.7508975990161101, 0.39891557456921767, 7117.8247)
((775, 598), (775, 598), 82381.945, 80458.0)
('Error: ', tensor(48532.4219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8319106478152529, 0.5923686451893322)
('Val: AUC, AUPR, Erros: ', 0.7402683436774758, 0.41367558863189735, 7262.1875)
('Test: AUC, AUPR, Erros: ', 0.7474230072051922, 0.385812131259588, 7309.1387)
((775, 598), (775, 598), 84499.17, 80458.0)
('Error: ', tensor(48127.1641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8353728316263509, 0.5992283388950936)
('Val: AUC, AUPR, Erros: ', 0.7421387149336275, 0.4067073437533139, 7581.0273)
('Test: AUC, AUPR, Erros: ', 0.7404268125537693, 0.3733151896351558, 7596.644)
((775, 598), (775, 598), 84336.2, 80458.0)
('Error: ', tensor(47700.7031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8393306627628536, 0.6059422142203643)
('Val: AUC, AUPR, Erros: ', 0.7315847373638967, 0.3951355242323349, 8034.6704)
('Test: AUC, AUPR, Erros: ', 0.7395808023622237, 0.3657677119776297, 7871.8267)
((775, 598), (775, 598), 86653.83, 80458.0)
('Error: ', tensor(46885.9531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8444234113956954, 0.6167847366557604)
('Val: AUC, AUPR, Erros: ', 0.726483293884588, 0.38581118091101324, 8541.419)
('Test: AUC, AUPR, Erros: ', 0.7416159801064364, 0.3651485294391081, 8127.0933)
((775, 598), (775, 598), 84604.16, 80458.0)
('Error: ', tensor(45893.2969, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8489868713360642, 0.6272654694053611)
('Val: AUC, AUPR, Erros: ', 0.7166017587496075, 0.36267619662270606, 9424.107)
('Test: AUC, AUPR, Erros: ', 0.7373156303044037, 0.3511777274401969, 8610.16)
Train: 0.8066 0.5471
Test: 0.7579 0.4166
[0.5802280928581077, 0.5827525872545853, 0.5661722335757604, 0.5731181846777131, 0.5736564533700432, 0.5774023145181106, 0.5874577133708356, 0.599868831781903, 0.6081818367079381, 0.6134228900785218, 0.6160761537882186, 0.6209475266101455, 0.6337983648131393, 0.6404607954041902, 0.6411452304822466, 0.6438700157098114, 0.6468857924303678, 0.6513930856795009, 0.6546345822015717, 0.6600903295932945, 0.6632188806467219, 0.6678905628841139, 0.6708699063030207, 0.6737278430037599, 0.6768873654927405, 0.6773481210134783, 0.6809627053493176, 0.6835180253499078, 0.6868083124545373, 0.6882563193949109, 0.691676654283287, 0.6939834087892642, 0.6946572331812475, 0.6969059768464163, 0.6980929897432901, 0.7043696406372643, 0.7067673018848406, 0.7107318699779257, 0.7133214831826101, 0.7169336266480836, 0.7185775248566479, 0.7194441014785862, 0.7230421519027919, 0.7230421519027919, 0.7247328373225156, 0.7256394588158362, 0.7277027637538327, 0.7288601600347123, 0.7328503717754573, 0.7357435345481531, 0.7357435345481531, 0.736694342491027, 0.736694342491027, 0.7386570172671871, 0.7394575684517146, 0.7394575684517146, 0.7417884487351512, 0.7417884487351512, 0.7417884487351512, 0.7417884487351512, 0.7417884487351512, 0.7417884487351512, 0.7417884487351512, 0.7445988458056857, 0.7445988458056857, 0.7459053032565214, 0.7473901958406195, 0.7473901958406195, 0.7473901958406195, 0.7473901958406195, 0.7473901958406195, 0.7473901958406195, 0.7490963111484337, 0.7490963111484337, 0.7490963111484337, 0.7543931785321712, 0.7543931785321712, 0.7543931785321712, 0.7561283364494502, 0.7561283364494502, 0.7561283364494502, 0.7561283364494502, 0.7561283364494502, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073, 0.7579408634152073]
[0.057927947184039, 0.06703926131562415, 0.06807613490676474, 0.07730862745299834, 0.0820888329369981, 0.08723988625177576, 0.09861658052466818, 0.11174329102555713, 0.12026497785892969, 0.12479807605060578, 0.1270296471172906, 0.13262519022793845, 0.14579942495443693, 0.15352354769583895, 0.15380793636930135, 0.15696734118527123, 0.16149591985478673, 0.1681498569631992, 0.17374761076269152, 0.1804172133598146, 0.18541489272581185, 0.1928269192942127, 0.19715365985710137, 0.20165459440790134, 0.20760967385937878, 0.20877410576617791, 0.2151665031972591, 0.22002586912435448, 0.22713248885388776, 0.22987579828880617, 0.237024348487264, 0.2422986150055152, 0.24362618651405732, 0.24983072253128238, 0.252695700486873, 0.26670413258855996, 0.2718215474349867, 0.28217812417275606, 0.28863445049249487, 0.2983084712929289, 0.30248451219925954, 0.30446257977832314, 0.31282519838549894, 0.31282519838549894, 0.31611187405125457, 0.31840229297609335, 0.3246141632929425, 0.32829118310877164, 0.3385946423248871, 0.34625200536701506, 0.34625200536701506, 0.34890933485622544, 0.34890933485622544, 0.35470288885433526, 0.35609795003326217, 0.35609795003326217, 0.36381718683128117, 0.36381718683128117, 0.36381718683128117, 0.36381718683128117, 0.36381718683128117, 0.36381718683128117, 0.36381718683128117, 0.37276692926221044, 0.37276692926221044, 0.3766679675484179, 0.38113187464727444, 0.38113187464727444, 0.38113187464727444, 0.38113187464727444, 0.38113187464727444, 0.38113187464727444, 0.38711428033689965, 0.38711428033689965, 0.38711428033689965, 0.4046031736570496, 0.4046031736570496, 0.4046031736570496, 0.4103194931503187, 0.4103194931503187, 0.4103194931503187, 0.4103194931503187, 0.4103194931503187, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368, 0.4165566855196368]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_5
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 20433.0)
('VALIDATE SUM PROTEIN TEST: ', 2509.0)
((775, 598), (775, 598), 137772.86, 80484.0)
('Error: ', tensor(73372.6719, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.540312254146024, 0.1878514180371104)
('Val: AUC, AUPR, Erros: ', 0.5347275118754139, 0.17420365326492804, 8861.477)
('Test: AUC, AUPR, Erros: ', 0.539722572055516, 0.17634794009460156, 8956.341)
((775, 598), (775, 598), 79500.52, 80484.0)
('Error: ', tensor(60349.0430, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7709206876575978, 0.4857895132130914)
('Val: AUC, AUPR, Erros: ', 0.7449014157736965, 0.42529487702546365, 7162.812)
('Test: AUC, AUPR, Erros: ', 0.736170548658541, 0.4082880134678023, 7313.7812)
((775, 598), (775, 598), 72801.84, 80484.0)
('Error: ', tensor(52981.2422, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.798955443195179, 0.5220827222884559)
('Val: AUC, AUPR, Erros: ', 0.7739788507176915, 0.44834458325739157, 6464.3413)
('Test: AUC, AUPR, Erros: ', 0.7630693879657918, 0.43874767825371014, 6655.0)
((775, 598), (775, 598), 83042.9, 80484.0)
('Error: ', tensor(51069.1875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8061546019654678, 0.5486290888882918)
('Val: AUC, AUPR, Erros: ', 0.7801316686362787, 0.46807766043135074, 6514.3716)
('Test: AUC, AUPR, Erros: ', 0.7678253329658289, 0.456433430930426, 6711.661)
((775, 598), (775, 598), 80649.42, 80484.0)
('Error: ', tensor(49658.9922, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8196344039410934, 0.5758355684827177)
('Val: AUC, AUPR, Erros: ', 0.7758997987676901, 0.47488601245038975, 6374.3506)
('Test: AUC, AUPR, Erros: ', 0.7511729616166662, 0.44915668065350756, 6719.5986)
