class Net52(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net52, self).__init__()

        self.convD1 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv1g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv2 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv2g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv3 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv3g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=0.8)

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, proteinNodes, proteinWeight, drugGraphBatch, nDrug, drugFeatures = None):


        if config.INNER_FEATURE and drugFeatures is not None:
            nDrug = drugFeatures.shape[0]
            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            xDrug = self.L1(drugFeatures)
            xDrug = self.actL1(xDrug)
            xDrug = self.L2(xDrug)
            xDrug = self.actL2(xDrug)

            x = torch.cat((xDrug, x), dim=0)

        elif config.INNER_GRAPH:
            xAtom, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch
            # xDrug = self.mact1(self.mlinear1(xDrug))
            # xDrug = self.mact2(self.mlinear2(xDrug))

            xProtein = self.nodesEmbedding(proteinNodes)

            xAtom = self.nodesEmbedding(xAtom)
            xAtom = xAtom.squeeze(1)




            iLevel = 0
            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv1(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv1g(xAtom, edge_index))
            xAtom, edge_index, _, batch, _, _ = self.pool1(xAtom, edge_index, None, batch)
            x1 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            iLevel += 1

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv2(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv2g(xAtom, edge_index))

            iLevel += 1
            xAtom, edge_index, _, batch, _, _ = self.pool2(xAtom, edge_index, None, batch)
            x2 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv3(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv3g(xAtom, edge_index))

            xAtom, edge_index, _, batch, _, _ = self.pool3(xAtom, edge_index, None, batch)
            x3 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xDrug = x1 + x2 + x3

            xDrug = self.lin1(xDrug)
            xDrug = self.act1(xDrug)
            xDrug = self.lin2(xDrug)
            xDrug = self.act2(xDrug)

            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            x = torch.cat((xDrug, x), dim=0)
        else:
            x = self.nodesEmbedding(x)

        if config.OUTER_GRAPH:
            # Conv Drug:
            x = self.convD1(x, drugEdges)
            x = F.relu(x)
            x = self.convD2(x, drugEdges)
            x = F.relu(x)

        if config.SE_GRAPH:
            # Conv SE:
            x = self.convS1(x, seEdges)
            x = F.relu(x)
            # x = self.convS2(x, seEdges)
            # x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', True)
('Protein Test: ', True)
('Inner Graph, Outer Graph, Se Graph: ', True, True, False)
('Drug Features: ', False)
('Inner mode: ', True)
('Cross Prob: ', 0.5)
('Inner Level: ', 0)
MPNNX
<models.MPNNXP5.MPNNXP5 object at 0x7f0898e133d0>
('Manual torch seed: ', 1772727637)
('Config: ', 'Protein Test: ', True, 'KNN: ', 2)
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19906.0)
('VALIDATE SUM PROTEIN TEST: ', 2291.0)
((646, 331), (646, 331), 85979.13, 58595.0)
('Error: ', tensor(50336.4453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.4456488727369952, 0.24279508747373926)
('Val: AUC, AUPR, Erros: ', 0.456465275186564, 0.28182934126382225, 6253.367)
('Test: AUC, AUPR, Erros: ', 0.4347839689036367, 0.21927513577304245, 6011.645)
((646, 331), (646, 331), 44697.434, 58595.0)
('Error: ', tensor(42747.3828, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5877129891254518, 0.3469690619798471)
('Val: AUC, AUPR, Erros: ', 0.5796217461741251, 0.3583966444320885, 5445.96)
('Test: AUC, AUPR, Erros: ', 0.5779317935815523, 0.3082085334991452, 5086.0635)
((646, 331), (646, 331), 52703.62, 58595.0)
('Error: ', tensor(39584.2852, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7025258370796946, 0.5195558497445283)
('Val: AUC, AUPR, Erros: ', 0.6756855574731881, 0.49400315426351826, 5090.764)
('Test: AUC, AUPR, Erros: ', 0.6843077425294806, 0.47540021246688513, 4750.9478)
((646, 331), (646, 331), 49583.63, 58595.0)
('Error: ', tensor(37847.4336, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7331312994468381, 0.5563613618340117)
('Val: AUC, AUPR, Erros: ', 0.695944963516093, 0.5192539674049163, 4928.5566)
('Test: AUC, AUPR, Erros: ', 0.708559109651417, 0.5069087305662552, 4560.3633)
((646, 331), (646, 331), 50173.434, 58595.0)
('Error: ', tensor(36299.3164, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7453108312924572, 0.5709096974158542)
('Val: AUC, AUPR, Erros: ', 0.7040908407081907, 0.5269586386508881, 4787.497)
('Test: AUC, AUPR, Erros: ', 0.7217850169530587, 0.5231597785472641, 4399.9653)
((646, 331), (646, 331), 50599.547, 58595.0)
('Error: ', tensor(35382.6562, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7550431805594897, 0.5844679172912013)
('Val: AUC, AUPR, Erros: ', 0.7085561147895794, 0.5301289819463461, 4730.785)
('Test: AUC, AUPR, Erros: ', 0.7258730567432247, 0.5270645166770342, 4342.093)
((646, 331), (646, 331), 51566.793, 58595.0)
('Error: ', tensor(34605.7188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7648056154363683, 0.599358675042722)
('Val: AUC, AUPR, Erros: ', 0.7124557809023231, 0.5342260540926432, 4692.1646)
('Test: AUC, AUPR, Erros: ', 0.7276339693371999, 0.5299247371336726, 4315.794)
((646, 331), (646, 331), 51169.168, 58595.0)
('Error: ', tensor(33983.3164, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.775875229033695, 0.6161828419373498)
('Val: AUC, AUPR, Erros: ', 0.7135568428237725, 0.5325111834343351, 4695.454)
('Test: AUC, AUPR, Erros: ', 0.7273351994700051, 0.5286425074819634, 4315.3584)
((646, 331), (646, 331), 50805.75, 58595.0)
('Error: ', tensor(33391.9414, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7865373314589311, 0.630862571276988)
('Val: AUC, AUPR, Erros: ', 0.7107195022401211, 0.5248306050862961, 4721.834)
('Test: AUC, AUPR, Erros: ', 0.726246889550093, 0.525229252957853, 4323.8735)
((646, 331), (646, 331), 51665.53, 58595.0)
('Error: ', tensor(32798.2461, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7950818087426005, 0.642583771322539)
('Val: AUC, AUPR, Erros: ', 0.7067495815184859, 0.5169722005621604, 4749.88)
('Test: AUC, AUPR, Erros: ', 0.7238650130655145, 0.5212058354067943, 4336.1885)
((646, 331), (646, 331), 51871.965, 58595.0)
('Error: ', tensor(32353.3086, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8020958501617619, 0.6525386497081055)
('Val: AUC, AUPR, Erros: ', 0.6980985356289849, 0.5078728866146573, 4796.9414)
('Test: AUC, AUPR, Erros: ', 0.7213053976342585, 0.5145435310993418, 4361.8984)
((646, 331), (646, 331), 52244.33, 58595.0)
('Error: ', tensor(31970.3984, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8076662357063649, 0.6606360349987686)
('Val: AUC, AUPR, Erros: ', 0.6928016931561056, 0.5023606780988457, 4823.1094)
('Test: AUC, AUPR, Erros: ', 0.7191509254698518, 0.5098998959332655, 4382.416)
((646, 331), (646, 331), 53067.074, 58595.0)
('Error: ', tensor(31582.3574, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.812359623439929, 0.6672869003428848)
('Val: AUC, AUPR, Erros: ', 0.6904125322175851, 0.49561158371844494, 4849.5835)
('Test: AUC, AUPR, Erros: ', 0.7153767679057279, 0.5035939713804833, 4415.9116)
((646, 331), (646, 331), 52445.727, 58595.0)
('Error: ', tensor(31422.8574, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8154714261496802, 0.6718520521153502)
('Val: AUC, AUPR, Erros: ', 0.6864555109632694, 0.49183923214492736, 4873.744)
('Test: AUC, AUPR, Erros: ', 0.7141426017146484, 0.4997443452185481, 4429.1235)
((646, 331), (646, 331), 53634.145, 58595.0)
('Error: ', tensor(31104.4551, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8184744091509546, 0.676215824212554)
('Val: AUC, AUPR, Erros: ', 0.6835626871286179, 0.4883814868807062, 4890.7544)
('Test: AUC, AUPR, Erros: ', 0.7111540043708757, 0.49468361456836263, 4462.3335)
((646, 331), (646, 331), 53399.71, 58595.0)
('Error: ', tensor(30949.8340, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8209124634108589, 0.6800394906090427)
('Val: AUC, AUPR, Erros: ', 0.683054320330348, 0.4855616766048149, 4905.8164)
('Test: AUC, AUPR, Erros: ', 0.7049763471776578, 0.4865072801871422, 4503.711)
((646, 331), (646, 331), 53788.664, 58595.0)
('Error: ', tensor(30760.1367, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8229651841385979, 0.683583339477592)
('Val: AUC, AUPR, Erros: ', 0.6826367678542097, 0.48648420645575374, 4908.75)
('Test: AUC, AUPR, Erros: ', 0.6995434835163854, 0.4815251448993051, 4535.128)
Train: 0.7648 0.5994
Test: 0.7276 0.5299
[0.5387238155173963, 0.5504705892995372, 0.559485775767086, 0.5608745987634896, 0.5708848335358665, 0.5757394610305802, 0.5807572554082312, 0.5843950337831643, 0.5906972497832204, 0.5937440207227058, 0.594633849481523, 0.5979440906899081, 0.6037969139742981, 0.6057446934833827, 0.6119867339042782, 0.6188000682745911, 0.6211155444000817, 0.6249089757799564, 0.6296835208248163, 0.6318213286586598, 0.6326604366724395, 0.6358158734231034, 0.6392051325264059, 0.6409464416988813, 0.6424107018743228, 0.6478189974786367, 0.6509383190316128, 0.6509538329164484, 0.6535030262409619, 0.6548666925941371, 0.6608155177551567, 0.6626195976614419, 0.6654875554614317, 0.6681737288249238, 0.6732837485785996, 0.6749417771270898, 0.6758071345359964, 0.6794340863525562, 0.6794340863525562, 0.6816820820440419, 0.6824640684838927, 0.685096449884479, 0.6861031940221456, 0.6913467967177856, 0.6949855405343538, 0.6949855405343538, 0.6964798957578364, 0.6964798957578364, 0.6997133840238337, 0.7010219536977891, 0.7010219536977891, 0.7043686829905766, 0.7043686829905766, 0.7043686829905766, 0.7043686829905766, 0.7043686829905766, 0.7043686829905766, 0.7043686829905766, 0.708214187615745, 0.708214187615745, 0.7102178519255078, 0.7118877063623645, 0.7118877063623645, 0.7118877063623645, 0.7118877063623645, 0.7118877063623645, 0.7118877063623645, 0.7147617147762497, 0.7147617147762497, 0.7147617147762497, 0.7225126372148962, 0.7225126372148962, 0.7225126372148962, 0.724769094622006, 0.724769094622006, 0.724769094622006, 0.724769094622006, 0.724769094622006, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999, 0.7276339693371999]
[0.11961005567459172, 0.13321594624969646, 0.13858466334897634, 0.14461204005095865, 0.15361500461160793, 0.16091024703474, 0.17058039871669722, 0.18111551920031316, 0.19271604841287465, 0.19760659351124418, 0.20100616162555068, 0.20860425878877198, 0.21876112065071157, 0.2204410144110511, 0.2332483816994383, 0.24936517809836514, 0.25014360898530663, 0.2552175497721536, 0.2670191510060424, 0.2703561264528246, 0.27253803578214975, 0.27754312997901576, 0.2839578460153292, 0.28493118095504144, 0.28810138711699196, 0.3014428107235503, 0.3084663247263665, 0.3055548571121611, 0.31202328349187053, 0.3172136022775382, 0.3345364239735239, 0.3363032557366852, 0.3417709584969972, 0.3499928575664749, 0.365566978022215, 0.37000007313554173, 0.3725033462154807, 0.381156542789394, 0.381156542789394, 0.3869432146898669, 0.38816613950462164, 0.39678231278697373, 0.40050535950999666, 0.41449462129305314, 0.42494031561402135, 0.42494031561402135, 0.4283345700155313, 0.4283345700155313, 0.4394007797682858, 0.44140581185854477, 0.44140581185854477, 0.45192467019894833, 0.45192467019894833, 0.45192467019894833, 0.45192467019894833, 0.45192467019894833, 0.45192467019894833, 0.45192467019894833, 0.4635657946975615, 0.4635657946975615, 0.46988144468146864, 0.4748727719102423, 0.4748727719102423, 0.4748727719102423, 0.4748727719102423, 0.4748727719102423, 0.4748727719102423, 0.4862547748215315, 0.4862547748215315, 0.4862547748215315, 0.5132552147421849, 0.5132552147421849, 0.5132552147421849, 0.5200135626649414, 0.5200135626649414, 0.5200135626649414, 0.5200135626649414, 0.5200135626649414, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726, 0.5299247371336726]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19911.0)
('VALIDATE SUM PROTEIN TEST: ', 2446.0)
((646, 331), (646, 331), 79576.13, 58221.0)
('Error: ', tensor(48914.2500, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.44708564933924644, 0.24299226567590415)
('Val: AUC, AUPR, Erros: ', 0.48356621900825864, 0.25079066038115316, 6081.2173)
('Test: AUC, AUPR, Erros: ', 0.4563142633502752, 0.26908243831311124, 6143.3574)
((646, 331), (646, 331), 57723.684, 58221.0)
('Error: ', tensor(41289.8516, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6034904652386397, 0.36427969353452977)
('Val: AUC, AUPR, Erros: ', 0.584451848594479, 0.3456782777694465, 5164.0166)
('Test: AUC, AUPR, Erros: ', 0.5892103087707674, 0.3613013699624835, 5295.4497)
((646, 331), (646, 331), 55760.734, 58221.0)
('Error: ', tensor(40085.4531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6634507056330676, 0.4412816270832768)
('Val: AUC, AUPR, Erros: ', 0.6433598248808886, 0.4213176153368887, 5019.703)
('Test: AUC, AUPR, Erros: ', 0.6423081357061262, 0.42831493313989955, 5165.582)
((646, 331), (646, 331), 54822.773, 58221.0)
('Error: ', tensor(38795.8984, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.69764186691137, 0.49351216130889375)
('Val: AUC, AUPR, Erros: ', 0.6837381284776437, 0.4742058874443221, 4855.4697)
('Test: AUC, AUPR, Erros: ', 0.6693482408580249, 0.47032194498398955, 5037.9517)
((646, 331), (646, 331), 52040.41, 58221.0)
('Error: ', tensor(37725.1953, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7151519209294284, 0.5229249518179773)
('Val: AUC, AUPR, Erros: ', 0.7047248307453882, 0.5044032895675336, 4718.7617)
('Test: AUC, AUPR, Erros: ', 0.6880401388597437, 0.497801949100938, 4923.381)
((646, 331), (646, 331), 52862.035, 58221.0)
('Error: ', tensor(36692.2031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7245340666651525, 0.5365395370470702)
('Val: AUC, AUPR, Erros: ', 0.7116042711824891, 0.5142347740769716, 4616.2993)
('Test: AUC, AUPR, Erros: ', 0.6966144165137496, 0.5092160842460633, 4816.7803)
((646, 331), (646, 331), 53682.496, 58221.0)
('Error: ', tensor(36045.0117, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7312318918354365, 0.5459218840036595)
('Val: AUC, AUPR, Erros: ', 0.7178993736407143, 0.5231072833807922, 4546.869)
('Test: AUC, AUPR, Erros: ', 0.6990746367668872, 0.5129265096036435, 4771.455)
((646, 331), (646, 331), 53715.4, 58221.0)
('Error: ', tensor(35787.6406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7346604400457057, 0.5499748222717308)
('Val: AUC, AUPR, Erros: ', 0.7213859188565533, 0.5265317159646237, 4519.4995)
('Test: AUC, AUPR, Erros: ', 0.7034468930829982, 0.5184925647940197, 4743.253)
((646, 331), (646, 331), 56042.41, 58221.0)
('Error: ', tensor(35496.6602, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7379605460422571, 0.5536932998595718)
('Val: AUC, AUPR, Erros: ', 0.7227737445897177, 0.5276195290672608, 4502.517)
('Test: AUC, AUPR, Erros: ', 0.7021038185048056, 0.5183202778275061, 4733.4355)
((646, 331), (646, 331), 54909.246, 58221.0)
('Error: ', tensor(35404.5195, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7407791424352159, 0.557134135712116)
('Val: AUC, AUPR, Erros: ', 0.7248013087866685, 0.5300522435587767, 4490.855)
('Test: AUC, AUPR, Erros: ', 0.704654390287941, 0.5197736965736014, 4726.908)
((646, 331), (646, 331), 55662.94, 58221.0)
('Error: ', tensor(35233.2539, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.743545980717662, 0.5607722354071596)
('Val: AUC, AUPR, Erros: ', 0.7284884637154251, 0.5341961082922522, 4468.4966)
('Test: AUC, AUPR, Erros: ', 0.7050766742955994, 0.5211146500325052, 4721.3384)
((646, 331), (646, 331), 56304.59, 58221.0)
('Error: ', tensor(35056.7578, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7465863910323084, 0.56477860154695)
('Val: AUC, AUPR, Erros: ', 0.7289649135553994, 0.5343327378398273, 4465.044)
('Test: AUC, AUPR, Erros: ', 0.7066413296031827, 0.522990441943889, 4707.9487)
((646, 331), (646, 331), 54041.2, 58221.0)
('Error: ', tensor(35040.7578, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7490029186508254, 0.5683511842451527)
('Val: AUC, AUPR, Erros: ', 0.7299598827349553, 0.5352703907642948, 4467.673)
('Test: AUC, AUPR, Erros: ', 0.703509294040301, 0.5205328711527599, 4733.8594)
((646, 331), (646, 331), 55299.37, 58221.0)
('Error: ', tensor(34782.6562, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7524369028802745, 0.5738586270519399)
('Val: AUC, AUPR, Erros: ', 0.7309529915297995, 0.5369196176101174, 4455.453)
('Test: AUC, AUPR, Erros: ', 0.7071294371577325, 0.5230527941388629, 4710.0312)
((646, 331), (646, 331), 54421.02, 58221.0)
('Error: ', tensor(34713.8750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7546715275379634, 0.5770933063224606)
('Val: AUC, AUPR, Erros: ', 0.7326989820711926, 0.5387299877347926, 4447.738)
('Test: AUC, AUPR, Erros: ', 0.7073932010447774, 0.524209829059247, 4711.8315)
((646, 331), (646, 331), 54414.797, 58221.0)
('Error: ', tensor(34510.0391, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7581604475442054, 0.5835104315666788)
('Val: AUC, AUPR, Erros: ', 0.7325295949291172, 0.5392554723536608, 4449.529)
('Test: AUC, AUPR, Erros: ', 0.704206006876124, 0.5226226428163949, 4724.9526)
((646, 331), (646, 331), 54215.402, 58221.0)
('Error: ', tensor(34370.1875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7609632594748728, 0.5876695136986865)
('Val: AUC, AUPR, Erros: ', 0.7328615159103502, 0.540225305859066, 4445.314)
('Test: AUC, AUPR, Erros: ', 0.7067879345531797, 0.5241532005268703, 4715.6)
Train: 0.7610 0.5877
Test: 0.7068 0.5242
[0.537693292953886, 0.5477456686739075, 0.5529674592691463, 0.5562166547693222, 0.5638147881337235, 0.5650112557309235, 0.5645049571614947, 0.5723203531060403, 0.577608382219442, 0.5780639383408516, 0.5795155895084563, 0.5817686740211068, 0.5841264072367601, 0.5864916673258457, 0.5925207823076977, 0.5950128724472608, 0.600303502446805, 0.6048692854567461, 0.6083622836133675, 0.6103908640962646, 0.6110751436093924, 0.614056378751737, 0.615225309686992, 0.6169798409008188, 0.6184493748876698, 0.6246151259265957, 0.6267916508329123, 0.6273806710154406, 0.6296419366196173, 0.630882512336766, 0.6378948810921109, 0.6407625986660253, 0.6450703390377714, 0.648447291923202, 0.6529917029535521, 0.6544005441778985, 0.6551879205373786, 0.6592356087674736, 0.6592356087674736, 0.6616530988871376, 0.6626028713951689, 0.6654270800238069, 0.6672719255349279, 0.6732524959161355, 0.6766547723235481, 0.6766547723235481, 0.6773494953075114, 0.6773494953075114, 0.6800043725517795, 0.6819763673745605, 0.6819763673745605, 0.6851164605584834, 0.6851164605584834, 0.6851164605584834, 0.6851164605584834, 0.6851164605584834, 0.6851164605584834, 0.6851164605584834, 0.6884097408562726, 0.6884097408562726, 0.6901459980833902, 0.6922356585606364, 0.6922356585606364, 0.6922356585606364, 0.6922356585606364, 0.6922356585606364, 0.6922356585606364, 0.6942037925419762, 0.6942037925419762, 0.6942037925419762, 0.7014377794987325, 0.7014377794987325, 0.7014377794987325, 0.7039521322381819, 0.7039521322381819, 0.7039521322381819, 0.7039521322381819, 0.7039521322381819, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797, 0.7067879345531797]
[0.1460886836333805, 0.16403898767196134, 0.17171404814593383, 0.1810617161746176, 0.2004036104945474, 0.20176852270143253, 0.20167525396882383, 0.21495839026923158, 0.22660477402621945, 0.2265368538498403, 0.22762209911303835, 0.231110613353332, 0.23553652597946914, 0.24064983944350793, 0.25037653283389977, 0.2566732129102901, 0.26509470462501444, 0.2721479744588544, 0.2784740078196678, 0.28015683507571604, 0.28168937107121833, 0.2871181018743872, 0.28828353455906186, 0.290623180790451, 0.2934130740183038, 0.3101827326835137, 0.31488908806903265, 0.31615302311541793, 0.32186903078114426, 0.326981237883918, 0.34406674397863485, 0.3486651283232577, 0.35651296291554824, 0.3645551667479637, 0.377053773212008, 0.379719213330724, 0.3798971532487142, 0.3883667504265872, 0.3883667504265872, 0.3930309719116153, 0.3951676940516073, 0.4033790953370792, 0.41008853977449733, 0.42580130730640675, 0.4345641929612458, 0.4345641929612458, 0.4354842431667515, 0.4354842431667515, 0.441011907798284, 0.4463018335855768, 0.4463018335855768, 0.4550192113284893, 0.4550192113284893, 0.4550192113284893, 0.4550192113284893, 0.4550192113284893, 0.4550192113284893, 0.4550192113284893, 0.46481560136662087, 0.46481560136662087, 0.4697036094090756, 0.47617763230209176, 0.47617763230209176, 0.47617763230209176, 0.47617763230209176, 0.47617763230209176, 0.47617763230209176, 0.482018458165131, 0.482018458165131, 0.482018458165131, 0.5059671272135791, 0.5059671272135791, 0.5059671272135791, 0.5145280021433509, 0.5145280021433509, 0.5145280021433509, 0.5145280021433509, 0.5145280021433509, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703, 0.5241532005268703]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19946.0)
('VALIDATE SUM PROTEIN TEST: ', 2286.0)
((646, 331), (646, 331), 48624.836, 58507.0)
('Error: ', tensor(45149.0430, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.4378068136896457, 0.2405056985871231)
('Val: AUC, AUPR, Erros: ', 0.4688234520020965, 0.26021731503827394, 5489.1484)
('Test: AUC, AUPR, Erros: ', 0.4786538111649844, 0.24909427667078943, 5523.1562)
((646, 331), (646, 331), 61676.15, 58507.0)
('Error: ', tensor(41637.6602, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6056704555706587, 0.3561811793832729)
('Val: AUC, AUPR, Erros: ', 0.6052560816681424, 0.3461212378556102, 5172.683)
('Test: AUC, AUPR, Erros: ', 0.5963491824597855, 0.3351826341753267, 5179.5234)
((646, 331), (646, 331), 59215.652, 58507.0)
('Error: ', tensor(40940.3281, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6514685220402892, 0.40911051696788503)
('Val: AUC, AUPR, Erros: ', 0.6491838508782817, 0.39624965978798354, 5084.438)
('Test: AUC, AUPR, Erros: ', 0.6383174417027013, 0.384475961063153, 5094.843)
((646, 331), (646, 331), 61518.566, 58507.0)
('Error: ', tensor(40421.5898, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6716246667526977, 0.4300547281833951)
('Val: AUC, AUPR, Erros: ', 0.6590979786133571, 0.40862014358422893, 5048.2983)
('Test: AUC, AUPR, Erros: ', 0.6546332813909197, 0.40681338001612444, 5045.335)
((646, 331), (646, 331), 58184.785, 58507.0)
('Error: ', tensor(40142.9219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6806839459051484, 0.4431169233609745)
('Val: AUC, AUPR, Erros: ', 0.6681540687139749, 0.42253176361560235, 5008.543)
('Test: AUC, AUPR, Erros: ', 0.6645492984514059, 0.42107284988900273, 5006.533)
((646, 331), (646, 331), 62810.85, 58507.0)
('Error: ', tensor(39679.1562, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6847794250312835, 0.45118216609138406)
('Val: AUC, AUPR, Erros: ', 0.670684819756687, 0.42913113425142274, 4972.0356)
('Test: AUC, AUPR, Erros: ', 0.6635241874959354, 0.42312480198179836, 4976.745)
((646, 331), (646, 331), 64131.016, 58507.0)
('Error: ', tensor(39246.5742, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.68732825550578, 0.4594377200344804)
('Val: AUC, AUPR, Erros: ', 0.6728282366888569, 0.4365740327396125, 4929.7485)
('Test: AUC, AUPR, Erros: ', 0.6721176978163719, 0.43768037789456316, 4919.2285)
((646, 331), (646, 331), 62792.27, 58507.0)
('Error: ', tensor(38659.5586, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6940660637576498, 0.47487044947641305)
('Val: AUC, AUPR, Erros: ', 0.6821599532457593, 0.45463376975298814, 4850.0273)
('Test: AUC, AUPR, Erros: ', 0.6753218968740491, 0.44917186695292144, 4862.897)
((646, 331), (646, 331), 63945.215, 58507.0)
('Error: ', tensor(38223.9648, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6985690646330853, 0.48585058979797957)
('Val: AUC, AUPR, Erros: ', 0.6794066113183209, 0.45599592062844185, 4837.077)
('Test: AUC, AUPR, Erros: ', 0.6809445145539774, 0.4611163078471451, 4813.0747)
((646, 331), (646, 331), 63481.824, 58507.0)
('Error: ', tensor(37805.7461, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7025823123246075, 0.49622325909770043)
('Val: AUC, AUPR, Erros: ', 0.6854285281966169, 0.4692552887230821, 4781.2725)
('Test: AUC, AUPR, Erros: ', 0.689364846091117, 0.4761324478459976, 4746.6777)
((646, 331), (646, 331), 61604.742, 58507.0)
('Error: ', tensor(37357.4844, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7078746223970009, 0.5068971360558119)
('Val: AUC, AUPR, Erros: ', 0.6927131509492784, 0.48176428965128293, 4717.373)
('Test: AUC, AUPR, Erros: ', 0.6940594932462294, 0.4859792470528319, 4694.997)
((646, 331), (646, 331), 60535.12, 58507.0)
('Error: ', tensor(36966.9375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7142875806214604, 0.5169748588804337)
('Val: AUC, AUPR, Erros: ', 0.7013983175725442, 0.4935698835024536, 4661.481)
('Test: AUC, AUPR, Erros: ', 0.697951194816312, 0.492202379299992, 4661.366)
((646, 331), (646, 331), 62305.316, 58507.0)
('Error: ', tensor(36802.0547, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7169600599618581, 0.5217982188724917)
('Val: AUC, AUPR, Erros: ', 0.6999183671840326, 0.49459434614905773, 4668.4727)
('Test: AUC, AUPR, Erros: ', 0.7000262005951984, 0.4979973191234282, 4648.623)
((646, 331), (646, 331), 60625.555, 58507.0)
('Error: ', tensor(36542.9727, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7214211485367514, 0.5282430755546037)
('Val: AUC, AUPR, Erros: ', 0.7045791002356239, 0.5004359036340763, 4632.954)
('Test: AUC, AUPR, Erros: ', 0.7043840259842093, 0.5051847997450101, 4609.865)
((646, 331), (646, 331), 59652.72, 58507.0)
('Error: ', tensor(36341.4062, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.724894640891525, 0.5341727368511954)
('Val: AUC, AUPR, Erros: ', 0.7116271558204412, 0.512103471534903, 4582.451)
('Test: AUC, AUPR, Erros: ', 0.7083437219578012, 0.510612491158615, 4582.2603)
((646, 331), (646, 331), 59985.89, 58507.0)
('Error: ', tensor(36165.5117, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7281591245511692, 0.5387666361715189)
('Val: AUC, AUPR, Erros: ', 0.7134171638579008, 0.5145053137333138, 4572.242)
('Test: AUC, AUPR, Erros: ', 0.7145502736473536, 0.5184775103316817, 4546.7056)
((646, 331), (646, 331), 59300.473, 58507.0)
('Error: ', tensor(36073.7500, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7301391240569226, 0.5411631612011448)
('Val: AUC, AUPR, Erros: ', 0.712793556258375, 0.5132692560582174, 4575.4717)
('Test: AUC, AUPR, Erros: ', 0.7155592896173778, 0.5190950198785894, 4541.2827)
Train: 0.7282 0.5388
Test: 0.7146 0.5185
[0.5135675691811696, 0.5069954580815983, 0.5134720776120973, 0.509827645175696, 0.5202104894046131, 0.525619350407198, 0.5275994667315855, 0.5394579775384729, 0.5438371587432426, 0.5462934173884327, 0.5561832923748312, 0.5596313429947297, 0.5643153064766554, 0.5657849150347365, 0.5747986473219473, 0.5817161200148427, 0.588155842963354, 0.5950535768081654, 0.6006830193046601, 0.6065476053954735, 0.607917504007185, 0.6150029516246656, 0.6188892301553629, 0.6242354390273623, 0.6263543352117155, 0.6329785038751421, 0.63547740340071, 0.6366801277258592, 0.6388912434106973, 0.6398118921561973, 0.646140297957017, 0.6495378328667474, 0.6540609010020162, 0.6539807706860165, 0.6587806615943925, 0.6612797599677375, 0.6623647300371713, 0.6671012767360256, 0.6671012767360256, 0.6698826747810718, 0.6710715967624589, 0.6731915505814559, 0.6747735221995015, 0.680626481360207, 0.6857757799389484, 0.6857757799389484, 0.6866875327439248, 0.6866875327439248, 0.6890866958804618, 0.6906892095771593, 0.6906892095771593, 0.6926789345926443, 0.6926789345926443, 0.6926789345926443, 0.6926789345926443, 0.6926789345926443, 0.6926789345926443, 0.6926789345926443, 0.6967397789852808, 0.6967397789852808, 0.6980646378045113, 0.6999699103207071, 0.6999699103207071, 0.6999699103207071, 0.6999699103207071, 0.6999699103207071, 0.6999699103207071, 0.7022909721313707, 0.7022909721313707, 0.7022909721313707, 0.7095079975476708, 0.7095079975476708, 0.7095079975476708, 0.7119632778313589, 0.7119632778313589, 0.7119632778313589, 0.7119632778313589, 0.7119632778313589, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536, 0.7145502736473536]
[0.11540743737348921, 0.12651255313022552, 0.13088124413288366, 0.1326485091877004, 0.1422070852785262, 0.14677666041097703, 0.15014107867525314, 0.1604332097582919, 0.16885435642461227, 0.17095257977600245, 0.18592509796289758, 0.19082294762422808, 0.1967471935119241, 0.19811974937644591, 0.208812675594804, 0.21859016337443637, 0.22744650371412747, 0.23708796204695315, 0.24706048173879727, 0.25763736077952715, 0.25949395947139486, 0.2731885011001852, 0.2796363506299221, 0.28918925810086066, 0.29312311489810716, 0.30624203569732866, 0.3093817826629567, 0.3121634807137379, 0.3175944140821696, 0.3187355562448112, 0.33221839913834583, 0.3406273153631145, 0.349072300416121, 0.3537384679701334, 0.36590145635949517, 0.3711119815519205, 0.3734928803541628, 0.38377574680614757, 0.38377574680614757, 0.3904354871863656, 0.39366634198061484, 0.39758911798423646, 0.40198709966803725, 0.41556742891821985, 0.4316485068758003, 0.4316485068758003, 0.43300410357738095, 0.43300410357738095, 0.4395196265520254, 0.4432119777395047, 0.4432119777395047, 0.44691885029791517, 0.44691885029791517, 0.44691885029791517, 0.44691885029791517, 0.44691885029791517, 0.44691885029791517, 0.44691885029791517, 0.46012977324784815, 0.46012977324784815, 0.4632102031295057, 0.4669268527791079, 0.4669268527791079, 0.4669268527791079, 0.4669268527791079, 0.4669268527791079, 0.4669268527791079, 0.47660296377748496, 0.47660296377748496, 0.47660296377748496, 0.5018203857999821, 0.5018203857999821, 0.5018203857999821, 0.5096135752056505, 0.5096135752056505, 0.5096135752056505, 0.5096135752056505, 0.5096135752056505, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817, 0.5184775103316817]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_3
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (81, 2666), (647, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19714.0)
('VALIDATE SUM PROTEIN TEST: ', 2411.0)
((647, 331), (647, 331), 42587.445, 58338.0)
('Error: ', tensor(44808.8984, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.45316666248599624, 0.24583577941666593)
('Val: AUC, AUPR, Erros: ', 0.4635296834811313, 0.25280056835858344, 5603.2197)
('Test: AUC, AUPR, Erros: ', 0.4802266058639615, 0.263302503059142, 5488.1064)
((647, 331), (647, 331), 63606.707, 58338.0)
('Error: ', tensor(40648.3242, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6575208801991159, 0.4172768989448726)
('Val: AUC, AUPR, Erros: ', 0.6421202318323765, 0.397538786937452, 5119.7173)
('Test: AUC, AUPR, Erros: ', 0.6504238125633099, 0.39696864214713906, 5072.807)
((647, 331), (647, 331), 62840.234, 58338.0)
('Error: ', tensor(39798.2734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6894028288378029, 0.46814924156414317)
('Val: AUC, AUPR, Erros: ', 0.6768156730695463, 0.45933404291242014, 5010.3745)
('Test: AUC, AUPR, Erros: ', 0.6784505274040662, 0.44870940333344933, 4978.2964)
((647, 331), (647, 331), 66200.555, 58338.0)
('Error: ', tensor(38950.8008, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7058244551489365, 0.49391389038313893)
('Val: AUC, AUPR, Erros: ', 0.69692261749975, 0.49295450776898486, 4897.9385)
('Test: AUC, AUPR, Erros: ', 0.6910167910853082, 0.4748351387669653, 4898.324)
((647, 331), (647, 331), 68522.19, 58338.0)
('Error: ', tensor(38132.5586, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7139869478322874, 0.5119710054660167)
('Val: AUC, AUPR, Erros: ', 0.7074306072025786, 0.5136053492228358, 4781.378)
('Test: AUC, AUPR, Erros: ', 0.6974084708787122, 0.49187498376848526, 4816.52)
((647, 331), (647, 331), 67180.81, 58338.0)
('Error: ', tensor(37252.3516, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7202150940426176, 0.5248411468656382)
('Val: AUC, AUPR, Erros: ', 0.7151195105687991, 0.527411220763077, 4667.877)
('Test: AUC, AUPR, Erros: ', 0.7042186784312578, 0.5045636089492443, 4711.4155)
((647, 331), (647, 331), 66146.37, 58338.0)
('Error: ', tensor(36619.9375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.725427601579917, 0.5342158869132114)
('Val: AUC, AUPR, Erros: ', 0.7200225851488684, 0.5367562674120514, 4590.0254)
('Test: AUC, AUPR, Erros: ', 0.7093705593014117, 0.5132179875996408, 4639.123)
((647, 331), (647, 331), 64923.426, 58338.0)
('Error: ', tensor(36200.2031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7295129293364404, 0.5407371381405937)
('Val: AUC, AUPR, Erros: ', 0.7241426169030255, 0.5436737708210955, 4538.6143)
('Test: AUC, AUPR, Erros: ', 0.7131041234224544, 0.5185185378088153, 4593.4946)
((647, 331), (647, 331), 63680.332, 58338.0)
('Error: ', tensor(35898.1211, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.733081639019971, 0.5454975193004937)
('Val: AUC, AUPR, Erros: ', 0.7273359137440756, 0.5487983106430807, 4503.461)
('Test: AUC, AUPR, Erros: ', 0.7165599734904939, 0.5229485648950588, 4557.3647)
((647, 331), (647, 331), 65068.617, 58338.0)
('Error: ', tensor(35808.5078, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7362834375860836, 0.5492178214689278)
('Val: AUC, AUPR, Erros: ', 0.7290592311182611, 0.5510851318032831, 4494.498)
('Test: AUC, AUPR, Erros: ', 0.7186521133859687, 0.5253180786869861, 4557.49)
((647, 331), (647, 331), 62100.203, 58338.0)
('Error: ', tensor(35522.4414, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7392803385274686, 0.5531527367862481)
('Val: AUC, AUPR, Erros: ', 0.7302606206038685, 0.5536706910098428, 4476.325)
('Test: AUC, AUPR, Erros: ', 0.7206701931341165, 0.5275817277883723, 4523.2524)
((647, 331), (647, 331), 62901.906, 58338.0)
('Error: ', tensor(35418.8789, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.741997112658245, 0.5564821691161983)
('Val: AUC, AUPR, Erros: ', 0.7311616476187697, 0.5548622290454139, 4471.0884)
('Test: AUC, AUPR, Erros: ', 0.7219652001448326, 0.5291734910436607, 4521.8403)
((647, 331), (647, 331), 63213.91, 58338.0)
('Error: ', tensor(35306.6172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7445885074894377, 0.559735625847046)
('Val: AUC, AUPR, Erros: ', 0.7323461329888901, 0.5569273693710985, 4463.6685)
('Test: AUC, AUPR, Erros: ', 0.7232382484687054, 0.5301269848271813, 4518.085)
((647, 331), (647, 331), 63755.86, 58338.0)
('Error: ', tensor(35196.6641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.747162467165893, 0.5632377352160173)
('Val: AUC, AUPR, Erros: ', 0.7326800159155907, 0.5574285079228273, 4462.21)
('Test: AUC, AUPR, Erros: ', 0.7244040190893241, 0.5310786886888204, 4517.2935)
((647, 331), (647, 331), 63470.22, 58338.0)
('Error: ', tensor(35032.3398, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7499734186454914, 0.5673137948470567)
('Val: AUC, AUPR, Erros: ', 0.733156503779562, 0.5583358466217512, 4457.9)
('Test: AUC, AUPR, Erros: ', 0.7257608260395181, 0.5327761437020361, 4508.563)
((647, 331), (647, 331), 64078.13, 58338.0)
('Error: ', tensor(34889.6445, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7530752623023176, 0.5716778882048158)
('Val: AUC, AUPR, Erros: ', 0.733660287633295, 0.5592717508744715, 4455.6606)
('Test: AUC, AUPR, Erros: ', 0.7272174873405658, 0.5341618450721604, 4506.7285)
((647, 331), (647, 331), 64346.33, 58338.0)
('Error: ', tensor(34691.8242, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7567904931920086, 0.5772064807792027)
('Val: AUC, AUPR, Erros: ', 0.7346272932797032, 0.5606831395847197, 4449.999)
('Test: AUC, AUPR, Erros: ', 0.728325820745019, 0.535130905479468, 4505.4014)
Train: 0.7568 0.5772
Test: 0.7283 0.5351
[0.5734719847152894, 0.5660602148035987, 0.5743260642891274, 0.5806016434845395, 0.583949861613796, 0.5849567937017415, 0.5847910233367133, 0.591316680668442, 0.596638984464661, 0.5970179501341231, 0.6008250605437351, 0.6031705777886024, 0.6066072088965385, 0.6083059506661865, 0.6120810235645521, 0.6157486212251211, 0.6190184266572349, 0.6224036601594823, 0.6269286277257172, 0.6314142167581985, 0.6321394083801353, 0.6351330399116566, 0.6382548403109128, 0.6428924179877437, 0.6445396944455549, 0.649611620142757, 0.6516076379811144, 0.6520578993133181, 0.65372159981058, 0.6542415947505279, 0.6600939073504231, 0.663164630144057, 0.668281687515153, 0.6709362920316453, 0.6756311655705652, 0.6767861291910844, 0.6780489679469658, 0.6821411175004278, 0.6821411175004278, 0.6842041112674686, 0.6856544673922398, 0.6880921680978281, 0.6891352010907563, 0.693766525071536, 0.6970209352942915, 0.6970209352942915, 0.6981217896451571, 0.6981217896451571, 0.7013933489409164, 0.7023715578881987, 0.7023715578881987, 0.7056384387700748, 0.7056384387700748, 0.7056384387700748, 0.7056384387700748, 0.7056384387700748, 0.7056384387700748, 0.7056384387700748, 0.7094419000899495, 0.7094419000899495, 0.7114533156709176, 0.7134245084316778, 0.7134245084316778, 0.7134245084316778, 0.7134245084316778, 0.7134245084316778, 0.7134245084316778, 0.71569878773269, 0.71569878773269, 0.71569878773269, 0.7230147353561691, 0.7230147353561691, 0.7230147353561691, 0.7256605037031013, 0.7256605037031013, 0.7256605037031013, 0.7256605037031013, 0.7256605037031013, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019, 0.728325820745019]
[0.18455315612754325, 0.15777977747575048, 0.16797271556840127, 0.1820978741061646, 0.18347507700932775, 0.18718589240359157, 0.18748285984825502, 0.20326279658735932, 0.2136352419345136, 0.2146191620193687, 0.22160749561921989, 0.22798193731262648, 0.23308843206314395, 0.23639494592479154, 0.24556447189977437, 0.25301155383940566, 0.25980900623821646, 0.26739851641410406, 0.2778023718287095, 0.2852968595575029, 0.28589788832457064, 0.2898063031345344, 0.2954690269977944, 0.3066674029667704, 0.30969435517465627, 0.3195780244867605, 0.322792079480354, 0.3246748532421517, 0.32921864794896216, 0.32971509121333326, 0.34456330569024474, 0.3528198703214417, 0.3637718875630571, 0.369126948468612, 0.38332542106905754, 0.3846811336440466, 0.3878556161446366, 0.398051641686663, 0.398051641686663, 0.40313417505827165, 0.4073839298970158, 0.4135123619768429, 0.41561317484235244, 0.4257654824297055, 0.435588902353522, 0.435588902353522, 0.43806575266503367, 0.43806575266503367, 0.4479454945731251, 0.45079569993868446, 0.45079569993868446, 0.4591806629898252, 0.4591806629898252, 0.4591806629898252, 0.4591806629898252, 0.4591806629898252, 0.4591806629898252, 0.4591806629898252, 0.47108338188573157, 0.47108338188573157, 0.47757119883830534, 0.48408673396739915, 0.48408673396739915, 0.48408673396739915, 0.48408673396739915, 0.48408673396739915, 0.48408673396739915, 0.49195134943658725, 0.49195134943658725, 0.49195134943658725, 0.5169860717514707, 0.5169860717514707, 0.5169860717514707, 0.5259877448553689, 0.5259877448553689, 0.5259877448553689, 0.5259877448553689, 0.5259877448553689, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468, 0.535130905479468]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_4
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (80, 2666), (647, 331), (80, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19824.0)
('VALIDATE SUM PROTEIN TEST: ', 2518.0)
((647, 331), (647, 331), 93597.21, 58099.0)
('Error: ', tensor(52250.9453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.44589479524349535, 0.2434663376643429)
('Val: AUC, AUPR, Erros: ', 0.4267117410246756, 0.23657992098017072, 6607.9976)
('Test: AUC, AUPR, Erros: ', 0.4520728854584027, 0.24678412823103765, 6797.5786)
((647, 331), (647, 331), 46842.203, 58099.0)
('Error: ', tensor(41892.1875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6169530108562806, 0.38760066022557116)
('Val: AUC, AUPR, Erros: ', 0.6174278350035083, 0.39904369327232714, 5338.043)
('Test: AUC, AUPR, Erros: ', 0.6146295640729891, 0.39575683752725244, 5283.081)
((647, 331), (647, 331), 55647.33, 58099.0)
('Error: ', tensor(40217.5469, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6618517665364875, 0.4471988549298261)
('Val: AUC, AUPR, Erros: ', 0.6635827127856826, 0.4607427013715552, 5111.58)
('Test: AUC, AUPR, Erros: ', 0.6635252723525502, 0.4603482187746459, 5053.782)
((647, 331), (647, 331), 51773.72, 58099.0)
('Error: ', tensor(39360.8906, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6876806821471817, 0.48523027907553024)
('Val: AUC, AUPR, Erros: ', 0.6927190114990592, 0.5039284798680534, 4997.289)
('Test: AUC, AUPR, Erros: ', 0.6910926765538048, 0.498175411025466, 4953.5737)
((647, 331), (647, 331), 52258.637, 58099.0)
('Error: ', tensor(38160.7969, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7047989382861638, 0.5088914446409343)
('Val: AUC, AUPR, Erros: ', 0.7070395715238177, 0.5228932094281122, 4850.1465)
('Test: AUC, AUPR, Erros: ', 0.7051897247506216, 0.5199516891855984, 4816.575)
((647, 331), (647, 331), 50546.117, 58099.0)
('Error: ', tensor(37365.0078, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7156030759675442, 0.5243018148259715)
('Val: AUC, AUPR, Erros: ', 0.7192384439566687, 0.5394336360300152, 4739.9385)
('Test: AUC, AUPR, Erros: ', 0.7176054707203204, 0.5370181589033312, 4708.995)
((647, 331), (647, 331), 49978.965, 58099.0)
('Error: ', tensor(36789.3242, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7230126447986318, 0.5342281459705672)
('Val: AUC, AUPR, Erros: ', 0.7256290795510477, 0.5485280712277294, 4666.338)
('Test: AUC, AUPR, Erros: ', 0.725283431531749, 0.5464856810389289, 4637.4233)
((647, 331), (647, 331), 52814.168, 58099.0)
('Error: ', tensor(36143.5625, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7291206262875936, 0.5411853446235768)
('Val: AUC, AUPR, Erros: ', 0.7320844134058595, 0.5538009122746093, 4581.4893)
('Test: AUC, AUPR, Erros: ', 0.7300453436022245, 0.5523496914860917, 4551.791)
((647, 331), (647, 331), 54866.562, 58099.0)
('Error: ', tensor(35740.2188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.734331736700189, 0.5470364846703597)
('Val: AUC, AUPR, Erros: ', 0.7337128742722079, 0.5561824365387881, 4537.588)
('Test: AUC, AUPR, Erros: ', 0.7340991267137826, 0.5563227594725279, 4499.1445)
((647, 331), (647, 331), 51792.207, 58099.0)
('Error: ', tensor(35821.1758, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7370808086684968, 0.5505812732501856)
('Val: AUC, AUPR, Erros: ', 0.7365173242255637, 0.5599287412001319, 4554.2324)
('Test: AUC, AUPR, Erros: ', 0.7352904796028683, 0.5588271503053586, 4522.7144)
((647, 331), (647, 331), 51536.26, 58099.0)
('Error: ', tensor(35700.9375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7402773508965285, 0.5548729527663772)
('Val: AUC, AUPR, Erros: ', 0.7364825845776599, 0.5602272979747045, 4550.739)
('Test: AUC, AUPR, Erros: ', 0.7371371494128904, 0.562548710495071, 4514.299)
((647, 331), (647, 331), 52840.41, 58099.0)
('Error: ', tensor(35413.6758, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7440746648680853, 0.55989717382533)
('Val: AUC, AUPR, Erros: ', 0.7386261456664363, 0.5619633170859067, 4527.8506)
('Test: AUC, AUPR, Erros: ', 0.7374081659412001, 0.5623270644247074, 4491.659)
((647, 331), (647, 331), 51227.312, 58099.0)
('Error: ', tensor(35311.2930, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7491173926996062, 0.5671624365901812)
('Val: AUC, AUPR, Erros: ', 0.7373837282706623, 0.562843519114837, 4541.263)
('Test: AUC, AUPR, Erros: ', 0.739022363306334, 0.5650604286143331, 4499.3364)
((647, 331), (647, 331), 50428.945, 58099.0)
('Error: ', tensor(35184.5391, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7532633048215098, 0.5741896884724567)
('Val: AUC, AUPR, Erros: ', 0.7379847033772151, 0.5639460629962105, 4546.2705)
('Test: AUC, AUPR, Erros: ', 0.7394180823259414, 0.5662003842137959, 4504.416)
((647, 331), (647, 331), 52696.184, 58099.0)
('Error: ', tensor(34703.4492, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7581435426601929, 0.5813724532951181)
('Val: AUC, AUPR, Erros: ', 0.7367717869459137, 0.5618719190593972, 4523.515)
('Test: AUC, AUPR, Erros: ', 0.7412574938114702, 0.5689689814854001, 4459.613)
((647, 331), (647, 331), 52691.58, 58099.0)
('Error: ', tensor(34441.9609, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.762423357996009, 0.5890285647713778)
('Val: AUC, AUPR, Erros: ', 0.7372877296568089, 0.5631968802177365, 4512.122)
('Test: AUC, AUPR, Erros: ', 0.7408744475493114, 0.5688319377173848, 4456.076)
((647, 331), (647, 331), 53182.47, 58099.0)
('Error: ', tensor(34157.3320, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7666095827360386, 0.5953765170288516)
('Val: AUC, AUPR, Erros: ', 0.7371038799513151, 0.5625675045224128, 4509.4136)
('Test: AUC, AUPR, Erros: ', 0.740344753289053, 0.5674822151595287, 4451.329)
Train: 0.7666 0.5954
Test: 0.7403 0.5675
[0.5403683194263956, 0.5570033256044715, 0.5649222610207595, 0.5727106280280062, 0.577180948119732, 0.5801612574365621, 0.5853490935060423, 0.5919544033672178, 0.5980203572834808, 0.5987276396347094, 0.6034181694655885, 0.606352865807977, 0.6095696299236246, 0.6115932165581337, 0.6195583334791563, 0.6197789007379363, 0.626128380387186, 0.6316830475346806, 0.6359918287447857, 0.640200773669019, 0.6412615775732499, 0.6453468590808168, 0.6488905124302384, 0.6534543274776895, 0.6557479221387028, 0.6617595927043276, 0.6638194114676101, 0.6648309516134809, 0.666195997991048, 0.6674000382687988, 0.6732469187457346, 0.6764867081759229, 0.6807457840751627, 0.6833837215260765, 0.6871617352989998, 0.6891016915163126, 0.6905138072185244, 0.6937213505740605, 0.6937213505740605, 0.6961065075188645, 0.6972566051367417, 0.6999542479191445, 0.701537069701263, 0.7071718738263318, 0.7108806513845829, 0.7108806513845829, 0.712034549943522, 0.712034549943522, 0.7150662417103704, 0.7166728037347181, 0.7166728037347181, 0.7193136317268187, 0.7193136317268187, 0.7193136317268187, 0.7193136317268187, 0.7193136317268187, 0.7193136317268187, 0.7193136317268187, 0.7226452721474634, 0.7226452721474634, 0.7245317194910634, 0.7263066994765998, 0.7263066994765998, 0.7263066994765998, 0.7263066994765998, 0.7263066994765998, 0.7263066994765998, 0.7285582750263597, 0.7285582750263597, 0.7285582750263597, 0.7359017017014926, 0.7359017017014926, 0.7359017017014926, 0.7378881679080492, 0.7378881679080492, 0.7378881679080492, 0.7378881679080492, 0.7378881679080492, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053, 0.740344753289053]
[0.1268550176090123, 0.13416902975802214, 0.14457391490851168, 0.15799057816102732, 0.1664158124536499, 0.17140219937180717, 0.18007279464899886, 0.19299249463991125, 0.20311765894506695, 0.20580935045469018, 0.21620242377056084, 0.22181371155715937, 0.22912205079003262, 0.23513582707726544, 0.2520100186438991, 0.2489706227825764, 0.26247400241539615, 0.27530697034168217, 0.2830393604083675, 0.2911666502038147, 0.2943243189893821, 0.30361199561083607, 0.31093509693487476, 0.320734547588601, 0.3253565052787172, 0.339160660541158, 0.34385809144987844, 0.3463430760140658, 0.34891226657932495, 0.3531487561239432, 0.36867818176400613, 0.37740508031715014, 0.3885866518734459, 0.39442444392603726, 0.4021446635062319, 0.4080860111247222, 0.4118324292855037, 0.4214267545043586, 0.4214267545043586, 0.4294532691999496, 0.43173120386017816, 0.43833555567331195, 0.44334917621680636, 0.460754929932353, 0.4715771920555166, 0.4715771920555166, 0.4745799357863051, 0.4745799357863051, 0.4843703366223573, 0.4899027276400373, 0.4899027276400373, 0.498137735130738, 0.498137735130738, 0.498137735130738, 0.498137735130738, 0.498137735130738, 0.498137735130738, 0.498137735130738, 0.5089728583786582, 0.5089728583786582, 0.5147014213731569, 0.520233970909295, 0.520233970909295, 0.520233970909295, 0.520233970909295, 0.520233970909295, 0.520233970909295, 0.5275947241478937, 0.5275947241478937, 0.5275947241478937, 0.553075087046632, 0.553075087046632, 0.553075087046632, 0.5588913520964369, 0.5588913520964369, 0.5588913520964369, 0.5588913520964369, 0.5588913520964369, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287, 0.5674822151595287]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_5
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19389.0)
('VALIDATE SUM PROTEIN TEST: ', 2301.0)
((646, 331), (646, 331), 60605.496, 58366.0)
('Error: ', tensor(45612.6172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.4616680284557547, 0.2521963041369901)
('Val: AUC, AUPR, Erros: ', 0.4234216103165687, 0.2265240685011535, 5723.7217)
('Test: AUC, AUPR, Erros: ', 0.4418435827729733, 0.2461269092472796, 5824.0947)
((646, 331), (646, 331), 60804.04, 58366.0)
('Error: ', tensor(40469.3750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6522953219417615, 0.4035449358083073)
('Val: AUC, AUPR, Erros: ', 0.6647188067798766, 0.4077948008872204, 4950.082)
('Test: AUC, AUPR, Erros: ', 0.6604180140703756, 0.4205373187533237, 5109.0845)
