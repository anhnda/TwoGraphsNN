class Net52(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net52, self).__init__()

        self.convD1 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv1g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv2 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv2g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv3 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv3g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=0.8)

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, proteinNodes, proteinWeight, drugGraphBatch, nDrug, drugFeatures = None):


        if config.INNER_FEATURE and drugFeatures is not None:
            nDrug = drugFeatures.shape[0]
            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            xDrug = self.L1(drugFeatures)
            xDrug = self.actL1(xDrug)
            xDrug = self.L2(xDrug)
            xDrug = self.actL2(xDrug)

            x = torch.cat((xDrug, x), dim=0)

        elif config.INNER_GRAPH:
            xAtom, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch
            # xDrug = self.mact1(self.mlinear1(xDrug))
            # xDrug = self.mact2(self.mlinear2(xDrug))

            xProtein = self.nodesEmbedding(proteinNodes)

            xAtom = self.nodesEmbedding(xAtom)
            xAtom = xAtom.squeeze(1)




            iLevel = 0
            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv1(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv1g(xAtom, edge_index))
            xAtom, edge_index, _, batch, _, _ = self.pool1(xAtom, edge_index, None, batch)
            x1 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            iLevel += 1

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv2(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv2g(xAtom, edge_index))

            iLevel += 1
            xAtom, edge_index, _, batch, _, _ = self.pool2(xAtom, edge_index, None, batch)
            x2 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv3(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv3g(xAtom, edge_index))

            xAtom, edge_index, _, batch, _, _ = self.pool3(xAtom, edge_index, None, batch)
            x3 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xDrug = x1 + x2 + x3

            xDrug = self.lin1(xDrug)
            xDrug = self.act1(xDrug)
            xDrug = self.lin2(xDrug)
            xDrug = self.act2(xDrug)

            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            x = torch.cat((xDrug, x), dim=0)
        else:
            x = self.nodesEmbedding(x)

        if config.OUTER_GRAPH:
            # Conv Drug:
            x = self.convD1(x, drugEdges)
            x = F.relu(x)
            x = self.convD2(x, drugEdges)
            x = F.relu(x)

        if config.SE_GRAPH:
            # Conv SE:
            x = self.convS1(x, seEdges)
            x = F.relu(x)
            # x = self.convS2(x, seEdges)
            # x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', False)
('Protein Test: ', True)
('Inner Graph, Outer Graph, Se Graph: ', True, True, False)
('Drug Features: ', False)
('Inner mode: ', True)
('Cross Prob: ', 0.1)
('Inner Level: ', 0)
MPNNX
<models.MPNNXP5.MPNNXP5 object at 0x7faf593df550>
('Manual torch seed: ', 1772727637)
('Config: ', 'Protein Test: ', True, 'KNN: ', 2)
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19906.0)
('VALIDATE SUM PROTEIN TEST: ', 2291.0)
((646, 331), (646, 331), 181942.97, 58595.0)
('Error: ', tensor(115634.6719, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.4987697851578588, 0.275229034264968)
('Val: AUC, AUPR, Erros: ', 0.5124140812588388, 0.28952127920857484, 14349.205)
('Test: AUC, AUPR, Erros: ', 0.4924698197023696, 0.25270409378125913, 14767.862)
((646, 331), (646, 331), 65212.35, 58595.0)
('Error: ', tensor(40506.6367, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6660333136115262, 0.479237541892231)
('Val: AUC, AUPR, Erros: ', 0.6419071850343799, 0.4551271305896507, 5178.1074)
('Test: AUC, AUPR, Erros: ', 0.6442752580006111, 0.4372539059525419, 4918.389)
((646, 331), (646, 331), 72730.984, 58595.0)
('Error: ', tensor(37459.9531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7511035223289679, 0.5833894524385792)
('Val: AUC, AUPR, Erros: ', 0.6960550286095334, 0.5209818559355301, 4929.8306)
('Test: AUC, AUPR, Erros: ', 0.7071183259696776, 0.5093916440623296, 4706.2754)
((646, 331), (646, 331), 73144.36, 58595.0)
('Error: ', tensor(35133.3438, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.771794036787652, 0.6087237478822447)
('Val: AUC, AUPR, Erros: ', 0.7066283921454644, 0.5297374896983399, 4791.604)
('Test: AUC, AUPR, Erros: ', 0.7204300619326475, 0.5212068800633289, 4553.1147)
((646, 331), (646, 331), 70617.27, 58595.0)
('Error: ', tensor(33809.9453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7816085347111403, 0.6216451881286557)
('Val: AUC, AUPR, Erros: ', 0.7095023554738156, 0.5302080980942907, 4748.2437)
('Test: AUC, AUPR, Erros: ', 0.7235894289313962, 0.5221316606803056, 4482.4746)
((646, 331), (646, 331), 69072.36, 58595.0)
('Error: ', tensor(33152.4453, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7878119603995354, 0.6307778565657634)
('Val: AUC, AUPR, Erros: ', 0.7087399917747332, 0.5278306556522402, 4761.0273)
('Test: AUC, AUPR, Erros: ', 0.7238215173492009, 0.5206491450517062, 4470.7935)
((646, 331), (646, 331), 68114.53, 58595.0)
('Error: ', tensor(32723.6016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7927483859762097, 0.6382638373561693)
('Val: AUC, AUPR, Erros: ', 0.7058832346434863, 0.5231915360134418, 4793.063)
('Test: AUC, AUPR, Erros: ', 0.7223747877612254, 0.5178548721093927, 4478.7305)
((646, 331), (646, 331), 68515.21, 58595.0)
('Error: ', tensor(32460.7871, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7974162783153641, 0.644978716658063)
('Val: AUC, AUPR, Erros: ', 0.7024418605293706, 0.5183451064239663, 4841.8022)
('Test: AUC, AUPR, Erros: ', 0.7193045983518696, 0.5136775948504764, 4519.86)
((646, 331), (646, 331), 68112.52, 58595.0)
('Error: ', tensor(32117.0977, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8022898094256043, 0.6525299153455058)
('Val: AUC, AUPR, Erros: ', 0.6979379605731495, 0.5127110211970607, 4883.4526)
('Test: AUC, AUPR, Erros: ', 0.7165049641824625, 0.5090951284515753, 4544.891)
((646, 331), (646, 331), 68504.45, 58595.0)
('Error: ', tensor(31848.5371, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8074700418300209, 0.6604560019377131)
('Val: AUC, AUPR, Erros: ', 0.6961074553602451, 0.5076162559774569, 4932.751)
('Test: AUC, AUPR, Erros: ', 0.7124844421566908, 0.5033433571886219, 4590.8413)
((646, 331), (646, 331), 67901.984, 58595.0)
('Error: ', tensor(31544.3398, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8118248394568399, 0.6671969658096781)
('Val: AUC, AUPR, Erros: ', 0.6950095017441738, 0.5044464930101409, 4949.7627)
('Test: AUC, AUPR, Erros: ', 0.7082737281603857, 0.49777361497916567, 4612.1484)
Train: 0.7816 0.6216
Test: 0.7236 0.5221
[0.5539377865683718, 0.5599971741811479, 0.5607448107448108, 0.5596929784215852, 0.5704185801774854, 0.5743137866625133, 0.5773462795142751, 0.5837633551277025, 0.5890405387184376, 0.591495626479476, 0.5939032120728603, 0.5983162208368272, 0.6034104147369985, 0.6042697529360406, 0.6095283437628672, 0.6170713324827939, 0.6197643860634443, 0.6237446933465175, 0.6278062183617924, 0.6300886631036098, 0.6304780069433182, 0.6331370377998943, 0.6366678689284344, 0.638537882546373, 0.640125093833811, 0.6454624346703419, 0.6481813750185337, 0.6480098870774993, 0.6506469169421583, 0.6519450033171759, 0.6576257806518577, 0.659555428977262, 0.6622541251412816, 0.6650494283148739, 0.6700239623481181, 0.6715981637347486, 0.6725083061544244, 0.6760774212683526, 0.6760774212683526, 0.6783842992434451, 0.6792011570556911, 0.6817597754932369, 0.6828410473494272, 0.6881745847742916, 0.6918335270219118, 0.6918335270219118, 0.6931405674425831, 0.6931405674425831, 0.6962575572463179, 0.6975063259586692, 0.6975063259586692, 0.7007404289699231, 0.7007404289699231, 0.7007404289699231, 0.7007404289699231, 0.7007404289699231, 0.7007404289699231, 0.7007404289699231, 0.7044642926518465, 0.7044642926518465, 0.706406220787084, 0.7080725382456872, 0.7080725382456872, 0.7080725382456872, 0.7080725382456872, 0.7080725382456872, 0.7080725382456872, 0.7108901286290049, 0.7108901286290049, 0.7108901286290049, 0.7185598994048068, 0.7185598994048068, 0.7185598994048068, 0.7207852485148758, 0.7207852485148758, 0.7207852485148758, 0.7207852485148758, 0.7207852485148758, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962, 0.7235894289313962]
[0.1353203827936564, 0.14465426480371615, 0.15197394125488634, 0.15959667068978106, 0.16818726670386558, 0.17836164857575054, 0.18311822902472868, 0.19174083932206964, 0.2021908974037287, 0.20537647663493724, 0.21012971214552628, 0.21921162741283728, 0.22710116388705343, 0.23001587877472252, 0.23984216697863087, 0.25088317872057864, 0.2529726979342749, 0.2628667817472464, 0.27331418947314856, 0.27790969602572685, 0.27909540451816134, 0.28395012318427254, 0.29011052536391724, 0.29105632638473433, 0.2936782541546912, 0.30438361843391537, 0.31144946516958655, 0.30967714348087483, 0.3149243239220893, 0.3189383962875595, 0.33310052538522644, 0.33702740471939674, 0.3430252746120197, 0.35139595427728704, 0.36404833621698707, 0.3687374362890009, 0.37135854870167717, 0.37945259602442827, 0.37945259602442827, 0.3864728729187147, 0.3877927601321209, 0.39575524418081653, 0.39950779924236945, 0.4145412821814205, 0.42418492811770253, 0.42418492811770253, 0.42689362725730373, 0.42689362725730373, 0.4356936808132548, 0.43864396119044036, 0.43864396119044036, 0.44772670878974286, 0.44772670878974286, 0.44772670878974286, 0.44772670878974286, 0.44772670878974286, 0.44772670878974286, 0.44772670878974286, 0.45924971541723425, 0.45924971541723425, 0.46498122780893814, 0.4700331863885685, 0.4700331863885685, 0.4700331863885685, 0.4700331863885685, 0.4700331863885685, 0.4700331863885685, 0.4803158710015339, 0.4803158710015339, 0.4803158710015339, 0.5064966112708038, 0.5064966112708038, 0.5064966112708038, 0.5129726717148386, 0.5129726717148386, 0.5129726717148386, 0.5129726717148386, 0.5129726717148386, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056, 0.5221316606803056]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19911.0)
('VALIDATE SUM PROTEIN TEST: ', 2446.0)
((646, 331), (646, 331), 175683.66, 58221.0)
('Error: ', tensor(107959.7344, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5267758682810437, 0.2867778134069451)
('Val: AUC, AUPR, Erros: ', 0.5172156422167088, 0.27606027520273724, 13711.732)
('Test: AUC, AUPR, Erros: ', 0.511467799130531, 0.28505778407880616, 13272.621)
((646, 331), (646, 331), 64088.887, 58221.0)
('Error: ', tensor(39819.1484, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.699792609866287, 0.5143284563158009)
('Val: AUC, AUPR, Erros: ', 0.6760239599974622, 0.4775944290469327, 5004.187)
('Test: AUC, AUPR, Erros: ', 0.6607443341464199, 0.47307218683751145, 5139.6426)
((646, 331), (646, 331), 69922.95, 58221.0)
('Error: ', tensor(36851.8086, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7568987878646379, 0.5858965595521642)
('Val: AUC, AUPR, Erros: ', 0.7219732405381472, 0.5339332558595731, 4729.362)
('Test: AUC, AUPR, Erros: ', 0.6978813237954867, 0.5179082088878475, 4892.011)
((646, 331), (646, 331), 72029.41, 58221.0)
('Error: ', tensor(34925.5742, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7734097724776318, 0.6070272290384203)
('Val: AUC, AUPR, Erros: ', 0.7337515026947441, 0.5444439981759277, 4582.8774)
('Test: AUC, AUPR, Erros: ', 0.7057556076246593, 0.5243190006280967, 4791.7944)
((646, 331), (646, 331), 71230.8, 58221.0)
('Error: ', tensor(33759.2734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7828161640896534, 0.6208236627577908)
('Val: AUC, AUPR, Erros: ', 0.7382826167183398, 0.5468426887782336, 4519.496)
('Test: AUC, AUPR, Erros: ', 0.7076877026183398, 0.5260660742466555, 4767.8)
((646, 331), (646, 331), 69680.39, 58221.0)
('Error: ', tensor(32858.1172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7922934240177122, 0.6361839011088144)
('Val: AUC, AUPR, Erros: ', 0.7401299610188099, 0.5453769880282785, 4487.3945)
('Test: AUC, AUPR, Erros: ', 0.7073923583486527, 0.5218249149103295, 4771.111)
((646, 331), (646, 331), 68674.555, 58221.0)
('Error: ', tensor(32275.3906, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.800058010015489, 0.6486285853075219)
('Val: AUC, AUPR, Erros: ', 0.7413213726495297, 0.5455821321615824, 4471.809)
('Test: AUC, AUPR, Erros: ', 0.7051056575164143, 0.5159638169562202, 4800.6816)
((646, 331), (646, 331), 67761.86, 58221.0)
('Error: ', tensor(31857.1250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8058927877351856, 0.6577067737018195)
('Val: AUC, AUPR, Erros: ', 0.7414631339645383, 0.5459172858225532, 4461.524)
('Test: AUC, AUPR, Erros: ', 0.7006462235954638, 0.5114712585874153, 4826.652)
((646, 331), (646, 331), 67085.016, 58221.0)
('Error: ', tensor(31558.1738, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8100007472229055, 0.6639478045897705)
('Val: AUC, AUPR, Erros: ', 0.7398153114948786, 0.5446228259377236, 4470.5146)
('Test: AUC, AUPR, Erros: ', 0.6975451294857855, 0.5102390234769179, 4837.4053)
((646, 331), (646, 331), 66846.1, 58221.0)
('Error: ', tensor(31350.1016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8130154159902073, 0.6685368525689842)
('Val: AUC, AUPR, Erros: ', 0.7369143126220802, 0.5408013791102158, 4497.4023)
('Test: AUC, AUPR, Erros: ', 0.69604706444042, 0.5097098604566965, 4844.3013)
((646, 331), (646, 331), 66408.914, 58221.0)
('Error: ', tensor(31161.5898, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8154801747502975, 0.6721239404475223)
('Val: AUC, AUPR, Erros: ', 0.73336227832081, 0.5364156614033416, 4521.5215)
('Test: AUC, AUPR, Erros: ', 0.6927884794045758, 0.5074097082867093, 4858.214)
Train: 0.8059 0.6577
Test: 0.7006 0.5115
[0.5811765057339064, 0.5626960572482591, 0.5696587567245853, 0.5745442560583617, 0.5783623071141735, 0.5759830083133031, 0.577054720633868, 0.5798143608319621, 0.5829051247714044, 0.5827758288235524, 0.5842400901872092, 0.5862665969156746, 0.5888982292458385, 0.5897896713088551, 0.5943630478022907, 0.5964560310319081, 0.6004052448974475, 0.6049325467412965, 0.6086814721357282, 0.609878482605389, 0.6103201991928856, 0.6125763841234778, 0.6137526335341801, 0.6155339020187784, 0.6169116603263491, 0.6222870346130037, 0.6242122832951554, 0.6244306649710138, 0.6264011438338406, 0.6275785478137315, 0.6342238580068619, 0.6368369415624069, 0.6410172365436023, 0.6440308865783475, 0.6481824618957785, 0.6495263912900954, 0.6502325363329141, 0.6538555987658703, 0.6538555987658703, 0.6561983111941657, 0.657072344904678, 0.6597798862328487, 0.6615942459384532, 0.6675161956289599, 0.6708642406921491, 0.6708642406921491, 0.6714239170456411, 0.6714239170456411, 0.6741140143465568, 0.6759822841620959, 0.6759822841620959, 0.6791235776307594, 0.6791235776307594, 0.6791235776307594, 0.6791235776307594, 0.6791235776307594, 0.6791235776307594, 0.6791235776307594, 0.6824119029862886, 0.6824119029862886, 0.68410474781525, 0.6862272378108899, 0.6862272378108899, 0.6862272378108899, 0.6862272378108899, 0.6862272378108899, 0.6862272378108899, 0.6881446687048002, 0.6881446687048002, 0.6881446687048002, 0.6953505616839986, 0.6953505616839986, 0.6953505616839986, 0.6978419172513711, 0.6978419172513711, 0.6978419172513711, 0.6978419172513711, 0.6978419172513711, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638, 0.7006462235954638]
[0.18030105570573696, 0.1674018825850267, 0.1823250845274788, 0.18707090295825485, 0.1936953207759815, 0.19391942766676895, 0.19664825783906056, 0.20754023542590144, 0.2171683717802471, 0.21861832719228505, 0.2221583111753555, 0.22701031311951939, 0.2318203388408846, 0.2340607221879317, 0.24256052807086242, 0.24715930407499453, 0.256000376822995, 0.2666332527193779, 0.27395345081444955, 0.2777963165528108, 0.2787510282941328, 0.28384300801588674, 0.2872240286298168, 0.292139068929296, 0.2949247277446424, 0.3067878092479347, 0.3115401765735288, 0.3120416972220965, 0.31671903275407454, 0.3198213304818684, 0.3356050611513027, 0.34113680635876, 0.3521647543130331, 0.3591192926546662, 0.36832619765976393, 0.37133677882319993, 0.37297149731843693, 0.3815441266419092, 0.3815441266419092, 0.38649363528432734, 0.38876666632710705, 0.39589137279386694, 0.40143764251015257, 0.41745260014473196, 0.42594152739300684, 0.42594152739300684, 0.42685784843152674, 0.42685784843152674, 0.4342125854739175, 0.43877053030371793, 0.43877053030371793, 0.4470431726939956, 0.4470431726939956, 0.4470431726939956, 0.4470431726939956, 0.4470431726939956, 0.4470431726939956, 0.4470431726939956, 0.4562313386621391, 0.4562313386621391, 0.4611006725261138, 0.46722202943180763, 0.46722202943180763, 0.46722202943180763, 0.46722202943180763, 0.46722202943180763, 0.46722202943180763, 0.47274224745865195, 0.47274224745865195, 0.47274224745865195, 0.49507630055305424, 0.49507630055305424, 0.49507630055305424, 0.502847258817228, 0.502847258817228, 0.502847258817228, 0.502847258817228, 0.502847258817228, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153, 0.5114712585874153]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19946.0)
('VALIDATE SUM PROTEIN TEST: ', 2286.0)
((646, 331), (646, 331), 112697.38, 58507.0)
('Error: ', tensor(56974.9258, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5015674753622923, 0.2772063885039589)
('Val: AUC, AUPR, Erros: ', 0.5067239190420652, 0.27569120529485786, 7140.2363)
('Test: AUC, AUPR, Erros: ', 0.509193712951413, 0.2746314719978419, 7133.8145)
((646, 331), (646, 331), 69181.555, 58507.0)
('Error: ', tensor(40188.3125, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6939767067890161, 0.5074197682517273)
('Val: AUC, AUPR, Erros: ', 0.6920749160195223, 0.49469417248275943, 5010.0024)
('Test: AUC, AUPR, Erros: ', 0.670087486557746, 0.4696022350790776, 5044.254)
((646, 331), (646, 331), 74087.62, 58507.0)
('Error: ', tensor(37089.4883, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7569808470763689, 0.5874060888284091)
('Val: AUC, AUPR, Erros: ', 0.7412695183747362, 0.5579467823102642, 4710.9453)
('Test: AUC, AUPR, Erros: ', 0.722175427148582, 0.5330873347581956, 4767.3203)
((646, 331), (646, 331), 73379.18, 58507.0)
('Error: ', tensor(34900.6211, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7738088250478177, 0.6088623453138803)
('Val: AUC, AUPR, Erros: ', 0.7513978299948699, 0.5716001464106475, 4511.9263)
('Test: AUC, AUPR, Erros: ', 0.7334642770132537, 0.5437252689055325, 4591.037)
((646, 331), (646, 331), 71897.19, 58507.0)
('Error: ', tensor(33677.9023, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7851547810714031, 0.6254755326069601)
('Val: AUC, AUPR, Erros: ', 0.7587274422259731, 0.5820819418756351, 4413.1636)
('Test: AUC, AUPR, Erros: ', 0.7382350617415265, 0.5476720450482081, 4514.344)
((646, 331), (646, 331), 69997.46, 58507.0)
('Error: ', tensor(32855.5664, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7951104437431491, 0.6417437669910062)
('Val: AUC, AUPR, Erros: ', 0.7629762499853339, 0.5868726640923059, 4360.88)
('Test: AUC, AUPR, Erros: ', 0.7419369013069383, 0.5551258089108275, 4453.1646)
((646, 331), (646, 331), 68208.97, 58507.0)
('Error: ', tensor(32341.8730, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.800960188540709, 0.6515546095263314)
('Val: AUC, AUPR, Erros: ', 0.7639000929143303, 0.5877012521834535, 4322.4785)
('Test: AUC, AUPR, Erros: ', 0.7413643422209781, 0.5563529491188989, 4440.252)
((646, 331), (646, 331), 68004.74, 58507.0)
('Error: ', tensor(32049.5645, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.805192173229358, 0.6580956787895318)
('Val: AUC, AUPR, Erros: ', 0.7648214236506649, 0.589392658622093, 4304.402)
('Test: AUC, AUPR, Erros: ', 0.7386447680652357, 0.5526394131100301, 4464.977)
((646, 331), (646, 331), 67956.4, 58507.0)
('Error: ', tensor(31774.9238, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8094486475635023, 0.6643078430994638)
('Val: AUC, AUPR, Erros: ', 0.7660762815766872, 0.592015050045299, 4285.9614)
('Test: AUC, AUPR, Erros: ', 0.7350743744245564, 0.5465817165226796, 4514.141)
((646, 331), (646, 331), 67561.53, 58507.0)
('Error: ', tensor(31516.8945, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8129106735214529, 0.6692610904521683)
('Val: AUC, AUPR, Erros: ', 0.7661539224831322, 0.5953931233640428, 4265.2837)
('Test: AUC, AUPR, Erros: ', 0.730436499123656, 0.5375238841732455, 4593.5713)
((646, 331), (646, 331), 66801.42, 58507.0)
('Error: ', tensor(31291.8301, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8152558167134303, 0.6729106726484922)
('Val: AUC, AUPR, Erros: ', 0.7671090369033176, 0.598694156966786, 4241.9756)
('Test: AUC, AUPR, Erros: ', 0.7250566031793315, 0.5280967875670269, 4695.6313)
Train: 0.8153 0.6729
Test: 0.7251 0.5281
[0.5747676902935269, 0.5921205023018982, 0.5888360252742999, 0.5830793168169738, 0.5883102841299099, 0.5900984099479628, 0.5915400646640946, 0.5966619823688968, 0.6029454316979687, 0.6051024730158114, 0.6112046169960543, 0.6115621464751261, 0.6167724619769891, 0.616491924171874, 0.6216722301292545, 0.6265787523240249, 0.6295044586569464, 0.63483121493585, 0.6381781505229212, 0.6412833744900014, 0.6420622050135387, 0.6462365778322122, 0.6482690133577228, 0.6511749375277514, 0.6529833088069036, 0.6566687075180339, 0.6575748309323964, 0.6584698109943858, 0.6604399898125034, 0.6613717531038626, 0.6666558714931387, 0.6693100998704421, 0.6726589613223277, 0.6755451020742771, 0.6790831818348452, 0.6811977154615572, 0.6820150898075121, 0.6845609684135402, 0.6845609684135402, 0.6869152532045089, 0.6876237506771972, 0.6895447435818596, 0.6907976784655759, 0.6956071740269316, 0.6997655373909922, 0.6997655373909922, 0.7005127651280021, 0.7005127651280021, 0.702670982052871, 0.7040309728670587, 0.7040309728670587, 0.7055604337415733, 0.7055604337415733, 0.7055604337415733, 0.7055604337415733, 0.7055604337415733, 0.7055604337415733, 0.7055604337415733, 0.7090926375696314, 0.7090926375696314, 0.7103307779152921, 0.7123282884717438, 0.7123282884717438, 0.7123282884717438, 0.7123282884717438, 0.7123282884717438, 0.7123282884717438, 0.7142041020705636, 0.7142041020705636, 0.7142041020705636, 0.7206250690202571, 0.7206250690202571, 0.7206250690202571, 0.7227359650469221, 0.7227359650469221, 0.7227359650469221, 0.7227359650469221, 0.7227359650469221, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315, 0.7250566031793315]
[0.1768545721423612, 0.18332221298407433, 0.18398931800282559, 0.1817213118022679, 0.19242934706779125, 0.19917364005052066, 0.20229462145476657, 0.2168974271390392, 0.22963399637841692, 0.23235612230191285, 0.24418113587646637, 0.24478956998730128, 0.25414984068592006, 0.25496825439081533, 0.26472286217518226, 0.272746877909643, 0.27950272889732714, 0.2914667078708817, 0.29823021483102413, 0.3060160333272684, 0.3075087482442417, 0.316368138295696, 0.320702643397926, 0.3283936708333559, 0.3323305824585864, 0.34062352997773476, 0.34445631367202934, 0.3466717716608093, 0.3516568662655964, 0.3542507969065142, 0.36611398864542777, 0.3715519281708516, 0.3817212093280279, 0.388904027653509, 0.3975429501163762, 0.4032527605831483, 0.4047287192536298, 0.4111191012465846, 0.4111191012465846, 0.416212567647903, 0.4178351811529417, 0.42397270851710733, 0.4276543566921836, 0.44095678889910583, 0.4529631317544824, 0.4529631317544824, 0.4552474010755871, 0.4552474010755871, 0.4609947520997775, 0.4651320616998643, 0.4651320616998643, 0.46915594169988845, 0.46915594169988845, 0.46915594169988845, 0.46915594169988845, 0.46915594169988845, 0.46915594169988845, 0.46915594169988845, 0.4793164953253015, 0.4793164953253015, 0.4828911907912649, 0.48861331787699724, 0.48861331787699724, 0.48861331787699724, 0.48861331787699724, 0.48861331787699724, 0.48861331787699724, 0.4942360999230804, 0.4942360999230804, 0.4942360999230804, 0.5146247541864996, 0.5146247541864996, 0.5146247541864996, 0.5210109910824845, 0.5210109910824845, 0.5210109910824845, 0.5210109910824845, 0.5210109910824845, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269, 0.5280967875670269]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_3
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (81, 2666), (647, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19714.0)
('VALIDATE SUM PROTEIN TEST: ', 2411.0)
((647, 331), (647, 331), 83737.586, 58338.0)
('Error: ', tensor(45935.4062, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5161685305166492, 0.28029949970128054)
('Val: AUC, AUPR, Erros: ', 0.5177776475566387, 0.2887191887228947, 5693.2607)
('Test: AUC, AUPR, Erros: ', 0.5352397047195636, 0.28833673045886166, 5698.243)
((647, 331), (647, 331), 53160.95, 58338.0)
('Error: ', tensor(39522.1328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7170049116938172, 0.5325573660546403)
('Val: AUC, AUPR, Erros: ', 0.6885145609059367, 0.4974279951295063, 5018.1675)
('Test: AUC, AUPR, Erros: ', 0.702246447968336, 0.5075751745918294, 4932.3687)
((647, 331), (647, 331), 52563.645, 58338.0)
('Error: ', tensor(36589.5273, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7606224627276785, 0.5883807134888718)
('Val: AUC, AUPR, Erros: ', 0.7274023080505534, 0.54387279021918, 4717.9463)
('Test: AUC, AUPR, Erros: ', 0.7401498836416049, 0.5530453038019252, 4620.469)
((647, 331), (647, 331), 49908.887, 58338.0)
('Error: ', tensor(35021.0625, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7729960479385254, 0.6061292392857475)
('Val: AUC, AUPR, Erros: ', 0.7351318694028255, 0.5536247124529998, 4583.907)
('Test: AUC, AUPR, Erros: ', 0.7484022383905528, 0.5646720617635743, 4474.977)
((647, 331), (647, 331), 50546.258, 58338.0)
('Error: ', tensor(33933.0664, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7812724695840638, 0.6183745386771435)
('Val: AUC, AUPR, Erros: ', 0.7375854566454949, 0.5562377646859054, 4510.366)
('Test: AUC, AUPR, Erros: ', 0.7521660620491206, 0.5704888472288985, 4388.3936)
((647, 331), (647, 331), 51701.707, 58338.0)
('Error: ', tensor(33217.7383, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7878353992356689, 0.6283468157428307)
('Val: AUC, AUPR, Erros: ', 0.7391562745969891, 0.5572578741505646, 4477.0645)
('Test: AUC, AUPR, Erros: ', 0.7549350397221535, 0.5752395461198098, 4338.4233)
((647, 331), (647, 331), 51921.613, 58338.0)
('Error: ', tensor(32785.5430, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7935505556884584, 0.6370450920462184)
('Val: AUC, AUPR, Erros: ', 0.7383531159447028, 0.5545772464197154, 4483.712)
('Test: AUC, AUPR, Erros: ', 0.7566732682843857, 0.5799529852956637, 4313.5547)
((647, 331), (647, 331), 52338.38, 58338.0)
('Error: ', tensor(32416.9336, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7985473015563758, 0.6446145053851812)
('Val: AUC, AUPR, Erros: ', 0.7380960831487505, 0.5517810280916087, 4499.384)
('Test: AUC, AUPR, Erros: ', 0.7584519077654762, 0.5841334232437552, 4294.059)
((647, 331), (647, 331), 52414.848, 58338.0)
('Error: ', tensor(32087.5742, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8035783325961204, 0.6519744798508873)
('Val: AUC, AUPR, Erros: ', 0.7366940541049222, 0.5457819779024927, 4559.615)
('Test: AUC, AUPR, Erros: ', 0.7594986181454274, 0.5886578014802252, 4277.976)
((647, 331), (647, 331), 52290.92, 58338.0)
('Error: ', tensor(31766.2617, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8084912734198283, 0.6604584045424295)
('Val: AUC, AUPR, Erros: ', 0.7353674007891671, 0.540308505637435, 4622.0493)
('Test: AUC, AUPR, Erros: ', 0.7594591024163487, 0.5921631515062169, 4271.9736)
((647, 331), (647, 331), 52981.754, 58338.0)
('Error: ', tensor(31477.1387, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8120509955365052, 0.6667238424607066)
('Val: AUC, AUPR, Erros: ', 0.7331253032872949, 0.5361822757978035, 4644.14)
('Test: AUC, AUPR, Erros: ', 0.7591984960415417, 0.5928012370537871, 4269.9844)
Train: 0.7878 0.6283
Test: 0.7549 0.5752
[0.6067869657005553, 0.6237720707558416, 0.6373101009002905, 0.6411218451167013, 0.6433598180910732, 0.6440781100811614, 0.643778147900066, 0.6494833203870367, 0.6539488300284979, 0.6539673866552194, 0.6566008293651737, 0.6584678189449644, 0.6601017165020825, 0.6610142133915143, 0.6635250982531731, 0.6654297145883294, 0.6672818887462388, 0.6692310721950807, 0.6721445308924142, 0.6755842422581188, 0.6761430747283567, 0.6783891620236158, 0.6806009125403125, 0.684420488221261, 0.6855670336425204, 0.6891789851818401, 0.6907447360796565, 0.6910962045111126, 0.6925570375532915, 0.6929355880908546, 0.6975929220238815, 0.7000430583581873, 0.7042604680750566, 0.706353530213613, 0.7103809827747793, 0.7111684138969888, 0.7121383532642037, 0.7156658423050496, 0.7156658423050496, 0.717382212345921, 0.7185944408250816, 0.7208452884099174, 0.721717898619253, 0.7256780595063077, 0.7283749239679599, 0.7283749239679599, 0.7292782726593114, 0.7292782726593114, 0.7319523129132861, 0.7328027888458039, 0.7328027888458039, 0.735499586726188, 0.735499586726188, 0.735499586726188, 0.735499586726188, 0.735499586726188, 0.735499586726188, 0.735499586726188, 0.7386492046714068, 0.7386492046714068, 0.7404069726303113, 0.7421176671499234, 0.7421176671499234, 0.7421176671499234, 0.7421176671499234, 0.7421176671499234, 0.7421176671499234, 0.7440722330057645, 0.7440722330057645, 0.7440722330057645, 0.750319378412364, 0.750319378412364, 0.750319378412364, 0.7525973974921745, 0.7525973974921745, 0.7525973974921745, 0.7525973974921745, 0.7525973974921745, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535, 0.7549350397221535]
[0.19561418205782583, 0.21375047942558878, 0.22322057057570782, 0.24101556649130726, 0.24023759620354201, 0.24700881028555421, 0.24710228987745742, 0.2676257435141939, 0.2814461237903664, 0.2791624365919403, 0.287484311335769, 0.29181723842818064, 0.29580849694081013, 0.29863416695704464, 0.3053912615087831, 0.31019773753710733, 0.3148412624118889, 0.32284339103627613, 0.33054688662425824, 0.34103711351957944, 0.3420271165724944, 0.35007581118032427, 0.35680914053363, 0.3694308102373558, 0.3724357993904607, 0.3843559615859267, 0.3885376222470005, 0.3893315171312731, 0.3931877054628653, 0.3936908282726117, 0.40557477474904485, 0.4115256959374766, 0.42439970837984353, 0.4310770655346071, 0.4439497966972077, 0.44549785618074844, 0.4477866239901917, 0.45829950063726466, 0.45829950063726466, 0.4622261404429286, 0.4651525608836803, 0.47303762055608, 0.47565665788770106, 0.4856948875088173, 0.49330057974481306, 0.49330057974481306, 0.49589905371311677, 0.49589905371311677, 0.5034569467389427, 0.5053938698665149, 0.5053938698665149, 0.5126591083913802, 0.5126591083913802, 0.5126591083913802, 0.5126591083913802, 0.5126591083913802, 0.5126591083913802, 0.5126591083913802, 0.5217321090534005, 0.5217321090534005, 0.527772619581611, 0.5330952198253087, 0.5330952198253087, 0.5330952198253087, 0.5330952198253087, 0.5330952198253087, 0.5330952198253087, 0.5396925354524598, 0.5396925354524598, 0.5396925354524598, 0.5597354211229315, 0.5597354211229315, 0.5597354211229315, 0.567326930398377, 0.567326930398377, 0.567326930398377, 0.567326930398377, 0.567326930398377, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098, 0.5752395461198098]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_4
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (80, 2666), (647, 331), (80, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19824.0)
('VALIDATE SUM PROTEIN TEST: ', 2518.0)
((647, 331), (647, 331), 190831.08, 58099.0)
('Error: ', tensor(126344.9062, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.49986124601918613, 0.275037881653904)
('Val: AUC, AUPR, Erros: ', 0.5101849158867835, 0.2918218295841582, 15487.1045)
('Test: AUC, AUPR, Erros: ', 0.4876179094918413, 0.2778858642820888, 15487.704)
((647, 331), (647, 331), 66621.95, 58099.0)
('Error: ', tensor(39595.8828, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7074865935853036, 0.5249536216182399)
('Val: AUC, AUPR, Erros: ', 0.6865281184790353, 0.5124828818689169, 5059.84)
('Test: AUC, AUPR, Erros: ', 0.6886593401430556, 0.5121641920656979, 5001.472)
((647, 331), (647, 331), 72962.55, 58099.0)
('Error: ', tensor(36853.1172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.755521033730749, 0.582285816992264)
('Val: AUC, AUPR, Erros: ', 0.7226165488144336, 0.5481177274920392, 4799.4736)
('Test: AUC, AUPR, Erros: ', 0.7316973780480512, 0.5584970770251507, 4715.6094)
((647, 331), (647, 331), 73512.57, 58099.0)
('Error: ', tensor(35050.5469, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7703394689410836, 0.6007329482446687)
('Val: AUC, AUPR, Erros: ', 0.7319759300143514, 0.5541986965075016, 4673.244)
('Test: AUC, AUPR, Erros: ', 0.7430565706137023, 0.5690121825830124, 4559.034)
((647, 331), (647, 331), 71301.78, 58099.0)
('Error: ', tensor(33874.1250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7798914124864571, 0.6149106714819377)
('Val: AUC, AUPR, Erros: ', 0.734308028234167, 0.551365195261826, 4638.8843)
('Test: AUC, AUPR, Erros: ', 0.7478979156841905, 0.5736800580215398, 4478.9624)
((647, 331), (647, 331), 69947.14, 58099.0)
('Error: ', tensor(33039.3555, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7895496215323048, 0.6302485235831224)
('Val: AUC, AUPR, Erros: ', 0.733347955419865, 0.5368131205743999, 4714.3994)
('Test: AUC, AUPR, Erros: ', 0.7504750294487952, 0.5738229094564533, 4468.1587)
((647, 331), (647, 331), 69530.23, 58099.0)
('Error: ', tensor(32394.2422, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.799816251921854, 0.6464988946158311)
('Val: AUC, AUPR, Erros: ', 0.7301767213516339, 0.5200412049662176, 4912.0947)
('Test: AUC, AUPR, Erros: ', 0.7507929746154971, 0.5676374315406829, 4540.527)
((647, 331), (647, 331), 68509.664, 58099.0)
('Error: ', tensor(31860.4805, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.807223593730244, 0.6579561541343003)
('Val: AUC, AUPR, Erros: ', 0.7286094119732824, 0.5186495918298879, 4961.548)
('Test: AUC, AUPR, Erros: ', 0.75109324116121, 0.5627223706709485, 4582.053)
((647, 331), (647, 331), 67513.47, 58099.0)
('Error: ', tensor(31487.1016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8115751041530549, 0.6651280482926534)
('Val: AUC, AUPR, Erros: ', 0.7277821749743287, 0.5203057485793303, 4936.5093)
('Test: AUC, AUPR, Erros: ', 0.7519888537431557, 0.5618724978146121, 4578.137)
((647, 331), (647, 331), 66767.74, 58099.0)
('Error: ', tensor(31222.7207, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8145526729294975, 0.6700134264366746)
('Val: AUC, AUPR, Erros: ', 0.7260145405604597, 0.5194039908680292, 4920.185)
('Test: AUC, AUPR, Erros: ', 0.7526183668408928, 0.561844565730178, 4570.6675)
((647, 331), (647, 331), 66491.65, 58099.0)
('Error: ', tensor(31031.6289, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8168719247194172, 0.673942543472425)
('Val: AUC, AUPR, Erros: ', 0.7237128065957681, 0.5166755600468805, 4928.8975)
('Test: AUC, AUPR, Erros: ', 0.7527688092053944, 0.560483833647308, 4566.015)
Train: 0.7799 0.6149
Test: 0.7479 0.5737
[0.5677598334194633, 0.5811239142947333, 0.5939797294275746, 0.5944903248967373, 0.5966966152819461, 0.5973735337853071, 0.6040381348483487, 0.6119463166710535, 0.6183939939430134, 0.6196516405869101, 0.6239170283498013, 0.626766828569869, 0.6294455350923966, 0.6312785313068372, 0.63803904287685, 0.6376727906021366, 0.6429671917651081, 0.6477027425921358, 0.6512793876424364, 0.654641737710765, 0.6555480303278972, 0.6590535574034881, 0.6621538803212621, 0.6664153602967138, 0.6685596510371143, 0.6740500786285493, 0.6757004499338579, 0.6766125663223278, 0.6778850892161056, 0.6790462261661206, 0.6844943097828086, 0.687535265654852, 0.6914992903539439, 0.693913313930472, 0.6975069503512963, 0.6993467456618003, 0.7007284970207915, 0.7034974591049081, 0.7034974591049081, 0.7057276659040389, 0.7068128993234817, 0.7093712428450321, 0.7108843730687157, 0.7163073276659079, 0.7198148493154909, 0.7198148493154909, 0.7208789019647415, 0.7208789019647415, 0.7237859778960822, 0.7253255320753748, 0.7253255320753748, 0.7277813134321933, 0.7277813134321933, 0.7277813134321933, 0.7277813134321933, 0.7277813134321933, 0.7277813134321933, 0.7277813134321933, 0.7309551047444024, 0.7309551047444024, 0.7327311393175726, 0.7344267871614489, 0.7344267871614489, 0.7344267871614489, 0.7344267871614489, 0.7344267871614489, 0.7344267871614489, 0.7365956746956124, 0.7365956746956124, 0.7365956746956124, 0.7436307750557528, 0.7436307750557528, 0.7436307750557528, 0.7455411175405345, 0.7455411175405345, 0.7455411175405345, 0.7455411175405345, 0.7455411175405345, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905, 0.7478979156841905]
[0.15786534439773647, 0.15967445495617674, 0.17601447193954942, 0.18654305875917318, 0.19339877556016793, 0.19641166347143013, 0.2082283367123286, 0.22354255709528165, 0.2353926242597384, 0.2375505088366074, 0.24693301485140423, 0.2539165829726622, 0.26030296232216876, 0.2631175757733961, 0.2771598912482242, 0.27262579226216743, 0.2823977222841487, 0.29409592560175124, 0.30150093099368946, 0.3099309477391947, 0.3127746743982228, 0.32053805454650763, 0.32669306046936386, 0.33769898297061945, 0.3437025615104557, 0.35666102460928145, 0.36098099576371584, 0.3619293135813392, 0.36504112515545767, 0.3687569805995732, 0.3836489184855296, 0.3915189251203553, 0.4035764427296579, 0.4094369219381545, 0.4178186738378097, 0.4236770514377549, 0.42779805288454187, 0.434633177493491, 0.434633177493491, 0.44069432027077754, 0.4434924762668244, 0.45099473758505987, 0.45629114127689097, 0.47312641170668723, 0.4842146193850155, 0.4842146193850155, 0.4864994538908361, 0.4864994538908361, 0.49545388451406386, 0.500637485951875, 0.500637485951875, 0.5075397050741952, 0.5075397050741952, 0.5075397050741952, 0.5075397050741952, 0.5075397050741952, 0.5075397050741952, 0.5075397050741952, 0.5176827101336348, 0.5176827101336348, 0.5231388815661564, 0.5285543049361552, 0.5285543049361552, 0.5285543049361552, 0.5285543049361552, 0.5285543049361552, 0.5285543049361552, 0.5359456768545096, 0.5359456768545096, 0.5359456768545096, 0.5598416467318315, 0.5598416467318315, 0.5598416467318315, 0.5657046900297499, 0.5657046900297499, 0.5657046900297499, 0.5657046900297499, 0.5657046900297499, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398, 0.5736800580215398]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_5
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19389.0)
('VALIDATE SUM PROTEIN TEST: ', 2301.0)
((646, 331), (646, 331), 155181.38, 58366.0)
('Error: ', tensor(86626.2500, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5451982463509579, 0.30137598184706965)
('Val: AUC, AUPR, Erros: ', 0.5350312933077761, 0.2852286991568429, 11030.319)
('Test: AUC, AUPR, Erros: ', 0.5505897960126707, 0.31063719810204066, 10795.764)
((646, 331), (646, 331), 70152.195, 58366.0)
('Error: ', tensor(38937.2031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.729007601417794, 0.5530285213221432)
('Val: AUC, AUPR, Erros: ', 0.716908471105214, 0.5327970350240883, 4858.91)
('Test: AUC, AUPR, Erros: ', 0.7013978700393793, 0.5201988436608324, 5002.4937)
