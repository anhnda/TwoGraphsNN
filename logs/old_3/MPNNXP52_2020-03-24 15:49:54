class Net52(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net52, self).__init__()

        self.convD1 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = GATConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv1g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv2 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv2g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv3 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv3g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=0.8)

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, proteinNodes, proteinWeight, drugGraphBatch, nDrug, drugFeatures = None):


        if config.INNER_FEATURE and drugFeatures is not None:
            nDrug = drugFeatures.shape[0]
            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            xDrug = self.L1(drugFeatures)
            xDrug = self.actL1(xDrug)
            xDrug = self.L2(xDrug)
            xDrug = self.actL2(xDrug)

            x = torch.cat((xDrug, x), dim=0)

        elif config.INNER_GRAPH:
            xAtom, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch
            # xDrug = self.mact1(self.mlinear1(xDrug))
            # xDrug = self.mact2(self.mlinear2(xDrug))

            xProtein = self.nodesEmbedding(proteinNodes)

            xAtom = self.nodesEmbedding(xAtom)
            xAtom = xAtom.squeeze(1)




            iLevel = 0
            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv1(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv1g(xAtom, edge_index))
            xAtom, edge_index, _, batch, _, _ = self.pool1(xAtom, edge_index, None, batch)
            x1 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            iLevel += 1

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv2(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv2g(xAtom, edge_index))

            iLevel += 1
            xAtom, edge_index, _, batch, _, _ = self.pool2(xAtom, edge_index, None, batch)
            x2 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv3(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv3g(xAtom, edge_index))

            xAtom, edge_index, _, batch, _, _ = self.pool3(xAtom, edge_index, None, batch)
            x3 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xDrug = x1 + x2 + x3

            xDrug = self.lin1(xDrug)
            xDrug = self.act1(xDrug)
            xDrug = self.lin2(xDrug)
            xDrug = self.act2(xDrug)

            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            x = torch.cat((xDrug, x), dim=0)
        else:
            x = self.nodesEmbedding(x)

        if config.OUTER_GRAPH:
            # Conv Drug:
            x = self.convD1(x, drugEdges)
            x = F.relu(x)
            x = self.convD2(x, drugEdges)
            x = F.relu(x)

        if config.SE_GRAPH:
            # Conv SE:
            x = self.convS1(x, seEdges)
            x = F.relu(x)
            # x = self.convS2(x, seEdges)
            # x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', True)
('Protein Test: ', True)
('Inner Graph, Outer Graph, Se Graph: ', True, True, False)
('Drug Features: ', False)
('Inner mode: ', True)
('Cross Prob: ', 0.5)
('Inner Level: ', 2)
MPNNX
<models.MPNNXP5.MPNNXP5 object at 0x7f8e23b8ddd0>
('Manual torch seed: ', 1772727637)
('Config: ', 'Protein Test: ', True, 'KNN: ', 2)
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19906.0)
('VALIDATE SUM PROTEIN TEST: ', 2291.0)
((646, 331), (646, 331), 85938.29, 58595.0)
('Error: ', tensor(50352.5430, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.44579290665344695, 0.24288017258276182)
('Val: AUC, AUPR, Erros: ', 0.4563360249415949, 0.28187660736984566, 6257.5474)
('Test: AUC, AUPR, Erros: ', 0.4349041708452461, 0.21924015487992266, 6013.815)
((646, 331), (646, 331), 29454.443, 58595.0)
('Error: ', tensor(46658.6406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5090583749976937, 0.2748026342195111)
('Val: AUC, AUPR, Erros: ', 0.5154634877037512, 0.3010287187180294, 5939.0586)
('Test: AUC, AUPR, Erros: ', 0.4971838266009707, 0.24539663745939017, 5496.897)
((646, 331), (646, 331), 53197.21, 58595.0)
('Error: ', tensor(40176.6953, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.680816946856168, 0.49651889726551224)
('Val: AUC, AUPR, Erros: ', 0.6620267760477027, 0.4740602201625273, 5146.5107)
('Test: AUC, AUPR, Erros: ', 0.654433917667605, 0.4357894752420268, 4838.3564)
((646, 331), (646, 331), 49974.34, 58595.0)
('Error: ', tensor(38319.1523, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7234496398393218, 0.5480866014206682)
('Val: AUC, AUPR, Erros: ', 0.6931809202269312, 0.5140498370771472, 4967.574)
('Test: AUC, AUPR, Erros: ', 0.6953819360390099, 0.4939983796566901, 4621.117)
((646, 331), (646, 331), 50572.9, 58595.0)
('Error: ', tensor(36657.2383, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.739068262697633, 0.5638976318880626)
('Val: AUC, AUPR, Erros: ', 0.7034870938325557, 0.5244064233714943, 4810.8496)
('Test: AUC, AUPR, Erros: ', 0.7106370846692793, 0.5107268240689226, 4455.1055)
((646, 331), (646, 331), 52340.754, 58595.0)
('Error: ', tensor(35593.2656, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7479562704116489, 0.5744166394915808)
('Val: AUC, AUPR, Erros: ', 0.7083432753056467, 0.5292091939055312, 4724.685)
('Test: AUC, AUPR, Erros: ', 0.7173212333028793, 0.5175317385796191, 4376.3623)
((646, 331), (646, 331), 53568.6, 58595.0)
('Error: ', tensor(34975.3203, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7546536273691409, 0.5840378920327289)
('Val: AUC, AUPR, Erros: ', 0.7107645899364676, 0.531725171454397, 4690.1523)
('Test: AUC, AUPR, Erros: ', 0.7199447571390379, 0.5203484038597145, 4350.9956)
((646, 331), (646, 331), 54285.562, 58595.0)
('Error: ', tensor(34501.1328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7610507723744258, 0.5942010518965521)
('Val: AUC, AUPR, Erros: ', 0.7117750378487986, 0.5322535062464906, 4677.301)
('Test: AUC, AUPR, Erros: ', 0.721000696533021, 0.5213349155880358, 4343.1987)
((646, 331), (646, 331), 53709.87, 58595.0)
('Error: ', tensor(34132.0664, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7675969696781082, 0.6049190699167253)
('Val: AUC, AUPR, Erros: ', 0.7119820544406563, 0.5313518867011301, 4682.071)
('Test: AUC, AUPR, Erros: ', 0.7208209291556533, 0.5203471207654038, 4345.1807)
((646, 331), (646, 331), 52956.58, 58595.0)
('Error: ', tensor(33796.7422, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7742888469948045, 0.6153080360825955)
('Val: AUC, AUPR, Erros: ', 0.7111992657215669, 0.5282030807416984, 4697.8213)
('Test: AUC, AUPR, Erros: ', 0.7202569300545892, 0.5182666836455005, 4351.528)
((646, 331), (646, 331), 53209.418, 58595.0)
('Error: ', tensor(33389.8047, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7808531625197173, 0.6249205559750379)
('Val: AUC, AUPR, Erros: ', 0.7095658305233101, 0.5233147906658703, 4715.0737)
('Test: AUC, AUPR, Erros: ', 0.7191782487613698, 0.5151837510208489, 4361.1504)
((646, 331), (646, 331), 53816.324, 58595.0)
('Error: ', tensor(32975.9023, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7871141200113259, 0.6336607280888342)
('Val: AUC, AUPR, Erros: ', 0.7070886734595342, 0.5172261997551646, 4739.6914)
('Test: AUC, AUPR, Erros: ', 0.7174859360060268, 0.5111013467562683, 4376.265)
((646, 331), (646, 331), 53099.254, 58595.0)
('Error: ', tensor(32692.2969, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7927625822054067, 0.6413817262504756)
('Val: AUC, AUPR, Erros: ', 0.7037830908463723, 0.5106947269579015, 4776.8584)
('Test: AUC, AUPR, Erros: ', 0.7152870327729989, 0.5065411658436805, 4395.396)
((646, 331), (646, 331), 52745.176, 58595.0)
('Error: ', tensor(32414.2734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7979100297754159, 0.6481232735537268)
('Val: AUC, AUPR, Erros: ', 0.7000411228801531, 0.5041319968086455, 4812.871)
('Test: AUC, AUPR, Erros: ', 0.7126512870000247, 0.5016602365068035, 4418.381)
((646, 331), (646, 331), 52752.066, 58595.0)
('Error: ', tensor(32145.6719, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8024641195901681, 0.6540198639055301)
('Val: AUC, AUPR, Erros: ', 0.6960675516265348, 0.4980108747245393, 4845.4946)
('Test: AUC, AUPR, Erros: ', 0.7098172722142395, 0.496898040000051, 4442.9253)
((646, 331), (646, 331), 52932.44, 58595.0)
('Error: ', tensor(31898.0859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8063878057091904, 0.6591723759376387)
('Val: AUC, AUPR, Erros: ', 0.6921311349832034, 0.4921260871882511, 4876.5938)
('Test: AUC, AUPR, Erros: ', 0.7068575864268833, 0.4921457826840438, 4469.3857)
((646, 331), (646, 331), 53076.17, 58595.0)
('Error: ', tensor(31662.4023, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.809990349245615, 0.6640807277725004)
('Val: AUC, AUPR, Erros: ', 0.6883888734548096, 0.48653932468119565, 4908.6484)
('Test: AUC, AUPR, Erros: ', 0.7040178054692272, 0.4875609773239072, 4496.5723)
Train: 0.7611 0.5942
Test: 0.7210 0.5213
[0.5133125056189876, 0.5141267250525641, 0.5179470319162034, 0.5249612682704831, 0.5370238901134688, 0.5448350297948575, 0.5549643511470148, 0.5627694519425963, 0.571537498549363, 0.574040488727342, 0.5757379926125615, 0.5795930563135807, 0.5865007732325215, 0.5891271478731215, 0.5966384861677695, 0.6041400670595349, 0.6073150618709449, 0.61176852369174, 0.6169660262541952, 0.6193366572098893, 0.6202344034383864, 0.6238383606788264, 0.6276246114719392, 0.6295903047371016, 0.6311964661156572, 0.6370666143489702, 0.6403883344989929, 0.6405158728960118, 0.6432397091663177, 0.6446436102269215, 0.6510177337850782, 0.6530725874088354, 0.6562214735153838, 0.6590847561873987, 0.6644796883179698, 0.666183637329768, 0.6671163263453643, 0.670933645135944, 0.670933645135944, 0.6732917187857198, 0.6741528665168022, 0.6768959408927804, 0.6779823149691826, 0.6834596436624341, 0.6872271501735201, 0.6872271501735201, 0.6888325539535685, 0.6888325539535685, 0.6921723856338073, 0.6935462741622738, 0.6935462741622738, 0.696983056185873, 0.696983056185873, 0.696983056185873, 0.696983056185873, 0.696983056185873, 0.696983056185873, 0.696983056185873, 0.7009719514157666, 0.7009719514157666, 0.7030557148100647, 0.7047851488950612, 0.7047851488950612, 0.7047851488950612, 0.7047851488950612, 0.7047851488950612, 0.7047851488950612, 0.7077406942448131, 0.7077406942448131, 0.7077406942448131, 0.7157052370328619, 0.7157052370328619, 0.7157052370328619, 0.7180387177723424, 0.7180387177723424, 0.7180387177723424, 0.7180387177723424, 0.7180387177723424, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021, 0.721000696533021]
[0.10649566541579411, 0.1189176570017622, 0.12518005839568894, 0.13317176840387146, 0.14409411111204265, 0.1515273955489205, 0.16421110740604644, 0.17224831427480328, 0.1839953752808659, 0.18744159476228056, 0.19207303913003468, 0.19874216176562126, 0.2091448746378844, 0.2106201883600497, 0.22123874516078418, 0.2334551878336582, 0.23749967288406018, 0.24615136791218428, 0.2560428737437355, 0.26187567184210475, 0.2640219516414085, 0.26688295572101123, 0.27429973239142647, 0.2746078369794912, 0.2786788189480004, 0.291107559124518, 0.29866181083081267, 0.2958237595269917, 0.30228802679745437, 0.30679101731707425, 0.32330108734090474, 0.3276759652805029, 0.3317151476738256, 0.3390167787092631, 0.35387118126621975, 0.3580034176931345, 0.36037113034317314, 0.36873046312382757, 0.36873046312382757, 0.37453758621145716, 0.3762482585323379, 0.38487606430664695, 0.3886243637067535, 0.40169153789291234, 0.4115726612940801, 0.4115726612940801, 0.4153797400424214, 0.4153797400424214, 0.4265396346461077, 0.42908877759276987, 0.42908877759276987, 0.43969667401664625, 0.43969667401664625, 0.43969667401664625, 0.43969667401664625, 0.43969667401664625, 0.43969667401664625, 0.43969667401664625, 0.4518019332989042, 0.4518019332989042, 0.45833319572736686, 0.4629848554633098, 0.4629848554633098, 0.4629848554633098, 0.4629848554633098, 0.4629848554633098, 0.4629848554633098, 0.4747577883419303, 0.4747577883419303, 0.4747577883419303, 0.5032857364263061, 0.5032857364263061, 0.5032857364263061, 0.5103816934050248, 0.5103816934050248, 0.5103816934050248, 0.5103816934050248, 0.5103816934050248, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358, 0.5213349155880358]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19911.0)
('VALIDATE SUM PROTEIN TEST: ', 2446.0)
((646, 331), (646, 331), 80786.27, 58221.0)
('Error: ', tensor(49090.9727, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.44745163557399187, 0.243123907303039)
('Val: AUC, AUPR, Erros: ', 0.48379697758427065, 0.2508771588606594, 6105.476)
('Test: AUC, AUPR, Erros: ', 0.4567386402835548, 0.26913473252931386, 6162.745)
((646, 331), (646, 331), 54146.766, 58221.0)
('Error: ', tensor(41416.2500, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6090011695104481, 0.366173723500654)
('Val: AUC, AUPR, Erros: ', 0.6153967791659138, 0.34964431234363363, 5137.9453)
('Test: AUC, AUPR, Erros: ', 0.593060701335922, 0.35651313387029226, 5308.5513)
((646, 331), (646, 331), 50266.92, 58221.0)
('Error: ', tensor(38765.5078, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7194782099220135, 0.5377568598124324)
('Val: AUC, AUPR, Erros: ', 0.7056629501117535, 0.5144284980928869, 4845.165)
('Test: AUC, AUPR, Erros: ', 0.6905382493554411, 0.5031839761695196, 5033.703)
((646, 331), (646, 331), 47427.996, 58221.0)
('Error: ', tensor(37145.6953, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7345219277161489, 0.5563655774399577)
('Val: AUC, AUPR, Erros: ', 0.7192571816236117, 0.5289018213001707, 4663.7124)
('Test: AUC, AUPR, Erros: ', 0.7037019260856033, 0.5195046377237454, 4878.5483)
((646, 331), (646, 331), 51580.297, 58221.0)
('Error: ', tensor(35712.6562, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.740889761713944, 0.5642417150444272)
('Val: AUC, AUPR, Erros: ', 0.7250559511587851, 0.5362287030629458, 4512.6133)
('Test: AUC, AUPR, Erros: ', 0.7060196167224619, 0.5248353522382367, 4745.7983)
((646, 331), (646, 331), 52040.156, 58221.0)
('Error: ', tensor(35222.0234, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7471640401079788, 0.5723507956661531)
('Val: AUC, AUPR, Erros: ', 0.7267783130425485, 0.5375594647844826, 4484.6387)
('Test: AUC, AUPR, Erros: ', 0.7084511576779771, 0.5265665933088925, 4721.803)
((646, 331), (646, 331), 54519.55, 58221.0)
('Error: ', tensor(34731.2031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7523182859559467, 0.5796580140404428)
('Val: AUC, AUPR, Erros: ', 0.7317288711749711, 0.5434485435153388, 4437.687)
('Test: AUC, AUPR, Erros: ', 0.7077383092835687, 0.526320376353009, 4702.51)
((646, 331), (646, 331), 51298.16, 58221.0)
('Error: ', tensor(34670.2305, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7575936892165807, 0.5889857381448875)
('Val: AUC, AUPR, Erros: ', 0.7329909419888248, 0.5446567445793196, 4450.191)
('Test: AUC, AUPR, Erros: ', 0.7082201484222725, 0.5263382539942332, 4723.79)
((646, 331), (646, 331), 52347.836, 58221.0)
('Error: ', tensor(34165.5117, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7648730235632248, 0.5993216050567136)
('Val: AUC, AUPR, Erros: ', 0.7352356361149305, 0.5457495444091485, 4430.4077)
('Test: AUC, AUPR, Erros: ', 0.7089240207214832, 0.5264507837941542, 4713.1206)
((646, 331), (646, 331), 51383.305, 58221.0)
('Error: ', tensor(33785.0312, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7734962981515171, 0.6117860487025574)
('Val: AUC, AUPR, Erros: ', 0.7382943070215072, 0.5464997600232321, 4427.4043)
('Test: AUC, AUPR, Erros: ', 0.7081554818557164, 0.5248204274351104, 4725.689)
((646, 331), (646, 331), 48443.63, 58221.0)
('Error: ', tensor(33585.8008, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7839576029446609, 0.6254430422084655)
('Val: AUC, AUPR, Erros: ', 0.7388249383514573, 0.541211471733314, 4464.2793)
('Test: AUC, AUPR, Erros: ', 0.7023167097938282, 0.5203539396641667, 4784.969)
((646, 331), (646, 331), 49849.66, 58221.0)
('Error: ', tensor(32914.0547, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7930030812407545, 0.6368120647782167)
('Val: AUC, AUPR, Erros: ', 0.7374844408053509, 0.5335822675525115, 4475.1187)
('Test: AUC, AUPR, Erros: ', 0.6979615215279158, 0.5145761068088472, 4792.7314)
((646, 331), (646, 331), 50804.227, 58221.0)
('Error: ', tensor(32378.5352, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.800433649178714, 0.6470996602404337)
('Val: AUC, AUPR, Erros: ', 0.7353304944736723, 0.5278053467220511, 4493.081)
('Test: AUC, AUPR, Erros: ', 0.6881785931423047, 0.5063230967420379, 4830.8945)
((646, 331), (646, 331), 51383.42, 58221.0)
('Error: ', tensor(31971.9766, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8064506481446605, 0.6554884520036128)
('Val: AUC, AUPR, Erros: ', 0.7321172061078336, 0.5205484726517228, 4522.585)
('Test: AUC, AUPR, Erros: ', 0.6864503062785973, 0.5017573604182636, 4850.604)
((646, 331), (646, 331), 52467.992, 58221.0)
('Error: ', tensor(31566.8477, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.811122531856539, 0.6623775447931441)
('Val: AUC, AUPR, Erros: ', 0.7294435320724086, 0.5181572519992376, 4533.3267)
('Test: AUC, AUPR, Erros: ', 0.6825137860250867, 0.4969405797820329, 4872.3296)
((646, 331), (646, 331), 52786.758, 58221.0)
('Error: ', tensor(31292.0664, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8148028877120697, 0.6679033903196976)
('Val: AUC, AUPR, Erros: ', 0.7239538663429319, 0.5124263520637587, 4563.7905)
('Test: AUC, AUPR, Erros: ', 0.6803605316500777, 0.4949417895211524, 4885.116)
((646, 331), (646, 331), 53325.348, 58221.0)
('Error: ', tensor(31042.0430, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8175749669693604, 0.6724841852319701)
('Val: AUC, AUPR, Erros: ', 0.7201354249509893, 0.5097821361309572, 4580.971)
('Test: AUC, AUPR, Erros: ', 0.6813558973739793, 0.491887154515702, 4898.5625)
Train: 0.7735 0.6118
Test: 0.7082 0.5248
[0.5601434690227153, 0.5486210998489173, 0.5523002468917123, 0.5561349550858052, 0.56329268058423, 0.5630609080633994, 0.5643968798914594, 0.5733324551068127, 0.5799505117004182, 0.5801697543567834, 0.581617884373363, 0.5839578310106021, 0.5859873416492875, 0.5879260935655036, 0.5941682874067737, 0.5967252279244438, 0.6017360881300231, 0.6065215963716737, 0.6101483773469395, 0.6121499635662835, 0.6126878794399543, 0.615486646699838, 0.616642026440953, 0.6185099488294866, 0.620012504769251, 0.6261774223399453, 0.6282547340718754, 0.6287121471208217, 0.6309238942206039, 0.6321460385288095, 0.6392486278144913, 0.6421425962392944, 0.646549665714042, 0.6499239608214806, 0.6543088771494965, 0.6557061888528588, 0.6564517679618713, 0.6604902494223779, 0.6604902494223779, 0.6629157540648908, 0.6638460080879747, 0.6666365428675736, 0.6684615633608493, 0.6744751945368197, 0.6778958532809946, 0.6778958532809946, 0.6785643094848108, 0.6785643094848108, 0.681281786809864, 0.6832730071179206, 0.6832730071179206, 0.6864511347673778, 0.6864511347673778, 0.6864511347673778, 0.6864511347673778, 0.6864511347673778, 0.6864511347673778, 0.6864511347673778, 0.6897471365828856, 0.6897471365828856, 0.6914556327493728, 0.693577167759605, 0.693577167759605, 0.693577167759605, 0.693577167759605, 0.693577167759605, 0.693577167759605, 0.6955386347374716, 0.6955386347374716, 0.6955386347374716, 0.7028018254858655, 0.7028018254858655, 0.7028018254858655, 0.7053165842149786, 0.7053165842149786, 0.7053165842149786, 0.7053165842149786, 0.7053165842149786, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164, 0.7081554818557164]
[0.15018746453481419, 0.15313074230374626, 0.16505718272391692, 0.17413258383214136, 0.18666137965509833, 0.18806292053588686, 0.18968368161180288, 0.20368465480947678, 0.21495953061912254, 0.21534868362360704, 0.2181781332544743, 0.22369730872875054, 0.23032004751519222, 0.23403057346102887, 0.2444083033873434, 0.24879201962752528, 0.2585529988134204, 0.26818023104365374, 0.27461192606763135, 0.2776065951664852, 0.278913045657659, 0.2847544807661129, 0.2868410556874567, 0.2895956529553205, 0.2926893125475897, 0.3074847354599348, 0.3118460199244272, 0.3130463515126344, 0.31849577494264425, 0.3224885534636676, 0.34001291045316273, 0.34613239845071275, 0.3566244167837812, 0.36500334604560003, 0.37510736208630946, 0.3777233127873464, 0.37833114669854445, 0.38659760447547353, 0.38659760447547353, 0.3917697080287249, 0.3934214345012695, 0.40131057386458613, 0.4075228258632069, 0.42421521312036653, 0.43322211537186756, 0.43322211537186756, 0.4339654347434699, 0.4339654347434699, 0.44043696356233775, 0.44579023750530183, 0.44579023750530183, 0.45426121331680613, 0.45426121331680613, 0.45426121331680613, 0.45426121331680613, 0.45426121331680613, 0.45426121331680613, 0.45426121331680613, 0.46361336877423864, 0.46361336877423864, 0.46825909712343067, 0.47529486530060194, 0.47529486530060194, 0.47529486530060194, 0.47529486530060194, 0.47529486530060194, 0.47529486530060194, 0.4812751698834094, 0.4812751698834094, 0.4812751698834094, 0.5063161917965617, 0.5063161917965617, 0.5063161917965617, 0.514784653055777, 0.514784653055777, 0.514784653055777, 0.514784653055777, 0.514784653055777, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104, 0.5248204274351104]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19946.0)
('VALIDATE SUM PROTEIN TEST: ', 2286.0)
((646, 331), (646, 331), 48388.766, 58507.0)
('Error: ', tensor(45192.6758, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.43773013492575646, 0.24049080582585547)
('Val: AUC, AUPR, Erros: ', 0.46889197471066935, 0.2603463878144438, 5493.151)
('Test: AUC, AUPR, Erros: ', 0.478662553201333, 0.24907073768740337, 5527.795)
((646, 331), (646, 331), 66872.41, 58507.0)
('Error: ', tensor(40453.2539, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6748560906261702, 0.43935692485905287)
('Val: AUC, AUPR, Erros: ', 0.6564414587140809, 0.4086160729614341, 5084.6357)
('Test: AUC, AUPR, Erros: ', 0.6590417340492103, 0.4161995406638577, 5062.498)
((646, 331), (646, 331), 68088.01, 58507.0)
('Error: ', tensor(39117.6641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7037891867947839, 0.49482296248647395)
('Val: AUC, AUPR, Erros: ', 0.6930439394951347, 0.4755692120585787, 4912.6646)
('Test: AUC, AUPR, Erros: ', 0.6895541836444785, 0.4688981441026522, 4907.6616)
((646, 331), (646, 331), 69844.83, 58507.0)
('Error: ', tensor(37678.1641, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7196413396006027, 0.5261823180764775)
('Val: AUC, AUPR, Erros: ', 0.7044550651458262, 0.5008765824346256, 4764.9766)
('Test: AUC, AUPR, Erros: ', 0.7125654274269664, 0.5086104995972491, 4726.7173)
((646, 331), (646, 331), 68892.12, 58507.0)
('Error: ', tensor(36678.6875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7268700995839683, 0.5403725697307495)
('Val: AUC, AUPR, Erros: ', 0.7069337890323443, 0.5070334950372848, 4690.1333)
('Test: AUC, AUPR, Erros: ', 0.7132032807009119, 0.5133711431826717, 4646.921)
((646, 331), (646, 331), 66074.04, 58507.0)
('Error: ', tensor(36014.8750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7326571953865764, 0.5498249696368672)
('Val: AUC, AUPR, Erros: ', 0.7168496469958867, 0.5271500065800266, 4570.838)
('Test: AUC, AUPR, Erros: ', 0.7191807499324875, 0.5242804809344116, 4558.061)
((646, 331), (646, 331), 62759.746, 58507.0)
('Error: ', tensor(35551.3047, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7378833873172028, 0.5574821345947333)
('Val: AUC, AUPR, Erros: ', 0.7155158036096005, 0.5237859999919976, 4554.155)
('Test: AUC, AUPR, Erros: ', 0.7266959848177867, 0.5332548067670985, 4488.086)
((646, 331), (646, 331), 64279.688, 58507.0)
('Error: ', tensor(35236.1172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7453486535923127, 0.5670630207490005)
('Val: AUC, AUPR, Erros: ', 0.721035795008985, 0.5310361952523743, 4542.0195)
('Test: AUC, AUPR, Erros: ', 0.724282070098332, 0.5312573494723121, 4515.292)
((646, 331), (646, 331), 64666.1, 58507.0)
('Error: ', tensor(35090.2188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7479818525068648, 0.5716927789766973)
('Val: AUC, AUPR, Erros: ', 0.7231025582202774, 0.533323248713834, 4528.3745)
('Test: AUC, AUPR, Erros: ', 0.7296774798793547, 0.5374144816813402, 4490.1997)
((646, 331), (646, 331), 63392.344, 58507.0)
('Error: ', tensor(34852.8438, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.751166093067478, 0.5765845372364058)
('Val: AUC, AUPR, Erros: ', 0.7224053044544685, 0.5315634411542633, 4526.534)
('Test: AUC, AUPR, Erros: ', 0.7298702830636643, 0.5373990304260445, 4476.679)
((646, 331), (646, 331), 64396.797, 58507.0)
('Error: ', tensor(34597.5156, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7559096447481383, 0.5847435324655321)
('Val: AUC, AUPR, Erros: ', 0.7254927538527164, 0.5370747540817129, 4516.07)
('Test: AUC, AUPR, Erros: ', 0.7319674717154904, 0.5404455950770313, 4473.072)
((646, 331), (646, 331), 65851.04, 58507.0)
('Error: ', tensor(34433.1328, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7605103020238855, 0.5904329369488828)
('Val: AUC, AUPR, Erros: ', 0.7272141613390137, 0.5375723638865972, 4527.488)
('Test: AUC, AUPR, Erros: ', 0.7317977585631418, 0.5394815389295313, 4495.257)
((646, 331), (646, 331), 64091.242, 58507.0)
('Error: ', tensor(34023.2188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7658327823390062, 0.5984031321963352)
('Val: AUC, AUPR, Erros: ', 0.7338770093313025, 0.5450701706230583, 4469.533)
('Test: AUC, AUPR, Erros: ', 0.7350468336436479, 0.5424030381053703, 4460.999)
((646, 331), (646, 331), 65032.125, 58507.0)
('Error: ', tensor(33754.8906, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7710917181185956, 0.6061720125887372)
('Val: AUC, AUPR, Erros: ', 0.7322605230407766, 0.5418473956903739, 4501.6484)
('Test: AUC, AUPR, Erros: ', 0.736868823558194, 0.5437346045901581, 4463.8105)
((646, 331), (646, 331), 66502.27, 58507.0)
('Error: ', tensor(33486.2539, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7770431238838634, 0.6145685870549076)
('Val: AUC, AUPR, Erros: ', 0.7363159202715818, 0.5465887830824393, 4495.471)
('Test: AUC, AUPR, Erros: ', 0.7355292012787993, 0.5406118514322422, 4499.37)
((646, 331), (646, 331), 66143.28, 58507.0)
('Error: ', tensor(33143.4688, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7824312577887044, 0.6223418600299673)
('Val: AUC, AUPR, Erros: ', 0.7367490258247603, 0.5443315966740905, 4501.7324)
('Test: AUC, AUPR, Erros: ', 0.7343290688732704, 0.5394245081881325, 4506.526)
((646, 331), (646, 331), 66573.11, 58507.0)
('Error: ', tensor(32848.1406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7879993443995894, 0.6297359081039702)
('Val: AUC, AUPR, Erros: ', 0.7408882276797804, 0.5514573528490438, 4477.6006)
('Test: AUC, AUPR, Erros: ', 0.7340374491402712, 0.5386570611452596, 4516.342)
Train: 0.7658 0.5984
Test: 0.7350 0.5424
[0.570439202875992, 0.5704074699637811, 0.567650474926797, 0.5676174772657251, 0.5728853848149084, 0.5766861383615455, 0.5791658864945053, 0.5862127490094466, 0.593070266029568, 0.5947904852696911, 0.603483872532287, 0.6049113680623235, 0.6094273674982581, 0.6094732718845206, 0.6159583999763496, 0.6214216684324754, 0.6261723855161008, 0.6318046312085943, 0.6359049772645838, 0.6403496830214516, 0.6415343204721916, 0.6470419737237678, 0.6493869661247528, 0.6530196877010676, 0.6547042904132677, 0.6599488745645874, 0.6617563744915982, 0.6627603294793123, 0.6646098462032451, 0.6654200411916753, 0.6705910580073545, 0.6734227375874309, 0.6772183948890567, 0.6805452176855877, 0.6845170495365801, 0.6867367523546895, 0.6874890794475436, 0.6910519740695629, 0.6910519740695629, 0.6935141525869135, 0.6943983178889186, 0.696519214562766, 0.697933165686161, 0.7032483455200433, 0.7079455323469986, 0.7079455323469986, 0.7087791475487163, 0.7087791475487163, 0.7109420383505913, 0.7124704538130087, 0.7124704538130087, 0.7142285126103379, 0.7142285126103379, 0.7142285126103379, 0.7142285126103379, 0.7142285126103379, 0.7142285126103379, 0.7142285126103379, 0.7180518603713311, 0.7180518603713311, 0.7192602656806726, 0.721422538847227, 0.721422538847227, 0.721422538847227, 0.721422538847227, 0.721422538847227, 0.721422538847227, 0.7235347313617511, 0.7235347313617511, 0.7235347313617511, 0.7303115101727824, 0.7303115101727824, 0.7303115101727824, 0.7326309867819667, 0.7326309867819667, 0.7326309867819667, 0.7326309867819667, 0.7326309867819667, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479, 0.7350468336436479]
[0.14328108419545685, 0.14772312182491143, 0.14780471956036412, 0.14971293739855845, 0.15812811038971097, 0.16377763170639592, 0.16740933847931078, 0.178539001581192, 0.18899922500209054, 0.19481822350271655, 0.20858706939093757, 0.20914426372769196, 0.2164219438844226, 0.2165005804935378, 0.22944557830097723, 0.2403520732468158, 0.24842837944147508, 0.2597979375133501, 0.26813117826147126, 0.277855615025588, 0.2805835347496278, 0.2913268574633409, 0.29647929796812467, 0.30312764874120657, 0.307587602922772, 0.3204791921800431, 0.3231218980638313, 0.3252760361369361, 0.3304211403663698, 0.33228673452032675, 0.34481085786293353, 0.3526667054912783, 0.3617201047871217, 0.3698551641713346, 0.38102986112147275, 0.38603104022857326, 0.3881254318361713, 0.39644060838123374, 0.39644060838123374, 0.40530896494586305, 0.40768670368065335, 0.41312024208295567, 0.4176425316125014, 0.4334673080353573, 0.4489305397103114, 0.4489305397103114, 0.4506676767770448, 0.4506676767770448, 0.4566264675036812, 0.4614356802083338, 0.4614356802083338, 0.46449928854961836, 0.46449928854961836, 0.46449928854961836, 0.46449928854961836, 0.46449928854961836, 0.46449928854961836, 0.46449928854961836, 0.47959991352038994, 0.47959991352038994, 0.482606299272221, 0.49083180082613215, 0.49083180082613215, 0.49083180082613215, 0.49083180082613215, 0.49083180082613215, 0.49083180082613215, 0.49905954843676625, 0.49905954843676625, 0.49905954843676625, 0.5258012433109946, 0.5258012433109946, 0.5258012433109946, 0.5337014071591399, 0.5337014071591399, 0.5337014071591399, 0.5337014071591399, 0.5337014071591399, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703, 0.5424030381053703]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_3
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (81, 2666), (647, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19714.0)
('VALIDATE SUM PROTEIN TEST: ', 2411.0)
((647, 331), (647, 331), 43347.258, 58338.0)
('Error: ', tensor(44687.4297, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.45426090261451024, 0.2462092529712841)
('Val: AUC, AUPR, Erros: ', 0.4638652042382732, 0.2530229209318394, 5589.419)
('Test: AUC, AUPR, Erros: ', 0.4815928140759896, 0.2636929745903257, 5473.759)
((647, 331), (647, 331), 59681.07, 58338.0)
('Error: ', tensor(41136.3750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6198247708957676, 0.3763189018620717)
('Val: AUC, AUPR, Erros: ', 0.6001498888417625, 0.34409744918575214, 5204.2915)
('Test: AUC, AUPR, Erros: ', 0.6172312936437747, 0.3635064404079279, 5118.091)
((647, 331), (647, 331), 58589.043, 58338.0)
('Error: ', tensor(40275.3281, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6715636199985198, 0.44215768960565216)
('Val: AUC, AUPR, Erros: ', 0.6498163011508746, 0.4065849624210615, 5086.496)
('Test: AUC, AUPR, Erros: ', 0.662002098098392, 0.41652824722711235, 5023.2153)
((647, 331), (647, 331), 57161.562, 58338.0)
('Error: ', tensor(39434.7969, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7016899931014284, 0.48921038480161066)
('Val: AUC, AUPR, Erros: ', 0.6815343691541489, 0.46709573165721174, 4987.374)
('Test: AUC, AUPR, Erros: ', 0.6867259801723036, 0.4608059010450387, 4935.623)
((647, 331), (647, 331), 55166.81, 58338.0)
('Error: ', tensor(38608.6758, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7155266555400395, 0.5117887029811812)
('Val: AUC, AUPR, Erros: ', 0.6999040586639174, 0.5011345896895146, 4888.3213)
('Test: AUC, AUPR, Erros: ', 0.6979515573959807, 0.48463220946913965, 4846.3086)
((647, 331), (647, 331), 53514.434, 58338.0)
('Error: ', tensor(37783.8008, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7236740295272813, 0.5271397798566386)
('Val: AUC, AUPR, Erros: ', 0.7094546778529989, 0.5174564845256915, 4797.4546)
('Test: AUC, AUPR, Erros: ', 0.703070992059504, 0.4977429252512602, 4761.428)
((647, 331), (647, 331), 53821.418, 58338.0)
('Error: ', tensor(36902.0781, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7301780021880434, 0.5384206838458392)
('Val: AUC, AUPR, Erros: ', 0.7163341838895906, 0.5298482902305753, 4695.876)
('Test: AUC, AUPR, Erros: ', 0.7093740020668482, 0.5085849226978547, 4667.652)
((647, 331), (647, 331), 54359.55, 58338.0)
('Error: ', tensor(36227.9219, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7353534552980164, 0.5479403559144906)
('Val: AUC, AUPR, Erros: ', 0.7221404455732993, 0.539198418495195, 4615.02)
('Test: AUC, AUPR, Erros: ', 0.7135534096193541, 0.5166955519065244, 4599.6313)
((647, 331), (647, 331), 55149.13, 58338.0)
('Error: ', tensor(35738.0977, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7395488740242012, 0.5542995721257604)
('Val: AUC, AUPR, Erros: ', 0.7262420739398519, 0.5460812241205497, 4557.305)
('Test: AUC, AUPR, Erros: ', 0.716376827568856, 0.5218120890338801, 4555.3237)
((647, 331), (647, 331), 55974.47, 58338.0)
('Error: ', tensor(35368.4688, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7440409679885261, 0.560758290277663)
('Val: AUC, AUPR, Erros: ', 0.7288785794864232, 0.5498415549724316, 4521.7544)
('Test: AUC, AUPR, Erros: ', 0.7187277905361782, 0.5244257117104536, 4530.951)
((647, 331), (647, 331), 55986.4, 58338.0)
('Error: ', tensor(35121.4375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7480814464129872, 0.5664652565827792)
('Val: AUC, AUPR, Erros: ', 0.7298425439552656, 0.5522751643125402, 4506.059)
('Test: AUC, AUPR, Erros: ', 0.7209607122930956, 0.5270495933211694, 4515.644)
((647, 331), (647, 331), 56500.617, 58338.0)
('Error: ', tensor(34853.4375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7523585822133589, 0.5728237713084994)
('Val: AUC, AUPR, Erros: ', 0.7314397306215864, 0.5544511565895233, 4490.1533)
('Test: AUC, AUPR, Erros: ', 0.7244735254451644, 0.5315573098858204, 4492.6)
((647, 331), (647, 331), 55598.156, 58338.0)
('Error: ', tensor(34657.6406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7566060514579956, 0.5791896166681493)
('Val: AUC, AUPR, Erros: ', 0.7329926923132155, 0.5569097989277085, 4485.4614)
('Test: AUC, AUPR, Erros: ', 0.726593419762102, 0.5338902373011167, 4482.415)
((647, 331), (647, 331), 54398.945, 58338.0)
('Error: ', tensor(34500.5156, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7606647901043789, 0.5854827484774151)
('Val: AUC, AUPR, Erros: ', 0.7342292187685933, 0.5592941861139739, 4485.4526)
('Test: AUC, AUPR, Erros: ', 0.7276638685935567, 0.5352239264364637, 4480.4155)
((647, 331), (647, 331), 54275.465, 58338.0)
('Error: ', tensor(34284.7461, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7645387968681225, 0.5915450526049315)
('Val: AUC, AUPR, Erros: ', 0.7348936698805589, 0.5602899626215707, 4480.092)
('Test: AUC, AUPR, Erros: ', 0.7305248491308004, 0.5387644831611625, 4465.358)
((647, 331), (647, 331), 53820.45, 58338.0)
('Error: ', tensor(34091.2188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7683391790916511, 0.5976209576672642)
('Val: AUC, AUPR, Erros: ', 0.7353536835151244, 0.5612831514664544, 4478.7505)
('Test: AUC, AUPR, Erros: ', 0.7316422051990386, 0.5401246442872678, 4459.8315)
((647, 331), (647, 331), 54815.07, 58338.0)
('Error: ', tensor(33782.3672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7723434068142327, 0.6035952920957193)
('Val: AUC, AUPR, Erros: ', 0.7359609278033044, 0.5619330671688124, 4463.91)
('Test: AUC, AUPR, Erros: ', 0.7335525684947913, 0.5418495190743733, 4445.4395)
Train: 0.7723 0.6036
Test: 0.7336 0.5418
[0.5768793229806644, 0.5755080910536763, 0.5892779942595511, 0.5959544391111399, 0.5987361133894324, 0.5996652216359799, 0.5986153534273219, 0.604897030310348, 0.6096489051734216, 0.6101610858917581, 0.613965757973771, 0.6160231651515904, 0.6186886545401578, 0.6199868536719693, 0.6232168519853062, 0.6262479330845343, 0.6292858814866361, 0.6322712077828521, 0.6363733369795495, 0.6409473595505637, 0.6415986846236168, 0.6443152095947139, 0.6471764521418732, 0.6516867057337024, 0.6532069509867565, 0.657954492021311, 0.6599923535828789, 0.6604120983198675, 0.661993814015959, 0.6624657874779486, 0.6679579186263522, 0.6708276800892689, 0.675766123887714, 0.6782703748187893, 0.6827587721778755, 0.6838413217698635, 0.6850164893797333, 0.6890065957743376, 0.6890065957743376, 0.690984634480526, 0.6923708596766406, 0.6947266093854318, 0.6957612013016823, 0.700158222801519, 0.7033080456152895, 0.7033080456152895, 0.7044096952187745, 0.7044096952187745, 0.7075344318534555, 0.708487316528484, 0.708487316528484, 0.7116112997278189, 0.7116112997278189, 0.7116112997278189, 0.7116112997278189, 0.7116112997278189, 0.7116112997278189, 0.7116112997278189, 0.7152306243310853, 0.7152306243310853, 0.7172050253462355, 0.7190961368272955, 0.7190961368272955, 0.7190961368272955, 0.7190961368272955, 0.7190961368272955, 0.7190961368272955, 0.7213117708787004, 0.7213117708787004, 0.7213117708787004, 0.7283850137696164, 0.7283850137696164, 0.7283850137696164, 0.7309574373936232, 0.7309574373936232, 0.7309574373936232, 0.7309574373936232, 0.7309574373936232, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913, 0.7335525684947913]
[0.1742726006008226, 0.15850895773560503, 0.1773819187490689, 0.19042949041000892, 0.18961886238582182, 0.19454331759775223, 0.19527760039540054, 0.21631238936743072, 0.22796286375746608, 0.22660336944062892, 0.23459996736366226, 0.241030019259676, 0.24435978216765633, 0.24702523180958055, 0.25546944641945507, 0.2625577218412325, 0.26900357709208544, 0.27670629238005934, 0.28549020758337657, 0.2949949759260275, 0.29553267688840634, 0.2989511081147554, 0.30515706373337526, 0.31789102215907045, 0.3206631706002105, 0.33131921280465393, 0.33566640851288826, 0.3369670407146095, 0.34013032383006603, 0.33999246627524016, 0.3542520104162692, 0.3624469493296175, 0.37436248645913095, 0.38054468672580805, 0.3943390049599942, 0.3955087800953374, 0.3986363574848639, 0.4095846419524008, 0.4095846419524008, 0.413829235368603, 0.41753644769436515, 0.42414197653914465, 0.4265989060433401, 0.4359247653884438, 0.4455025828422338, 0.4455025828422338, 0.44834913609248694, 0.44834913609248694, 0.4575694340892016, 0.4602563572585523, 0.4602563572585523, 0.4681141807534268, 0.4681141807534268, 0.4681141807534268, 0.4681141807534268, 0.4681141807534268, 0.4681141807534268, 0.4681141807534268, 0.4789215780654946, 0.4789215780654946, 0.48578502934381795, 0.49205980069853916, 0.49205980069853916, 0.49205980069853916, 0.49205980069853916, 0.49205980069853916, 0.49205980069853916, 0.5002615888225418, 0.5002615888225418, 0.5002615888225418, 0.5239179181761999, 0.5239179181761999, 0.5239179181761999, 0.53268566050981, 0.53268566050981, 0.53268566050981, 0.53268566050981, 0.53268566050981, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733, 0.5418495190743733]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_4
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((647, 2666), (80, 2666), (647, 331), (80, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19824.0)
('VALIDATE SUM PROTEIN TEST: ', 2518.0)
((647, 331), (647, 331), 93472.195, 58099.0)
('Error: ', tensor(52209.1719, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.44605131285159694, 0.24352998299709006)
('Val: AUC, AUPR, Erros: ', 0.42684471205422236, 0.23663608803510827, 6603.0684)
('Test: AUC, AUPR, Erros: ', 0.4522906138765422, 0.24685530892157506, 6792.551)
((647, 331), (647, 331), 60509.12, 58099.0)
('Error: ', tensor(41474.7266, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6052756262741368, 0.3586862994263261)
('Val: AUC, AUPR, Erros: ', 0.585072297714428, 0.3368998976734784, 5300.3726)
('Test: AUC, AUPR, Erros: ', 0.5846347104133522, 0.334580332426905, 5237.85)
((647, 331), (647, 331), 69143.55, 58099.0)
('Error: ', tensor(39454.9922, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.706917009093226, 0.5164015554508752)
('Val: AUC, AUPR, Erros: ', 0.7027535345268832, 0.5203992854580547, 5010.0513)
('Test: AUC, AUPR, Erros: ', 0.6945864317905547, 0.5160391454859458, 4965.229)
((647, 331), (647, 331), 71829.61, 58099.0)
('Error: ', tensor(37603.7266, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7233417951026879, 0.5376370644144235)
('Val: AUC, AUPR, Erros: ', 0.7197495050882976, 0.5429329107464261, 4775.1924)
('Test: AUC, AUPR, Erros: ', 0.7164912735008506, 0.5434833341308767, 4709.7)
((647, 331), (647, 331), 71919.66, 58099.0)
('Error: ', tensor(36518.3242, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.732927418175257, 0.5484359208827503)
('Val: AUC, AUPR, Erros: ', 0.7280407530601538, 0.5511886030464758, 4647.227)
('Test: AUC, AUPR, Erros: ', 0.7255767559501687, 0.5535240043845873, 4567.215)
((647, 331), (647, 331), 66530.94, 58099.0)
('Error: ', tensor(35483.3047, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7416806985732387, 0.5602919332313254)
('Val: AUC, AUPR, Erros: ', 0.7318027136921033, 0.5548585678332293, 4557.29)
('Test: AUC, AUPR, Erros: ', 0.7313234304491467, 0.5595276078317339, 4471.249)
((647, 331), (647, 331), 67459.46, 58099.0)
('Error: ', tensor(35052.1953, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7512884486581968, 0.5731822663028705)
('Val: AUC, AUPR, Erros: ', 0.7360663779397438, 0.5592063404978762, 4542.001)
('Test: AUC, AUPR, Erros: ', 0.7339586356791422, 0.5624640403862609, 4464.8906)
((647, 331), (647, 331), 67571.0, 58099.0)
('Error: ', tensor(34511.2930, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7603784017382101, 0.5880102654607)
('Val: AUC, AUPR, Erros: ', 0.7351573259496488, 0.5574947863429116, 4558.489)
('Test: AUC, AUPR, Erros: ', 0.7356399983034776, 0.5640534680047172, 4459.858)
((647, 331), (647, 331), 68401.914, 58099.0)
('Error: ', tensor(33860.9297, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7724368277863317, 0.6066572166528709)
('Val: AUC, AUPR, Erros: ', 0.7350833915193544, 0.5546352778088016, 4583.9893)
('Test: AUC, AUPR, Erros: ', 0.7382259478257992, 0.5657135884597708, 4461.87)
((647, 331), (647, 331), 69063.805, 58099.0)
('Error: ', tensor(33191.2031, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7849116914725742, 0.6250466015360826)
('Val: AUC, AUPR, Erros: ', 0.7346521553032284, 0.5483596064655771, 4634.432)
('Test: AUC, AUPR, Erros: ', 0.7413092222523047, 0.5661902117065234, 4463.414)
((647, 331), (647, 331), 68434.81, 58099.0)
('Error: ', tensor(32479.2715, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7964878074584805, 0.6422486657014559)
('Val: AUC, AUPR, Erros: ', 0.729073217476076, 0.5296098683810166, 4752.61)
('Test: AUC, AUPR, Erros: ', 0.7442373149090838, 0.5662276931780678, 4448.876)
((647, 331), (647, 331), 67655.48, 58099.0)
('Error: ', tensor(31887.0918, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8055824177975045, 0.655725277081921)
('Val: AUC, AUPR, Erros: ', 0.7225282678109828, 0.5060088967008889, 4925.085)
('Test: AUC, AUPR, Erros: ', 0.7454916478854412, 0.5664169129695372, 4440.2295)
((647, 331), (647, 331), 66235.85, 58099.0)
('Error: ', tensor(31388.4883, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.811086652131648, 0.6632410697103789)
('Val: AUC, AUPR, Erros: ', 0.7199552456258137, 0.4994206233972285, 4953.355)
('Test: AUC, AUPR, Erros: ', 0.746221455892846, 0.5660776571356183, 4431.3535)
((647, 331), (647, 331), 66883.91, 58099.0)
('Error: ', tensor(31136.1211, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8152284437873037, 0.6691619556445447)
('Val: AUC, AUPR, Erros: ', 0.7165182983225175, 0.4929174975349124, 5013.3286)
('Test: AUC, AUPR, Erros: ', 0.7465392056567834, 0.5654033890843955, 4445.061)
((647, 331), (647, 331), 65673.72, 58099.0)
('Error: ', tensor(30796.8516, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8184004134911453, 0.674188084896322)
('Val: AUC, AUPR, Erros: ', 0.7137927579885519, 0.4877148417227444, 5026.7886)
('Test: AUC, AUPR, Erros: ', 0.7461222161581047, 0.5625068554695986, 4455.8726)
((647, 331), (647, 331), 65885.125, 58099.0)
('Error: ', tensor(30587.1309, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8210066614159857, 0.6785500954402093)
('Val: AUC, AUPR, Erros: ', 0.711306272890377, 0.4853887241676593, 5048.539)
('Test: AUC, AUPR, Erros: ', 0.7451961456143956, 0.559520231179791, 4479.692)
((647, 331), (647, 331), 66360.734, 58099.0)
('Error: ', tensor(30405.4570, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.823516646747942, 0.6826230446939285)
('Val: AUC, AUPR, Erros: ', 0.7095171810233265, 0.48225833038219185, 5088.829)
('Test: AUC, AUPR, Erros: ', 0.7442389562923024, 0.5569470939060367, 4510.2803)
Train: 0.7513 0.5732
Test: 0.7340 0.5625
[0.5034196147284525, 0.5147908281564212, 0.5315721517624953, 0.5375862173846322, 0.5435948576097858, 0.5475142263326677, 0.55619966996573, 0.5645503450865542, 0.5738298886933391, 0.5754923017618206, 0.5811093888104693, 0.585435283956879, 0.590105215774343, 0.5932129593559173, 0.6023995919761341, 0.6032009379690875, 0.6105606391146763, 0.6168323298719899, 0.6220717996092917, 0.62640311198368, 0.6275657963286487, 0.6320529838382507, 0.6359619769679217, 0.6410982982856674, 0.6436023878058283, 0.6500688439354895, 0.6522881694561621, 0.6534162330452757, 0.6549921251605312, 0.6562762473876272, 0.6627963356387881, 0.6662995623111804, 0.6709455531431784, 0.6738173189209663, 0.6779940933965835, 0.6800551334555389, 0.6816186578340805, 0.6849761782282625, 0.6849761782282625, 0.6875432918276441, 0.6888207170171549, 0.6917178534430607, 0.693370672729255, 0.6993944010922643, 0.703248267738172, 0.703248267738172, 0.7044488684958549, 0.7044488684958549, 0.7076671929064305, 0.7093525988323388, 0.7093525988323388, 0.7121104238139068, 0.7121104238139068, 0.7121104238139068, 0.7121104238139068, 0.7121104238139068, 0.7121104238139068, 0.7121104238139068, 0.7155635342065846, 0.7155635342065846, 0.7175341494039364, 0.7193938221075085, 0.7193938221075085, 0.7193938221075085, 0.7193938221075085, 0.7193938221075085, 0.7193938221075085, 0.7217160793048374, 0.7217160793048374, 0.7217160793048374, 0.7293468238163417, 0.7293468238163417, 0.7293468238163417, 0.7314212123850222, 0.7314212123850222, 0.7314212123850222, 0.7314212123850222, 0.7314212123850222, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422, 0.7339586356791422]
[0.12591950603249974, 0.1233654226490885, 0.13659543194195212, 0.14627897510274035, 0.15648142818421917, 0.16091601471934985, 0.17003410713399789, 0.18251452282273073, 0.19613756587352232, 0.19959583320477337, 0.20938733480998592, 0.21699570297930673, 0.22421547538627212, 0.22703582083490914, 0.24142860287524773, 0.2371597943774698, 0.2491327280726278, 0.26079599429895395, 0.2703163596124285, 0.2772705525774808, 0.2819932202686839, 0.2924579347781806, 0.300527655112711, 0.3110663466984871, 0.31726494993552407, 0.33026587416062686, 0.334477613601568, 0.33723212869259106, 0.3398118253942546, 0.3436712573246058, 0.3599583007747408, 0.3675231335871092, 0.3779199532096915, 0.3834507029786544, 0.3921908563125953, 0.3976496890608921, 0.4020112403799587, 0.41103866502560993, 0.41103866502560993, 0.41917180853714664, 0.4223340769050973, 0.4303145306009408, 0.43571154134210005, 0.4533762407085654, 0.46449986881902894, 0.46449986881902894, 0.46739035401903184, 0.46739035401903184, 0.4777319293465464, 0.48281757514362145, 0.48281757514362145, 0.4910891628802958, 0.4910891628802958, 0.4910891628802958, 0.4910891628802958, 0.4910891628802958, 0.4910891628802958, 0.4910891628802958, 0.5011586967412571, 0.5011586967412571, 0.5072164477801384, 0.5132695067301132, 0.5132695067301132, 0.5132695067301132, 0.5132695067301132, 0.5132695067301132, 0.5132695067301132, 0.5205926194161123, 0.5205926194161123, 0.5205926194161123, 0.5478588372468041, 0.5478588372468041, 0.5478588372468041, 0.5535755669830446, 0.5535755669830446, 0.5535755669830446, 0.5535755669830446, 0.5535755669830446, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609, 0.5624640403862609]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_5
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 808, 331)
((646, 2666), (81, 2666), (646, 331), (81, 331))
('VALIDATE SUM PROTEIN TRAIN: ', 19389.0)
('VALIDATE SUM PROTEIN TEST: ', 2301.0)
((646, 331), (646, 331), 60280.617, 58366.0)
('Error: ', tensor(45630.6211, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.46155291945921983, 0.2521482836635307)
('Val: AUC, AUPR, Erros: ', 0.4231717182685321, 0.22649872214992253, 5725.409)
('Test: AUC, AUPR, Erros: ', 0.44171074349059436, 0.24609535283464407, 5825.675)
((646, 331), (646, 331), 62861.277, 58366.0)
('Error: ', tensor(41065.3750, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6360270695342295, 0.40673094668663445)
('Val: AUC, AUPR, Erros: ', 0.6106707093132128, 0.3657036110213171, 5104.32)
('Test: AUC, AUPR, Erros: ', 0.6283391805037712, 0.40193302252200647, 5215.2266)
((646, 331), (646, 331), 67113.75, 58366.0)
('Error: ', tensor(39578.7812, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.6971000852193006, 0.49014216732533233)
('Val: AUC, AUPR, Erros: ', 0.6926586401986188, 0.4774992095233591, 4897.688)
('Test: AUC, AUPR, Erros: ', 0.6948988099930142, 0.49335075363022945, 5014.1255)
((646, 331), (646, 331), 71892.19, 58366.0)
('Error: ', tensor(38371.0820, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7178748108590755, 0.5242849399820079)
('Val: AUC, AUPR, Erros: ', 0.7090953069954518, 0.5054052459208586, 4794.0083)
('Test: AUC, AUPR, Erros: ', 0.7137086963614983, 0.5246176956743409, 4866.109)
((646, 331), (646, 331), 69723.7, 58366.0)
('Error: ', tensor(36806.9766, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7312992128609335, 0.544524536828201)
('Val: AUC, AUPR, Erros: ', 0.7251937154891703, 0.5307968011080068, 4601.5576)
('Test: AUC, AUPR, Erros: ', 0.7275533509462193, 0.5473636466146612, 4675.3745)
((646, 331), (646, 331), 68032.516, 58366.0)
('Error: ', tensor(35892.5430, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.738559223618145, 0.5566820469337126)
('Val: AUC, AUPR, Erros: ', 0.732349072902861, 0.5431084556438873, 4495.0103)
('Test: AUC, AUPR, Erros: ', 0.7297368002235319, 0.5510329735246059, 4598.581)
((646, 331), (646, 331), 68240.336, 58366.0)
('Error: ', tensor(35291.4844, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7486161447003805, 0.5725120266158394)
('Val: AUC, AUPR, Erros: ', 0.7396070559968522, 0.5551929175141957, 4442.089)
('Test: AUC, AUPR, Erros: ', 0.7350254747710276, 0.5612193005088564, 4547.6797)
((646, 331), (646, 331), 69165.78, 58366.0)
('Error: ', tensor(34686.8516, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.760062109222805, 0.59025139019989)
('Val: AUC, AUPR, Erros: ', 0.7385886813780086, 0.5529260693456901, 4464.803)
('Test: AUC, AUPR, Erros: ', 0.735077924011895, 0.5596051241545803, 4557.8066)
