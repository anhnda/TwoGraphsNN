class Net52(torch.nn.Module):
    def __init__(self, numNode=10000, numAtomFeature=0):
        super(Net52, self).__init__()

        self.convD1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convD2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convD1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convD2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convD2.bias, config.EMBED_DIM)

        self.convS1 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)
        self.convS2 = SAGEConv(config.EMBED_DIM, config.EMBED_DIM)  # SAGEConv(config.EMBED_DIM, config.EMBED_DIM)

        # self.my_reset_params(self.convS1.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS1.bias, config.EMBED_DIM)
        #
        # self.my_reset_params(self.convS2.weight, config.EMBED_DIM)
        # self.my_reset_params(self.convS2.bias, config.EMBED_DIM)

        self.L1 = Linear(config.CHEM_FINGERPRINT_SIZE, config.EMBED_DIM * 2)
        self.actL1 = F.relu
        self.L2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.actL2 = F.relu

        self.linear1 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.act1 = F.relu
        self.linear2 = Linear(config.EMBED_DIM, 1)
        self.act2 = F.relu

        self.nodesEmbedding = torch.nn.Embedding(num_embeddings=numNode + 1, embedding_dim=config.EMBED_DIM)
        self.nodesEmbedding.weight.data.uniform_(0.001, 0.3)

        # Molecule graph neural net

        self.mlinear1 = Linear(numAtomFeature, config.EMBED_DIM * 2)
        self.mact1 = F.relu
        self.mlinear2 = Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.mact2 = F.relu

        self.conv1 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv1g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool1 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv2 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv2g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool2 = TopKPooling(config.EMBED_DIM, ratio=0.8)
        self.conv3 = EATConv(config.EMBED_DIM, config.EMBED_DIM)
        self.conv3g = GATConv(config.EMBED_DIM, config.EMBED_DIM)

        self.pool3 = TopKPooling(config.EMBED_DIM, ratio=0.8)

        self.lin1 = torch.nn.Linear(config.EMBED_DIM * 2, config.EMBED_DIM)
        self.lin2 = torch.nn.Linear(config.EMBED_DIM, config.EMBED_DIM)

        self.bn1 = torch.nn.BatchNorm1d(128)
        self.bn2 = torch.nn.BatchNorm1d(64)
        self.act1 = torch.nn.ReLU()
        self.act2 = torch.nn.ReLU()

    def my_reset_params(self, tensor, size=10):
        bound = 1.0 / math.sqrt(size)
        if tensor is not None:
            tensor.data.uniform_(0.0, bound)

    def forward(self, x, drugEdges, seEdges, drugNodes, seNodes, proteinNodes, proteinWeight, drugGraphBatch, nDrug, drugFeatures = None):


        if config.INNER_FEATURE and drugFeatures is not None:
            nDrug = drugFeatures.shape[0]
            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            xDrug = self.L1(drugFeatures)
            xDrug = self.actL1(xDrug)
            xDrug = self.L2(xDrug)
            xDrug = self.actL2(xDrug)

            x = torch.cat((xDrug, x), dim=0)

        elif config.INNER_GRAPH:
            xAtom, edge_index, batch = drugGraphBatch.x, drugGraphBatch.edge_index, drugGraphBatch.batch
            # xDrug = self.mact1(self.mlinear1(xDrug))
            # xDrug = self.mact2(self.mlinear2(xDrug))

            xProtein = self.nodesEmbedding(proteinNodes)

            xAtom = self.nodesEmbedding(xAtom)
            xAtom = xAtom.squeeze(1)




            iLevel = 0
            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv1(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv1g(xAtom, edge_index))
            xAtom, edge_index, _, batch, _, _ = self.pool1(xAtom, edge_index, None, batch)
            x1 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)
            iLevel += 1

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv2(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv2g(xAtom, edge_index))

            iLevel += 1
            xAtom, edge_index, _, batch, _, _ = self.pool2(xAtom, edge_index, None, batch)
            x2 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            if config.BOTH_GRAPH and config.EXT_MODE and iLevel >= config.INTER_LEVELS:
                xAtom = F.relu(self.conv3(xAtom, edge_index, xProtein, proteinWeight))
            else:
                xAtom = F.relu(self.conv3g(xAtom, edge_index))

            xAtom, edge_index, _, batch, _, _ = self.pool3(xAtom, edge_index, None, batch)
            x3 = torch.cat([gmp(xAtom, batch), gap(xAtom, batch)], dim=1)

            xDrug = x1 + x2 + x3

            xDrug = self.lin1(xDrug)
            xDrug = self.act1(xDrug)
            xDrug = self.lin2(xDrug)
            xDrug = self.act2(xDrug)

            x = self.nodesEmbedding(x[nDrug:])
            x = x.squeeze(1)

            x = torch.cat((xDrug, x), dim=0)
        else:
            x = self.nodesEmbedding(x)

        if config.OUTER_GRAPH:
            # Conv Drug:
            x = self.convD1(x, drugEdges)
            x = F.relu(x)
            x = self.convD2(x, drugEdges)
            x = F.relu(x)

        if config.SE_GRAPH:
            # Conv SE:
            x = self.convS1(x, seEdges)
            x = F.relu(x)
            # x = self.convS2(x, seEdges)
            # x = F.relu(x)

        drugEmbedding = x[drugNodes]
        seEmbedding = x[seNodes]
        # re = torch.sigmoid(re)
        return drugEmbedding, seEmbedding, x

    def cal(self, drugE, seE):
        return torch.matmul(drugE, seE.t())

    def cal2(self, drugE, seE):
        nDrug, nDim = drugE.shape
        nSe, _ = seE.shape
        preRe = list()
        for i in range(nDrug):
            dE = drugE[i]
            dE = dE.squeeze()
            de = dE.expand((nSe, nDim))
            v = torch.cat((de, seE), dim=1)
            v = self.linear1(v)
            v = self.act1(v)
            v = self.linear2(v)
            # v = self.act2(v)
            v = v.squeeze()
            preRe.append(v)
        return torch.stack(preRe)

('Undirected graph: ', False)
('Protein Test: ', True)
('Inner Graph, Outer Graph, Se Graph: ', True, True, False)
('Drug Features: ', False)
('Cross Prob: ', 0.5)
('Inner Level: ', 2)
MPNNX
<models.MPNNXP5.MPNNXP5 object at 0x7fd529f5f290>
('Manual torch seed: ', 1772727637)
('Config: ', 'Protein Test: ', True, 'KNN: ', 2)
('EXT MODE: ', True)
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_0
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 19983.0)
('VALIDATE SUM PROTEIN TEST: ', 2685.0)
((775, 598), (775, 598), 119750.81, 78522.0)
('Error: ', tensor(68737.3672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.532907540646075, 0.1808767471247977)
('Val: AUC, AUPR, Erros: ', 0.5365621374327787, 0.1857957922189608, 8759.102)
('Test: AUC, AUPR, Erros: ', 0.5284533372907619, 0.191828804020565, 8936.266)
((775, 598), (775, 598), 55482.297, 78522.0)
('Error: ', tensor(62260.6172, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7686496716772702, 0.47747819800372066)
('Val: AUC, AUPR, Erros: ', 0.7539981830590483, 0.44349450255627965, 8025.395)
('Test: AUC, AUPR, Erros: ', 0.7204210766769037, 0.4163333196509083, 8371.051)
((775, 598), (775, 598), 78835.22, 78522.0)
('Error: ', tensor(51580.1406, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7964775112248738, 0.5134861973284442)
('Val: AUC, AUPR, Erros: ', 0.7699442925268675, 0.46603475343738643, 6883.8604)
('Test: AUC, AUPR, Erros: ', 0.7455201701649439, 0.43433746167515724, 7350.5605)
((775, 598), (775, 598), 77740.45, 78522.0)
('Error: ', tensor(49919.0391, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8056752339277149, 0.5445426814098568)
('Val: AUC, AUPR, Erros: ', 0.7685358572524624, 0.47025159975980235, 7041.691)
('Test: AUC, AUPR, Erros: ', 0.7565253875348197, 0.44815505515202786, 7461.4023)
((775, 598), (775, 598), 79408.555, 78522.0)
('Error: ', tensor(48899.8203, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8153625985848802, 0.5684911081583397)
('Val: AUC, AUPR, Erros: ', 0.7422024621300088, 0.4339089302790596, 7401.5986)
('Test: AUC, AUPR, Erros: ', 0.7456096735600274, 0.4422184552303221, 7490.8364)
((775, 598), (775, 598), 83557.02, 78522.0)
('Error: ', tensor(48205.9922, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8238674864067965, 0.5800651102573546)
('Val: AUC, AUPR, Erros: ', 0.7426366403264506, 0.41115017399508935, 7907.556)
('Test: AUC, AUPR, Erros: ', 0.7535938376528444, 0.4399343299843934, 7578.116)
((775, 598), (775, 598), 82459.69, 78522.0)
('Error: ', tensor(47677.6445, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8297058553942782, 0.588466151815026)
('Val: AUC, AUPR, Erros: ', 0.7339817578331561, 0.39137489374534773, 8469.6455)
('Test: AUC, AUPR, Erros: ', 0.7517355393974975, 0.4323185182701057, 7657.429)
((775, 598), (775, 598), 83225.06, 78522.0)
('Error: ', tensor(47145.1367, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8361403331123362, 0.5981109547767487)
('Val: AUC, AUPR, Erros: ', 0.7248170070490637, 0.36888949014305467, 9391.334)
('Test: AUC, AUPR, Erros: ', 0.7467690257763591, 0.4214301075520196, 7833.118)
((775, 598), (775, 598), 81553.72, 78522.0)
('Error: ', tensor(46637.0859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8417223392252873, 0.6066515397410318)
('Val: AUC, AUPR, Erros: ', 0.7147835695498715, 0.3502861704361948, 10015.517)
('Test: AUC, AUPR, Erros: ', 0.740795729394728, 0.41224053521817383, 7934.662)
((775, 598), (775, 598), 82911.44, 78522.0)
('Error: ', tensor(45849.8945, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8467187740325026, 0.6167575072407164)
('Val: AUC, AUPR, Erros: ', 0.7186321454581474, 0.3496070545884029, 10550.28)
('Test: AUC, AUPR, Erros: ', 0.738955984339877, 0.41039344284282175, 8085.8716)
((775, 598), (775, 598), 79515.24, 78522.0)
('Error: ', tensor(44922.7773, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8498989147025643, 0.6262042381892018)
('Val: AUC, AUPR, Erros: ', 0.7048064380964807, 0.3285683038375249, 11421.405)
('Test: AUC, AUPR, Erros: ', 0.7257647759528346, 0.3895176382410276, 8396.67)
Train: 0.7965 0.5135
Test: 0.7455 0.4343
[0.549019714029981, 0.5707441977017764, 0.5816370003274998, 0.5843654878743665, 0.5826608648461851, 0.5895766063637178, 0.5975625475283686, 0.6023203768897906, 0.6019420667923547, 0.6068418234907889, 0.6096331153817095, 0.6123799609987437, 0.6215780674969585, 0.6270809979677214, 0.6284310582305696, 0.6312197849612268, 0.6323944314307309, 0.6350039830062308, 0.6368981759093602, 0.6428673291076101, 0.6483388541493176, 0.6522972449382081, 0.65662947799193, 0.6600898678395593, 0.6632301995525252, 0.6637199268291738, 0.6664223407962475, 0.6696541161296077, 0.6731872941480199, 0.6746641392092763, 0.6799262149971601, 0.6820466595847889, 0.6829988008605916, 0.6846397756656867, 0.6857278400607398, 0.6917687963485284, 0.6942623125601319, 0.6980451015411138, 0.7004955259194617, 0.7044697894235916, 0.7061098713167013, 0.7072072557858637, 0.7105541804303498, 0.7105541804303498, 0.7129885991290642, 0.7139215263855978, 0.7160223113065867, 0.7171464627608295, 0.721145783219578, 0.7243932052497712, 0.7243932052497712, 0.7254300532059537, 0.7254300532059537, 0.7278624691846178, 0.7288675945917675, 0.7288675945917675, 0.7308008744410543, 0.7308008744410543, 0.7308008744410543, 0.7308008744410543, 0.7308008744410543, 0.7308008744410543, 0.7308008744410543, 0.7335418463676442, 0.7335418463676442, 0.7348808964941123, 0.7362363992664003, 0.7362363992664003, 0.7362363992664003, 0.7362363992664003, 0.7362363992664003, 0.7362363992664003, 0.7377686260456502, 0.7377686260456502, 0.7377686260456502, 0.742194650834823, 0.742194650834823, 0.742194650834823, 0.7438056787891938, 0.7438056787891938, 0.7438056787891938, 0.7438056787891938, 0.7438056787891938, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439, 0.7455201701649439]
[0.0661233153055145, 0.07755563579223143, 0.08560439504963718, 0.0925898727493982, 0.09543620043931467, 0.10463629252401077, 0.11441222537590168, 0.12210146616590295, 0.12496382717908928, 0.13192483693717535, 0.135764807651971, 0.1410747292002496, 0.1545792059573678, 0.16296415052790517, 0.16603528007517734, 0.1714678840497509, 0.17272638108732397, 0.17722954283137268, 0.18066230148604895, 0.19259494854685938, 0.20330779250689412, 0.20970023235361906, 0.2178729205399005, 0.2249998390558119, 0.23117597831418135, 0.23196720022915338, 0.23631028923878186, 0.24351224276726866, 0.25119037070158745, 0.2541252728392953, 0.2649358879190232, 0.26890130058616785, 0.2710381061283119, 0.2746480239320763, 0.27797533118230566, 0.2928908959829412, 0.29837873707095963, 0.30772024914207036, 0.31379769098678034, 0.32307821029130335, 0.32752507468851777, 0.3300951483195174, 0.3372483383955392, 0.3372483383955392, 0.34384195363559067, 0.3457192754169597, 0.3513943564130325, 0.35410868111044635, 0.3645440204092027, 0.3731698830078902, 0.3731698830078902, 0.37580721998980354, 0.37580721998980354, 0.38313315667868647, 0.3861302298063626, 0.3861302298063626, 0.39169642832287654, 0.39169642832287654, 0.39169642832287654, 0.39169642832287654, 0.39169642832287654, 0.39169642832287654, 0.39169642832287654, 0.3998444609079249, 0.3998444609079249, 0.4038516037401052, 0.40766363091363816, 0.40766363091363816, 0.40766363091363816, 0.40766363091363816, 0.40766363091363816, 0.40766363091363816, 0.41210124394901, 0.41210124394901, 0.41210124394901, 0.4247310976331862, 0.4247310976331862, 0.4247310976331862, 0.42921183081410075, 0.42921183081410075, 0.42921183081410075, 0.42921183081410075, 0.42921183081410075, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724, 0.43433746167515724]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_1
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 19862.0)
('VALIDATE SUM PROTEIN TEST: ', 2514.0)
((775, 598), (775, 598), 126773.914, 77474.0)
('Error: ', tensor(69567.1562, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5456919093913545, 0.1866562477531978)
('Val: AUC, AUPR, Erros: ', 0.56675135570421, 0.23037732585809234, 9485.306)
('Test: AUC, AUPR, Erros: ', 0.5650527599287614, 0.20494198879678827, 8896.537)
((775, 598), (775, 598), 64680.203, 77474.0)
('Error: ', tensor(59472.5859, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7748271343673174, 0.47178390587970404)
('Val: AUC, AUPR, Erros: ', 0.7536496748225342, 0.46604102686376847, 8736.595)
('Test: AUC, AUPR, Erros: ', 0.7568917809757159, 0.4317660599221633, 7769.06)
((775, 598), (775, 598), 84752.32, 77474.0)
('Error: ', tensor(51105.2109, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7988680643489829, 0.5121964920215574)
('Val: AUC, AUPR, Erros: ', 0.7591462703243423, 0.47278907998211905, 7822.0063)
('Test: AUC, AUPR, Erros: ', 0.7633214422000498, 0.4525776059101473, 7143.3784)
((775, 598), (775, 598), 82829.72, 77474.0)
('Error: ', tensor(49061.7578, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8094697259652673, 0.5490389934756081)
('Val: AUC, AUPR, Erros: ', 0.7550691199933282, 0.48165077418257224, 7803.332)
('Test: AUC, AUPR, Erros: ', 0.7571107547628431, 0.4553021758270247, 7212.719)
((775, 598), (775, 598), 79595.59, 77474.0)
('Error: ', tensor(48011.6875, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8227459553063965, 0.5727895228258307)
('Val: AUC, AUPR, Erros: ', 0.7278562157235141, 0.45966077493546365, 8048.545)
('Test: AUC, AUPR, Erros: ', 0.7283352586830864, 0.42155953540911734, 7623.103)
((775, 598), (775, 598), 79824.336, 77474.0)
('Error: ', tensor(47348.7188, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8307653361203716, 0.5833175979170644)
('Val: AUC, AUPR, Erros: ', 0.7263200484655344, 0.44398453292172796, 8229.232)
('Test: AUC, AUPR, Erros: ', 0.7271983472413324, 0.3999210571064521, 8194.095)
((775, 598), (775, 598), 83032.4, 77474.0)
('Error: ', tensor(46767.3672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8356882247251171, 0.5935871345211545)
('Val: AUC, AUPR, Erros: ', 0.7241107010868755, 0.43015577939701155, 8444.27)
('Test: AUC, AUPR, Erros: ', 0.7146651104463303, 0.37401022289699304, 9020.825)
((775, 598), (775, 598), 83008.66, 77474.0)
('Error: ', tensor(46298.3281, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8409404100909785, 0.6011860436449064)
('Val: AUC, AUPR, Erros: ', 0.7263088556304834, 0.4243392717483561, 8622.205)
('Test: AUC, AUPR, Erros: ', 0.7120206588329906, 0.3617772996590712, 9738.994)
((775, 598), (775, 598), 79642.016, 77474.0)
('Error: ', tensor(45647.0625, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8482155377988019, 0.6125779749158895)
('Val: AUC, AUPR, Erros: ', 0.7214852782232899, 0.4123253143017472, 8882.79)
('Test: AUC, AUPR, Erros: ', 0.7132417262908214, 0.34817669495652764, 10452.93)
((775, 598), (775, 598), 76357.57, 77474.0)
('Error: ', tensor(44524.9414, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8534323155200958, 0.6261578790735677)
('Val: AUC, AUPR, Erros: ', 0.7177436456939167, 0.39794358586891865, 9275.536)
('Test: AUC, AUPR, Erros: ', 0.7002370682412852, 0.32590137515372386, 11619.013)
((775, 598), (775, 598), 75306.13, 77474.0)
('Error: ', tensor(43712.1992, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.856954667273347, 0.6347993472469357)
('Val: AUC, AUPR, Erros: ', 0.716797043795338, 0.3834159756448277, 9925.969)
('Test: AUC, AUPR, Erros: ', 0.6923053999997465, 0.30504267220548764, 13447.901)
Train: 0.8095 0.5490
Test: 0.7571 0.4553
[0.510499102479708, 0.5271909303150628, 0.5251087391360478, 0.5313423432612098, 0.5384207029342853, 0.5473092625640328, 0.565371171601614, 0.5773170937355697, 0.5872688531982422, 0.5922589813031758, 0.5945076842052458, 0.6015743544969712, 0.6129386389721236, 0.6222088718063592, 0.6250476326629005, 0.6303921286743087, 0.6330761679876625, 0.638637188031995, 0.6404343155802625, 0.6468679132051304, 0.6510243795511432, 0.655152567425674, 0.6600183682268209, 0.6640008170546177, 0.6669200607798711, 0.6677006594738037, 0.6710927184551345, 0.6744096737538314, 0.679167641054404, 0.6810168673424456, 0.6860220934541161, 0.6891182301312249, 0.6900403333409797, 0.6922440636949296, 0.6934038273834945, 0.6996896981126283, 0.7022609575771382, 0.7067769168519107, 0.7098210934959142, 0.7142203029826122, 0.7161810885048238, 0.7173151314771057, 0.7210289956504103, 0.7210289956504103, 0.7226194517476335, 0.7234008723492792, 0.725879379736045, 0.7269194385262894, 0.7311531882720577, 0.7344803122545771, 0.7344803122545771, 0.7353888043703176, 0.7353888043703176, 0.7378741619398427, 0.7390493362713652, 0.7390493362713652, 0.7415079291292138, 0.7415079291292138, 0.7415079291292138, 0.7415079291292138, 0.7415079291292138, 0.7415079291292138, 0.7415079291292138, 0.7444067621654985, 0.7444067621654985, 0.7457130258370084, 0.7470640457404183, 0.7470640457404183, 0.7470640457404183, 0.7470640457404183, 0.7470640457404183, 0.7470640457404183, 0.748835614881336, 0.748835614881336, 0.748835614881336, 0.7534696827029909, 0.7534696827029909, 0.7534696827029909, 0.7552655979056642, 0.7552655979056642, 0.7552655979056642, 0.7552655979056642, 0.7552655979056642, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431, 0.7571107547628431]
[0.05666691382130279, 0.06364192951833961, 0.0664242264180737, 0.07508707606555887, 0.08027741218994341, 0.08528445671928309, 0.09822956584774739, 0.10685534249608336, 0.11647527850304865, 0.11985651600923045, 0.12244143449555256, 0.12934724944643938, 0.14170880877662692, 0.1528154406358529, 0.1558446108443226, 0.16235173121138277, 0.16630104867108308, 0.17435175578883882, 0.17712050441664784, 0.18760124475065293, 0.19446673732712344, 0.19937790111446874, 0.2075938883334955, 0.21385324287436913, 0.2193116052987902, 0.22044167306765464, 0.22598737179787337, 0.23252331155687583, 0.24159951001858385, 0.24577180741735277, 0.25569068501720027, 0.26270368279815853, 0.26486958157518947, 0.27016738196458306, 0.27305487513266075, 0.2887006274391111, 0.29488344078708983, 0.3058903386693284, 0.31388518574855867, 0.3258123058351117, 0.3306039771963704, 0.3337526446923448, 0.3439903436450022, 0.3439903436450022, 0.34750437738205814, 0.3492062533846708, 0.3568828389578941, 0.3597600607373746, 0.37117721509631113, 0.3805199919823581, 0.3805199919823581, 0.38247253061858283, 0.38247253061858283, 0.3902802056966738, 0.3935971207746456, 0.3935971207746456, 0.4016699733257689, 0.4016699733257689, 0.4016699733257689, 0.4016699733257689, 0.4016699733257689, 0.4016699733257689, 0.4016699733257689, 0.41179860773628657, 0.41179860773628657, 0.4162453381645292, 0.4207913454560589, 0.4207913454560589, 0.4207913454560589, 0.4207913454560589, 0.4207913454560589, 0.4207913454560589, 0.42679767274698277, 0.42679767274698277, 0.42679767274698277, 0.4427021546660966, 0.4427021546660966, 0.4427021546660966, 0.4487549624793752, 0.4487549624793752, 0.4487549624793752, 0.4487549624793752, 0.4487549624793752, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247, 0.4553021758270247]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_2
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 20003.0)
('VALIDATE SUM PROTEIN TEST: ', 2806.0)
((775, 598), (775, 598), 138430.22, 77470.0)
('Error: ', tensor(72283.8438, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5574991118950264, 0.19219720916419475)
('Val: AUC, AUPR, Erros: ', 0.5748458525996495, 0.20638650558524646, 9199.006)
('Test: AUC, AUPR, Erros: ', 0.5822374186737405, 0.23742509386643904, 9715.818)
((775, 598), (775, 598), 129169.2, 77470.0)
('Error: ', tensor(65550.5703, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7411754331014997, 0.4580124962080243)
('Val: AUC, AUPR, Erros: ', 0.7471839827070688, 0.4552338840561603, 8357.146)
('Test: AUC, AUPR, Erros: ', 0.7341602783622692, 0.4811325727462159, 8860.234)
((775, 598), (775, 598), 110081.41, 77470.0)
('Error: ', tensor(54353.7852, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7902297570473734, 0.506663768163146)
('Val: AUC, AUPR, Erros: ', 0.7743381746140457, 0.4857054046207894, 7184.104)
('Test: AUC, AUPR, Erros: ', 0.7692468699800146, 0.5045407277429333, 7730.2944)
((775, 598), (775, 598), 67441.71, 77470.0)
('Error: ', tensor(50215.6250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8009447737359949, 0.5290596011965037)
('Val: AUC, AUPR, Erros: ', 0.7741495707892213, 0.4921075611642075, 6831.9365)
('Test: AUC, AUPR, Erros: ', 0.766398640791278, 0.5010689364868803, 7705.49)
((775, 598), (775, 598), 74354.29, 77470.0)
('Error: ', tensor(48812.8125, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8090410771659216, 0.5546803627858514)
('Val: AUC, AUPR, Erros: ', 0.7720454866939507, 0.49670478535154605, 6848.1094)
('Test: AUC, AUPR, Erros: ', 0.7526151616784071, 0.4923614055711361, 7761.6914)
((775, 598), (775, 598), 83612.7, 77470.0)
('Error: ', tensor(48087.7734, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8195451484062003, 0.5722744882708893)
('Val: AUC, AUPR, Erros: ', 0.7772707358166648, 0.4967266338977303, 6864.904)
('Test: AUC, AUPR, Erros: ', 0.749364135692583, 0.4883516215182878, 7766.316)
((775, 598), (775, 598), 81330.234, 77470.0)
('Error: ', tensor(47533.8672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8282691921120146, 0.5800569980068588)
('Val: AUC, AUPR, Erros: ', 0.771780171073333, 0.4842204256740838, 7008.0522)
('Test: AUC, AUPR, Erros: ', 0.753667989354962, 0.48628126143354633, 7791.384)
((775, 598), (775, 598), 81315.164, 77470.0)
('Error: ', tensor(47078.6016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8326071170945406, 0.5878536380331725)
('Val: AUC, AUPR, Erros: ', 0.7654325626428298, 0.47454713830198586, 7178.421)
('Test: AUC, AUPR, Erros: ', 0.7510736876012133, 0.4782857327934477, 7888.566)
((775, 598), (775, 598), 80551.01, 77470.0)
('Error: ', tensor(46722.9844, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.836197319190459, 0.5942572557988471)
('Val: AUC, AUPR, Erros: ', 0.7621211488641643, 0.4599028738032542, 7380.602)
('Test: AUC, AUPR, Erros: ', 0.7499541657129399, 0.47630458222365024, 7929.9985)
((775, 598), (775, 598), 81533.16, 77470.0)
('Error: ', tensor(46341.5586, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8403605774750427, 0.6010709845997186)
('Val: AUC, AUPR, Erros: ', 0.758633419344364, 0.44877464216817864, 7651.402)
('Test: AUC, AUPR, Erros: ', 0.7521899782800336, 0.4814104734594478, 7931.765)
((775, 598), (775, 598), 74471.11, 77470.0)
('Error: ', tensor(45861.9375, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8444571129606855, 0.6090764472848864)
('Val: AUC, AUPR, Erros: ', 0.7520996863089354, 0.4341384947800295, 7841.2637)
('Test: AUC, AUPR, Erros: ', 0.747660079633576, 0.4824564556301718, 7953.4507)
Train: 0.8009 0.5291
Test: 0.7664 0.5011
[0.6019351598116117, 0.6010951126786024, 0.6192115105868083, 0.6173334099593104, 0.6236645068276506, 0.6269399511447634, 0.6340740181995778, 0.6402223046298808, 0.643156754712924, 0.6455890403203608, 0.6481633081318067, 0.6528358593207817, 0.6585360754897148, 0.662148150663514, 0.6633061908803812, 0.6662658005429811, 0.6689348537852069, 0.6722343976341971, 0.6737579305360406, 0.6793552622233608, 0.6824446200238138, 0.6851930417893106, 0.6890676659143787, 0.6931323594293755, 0.6961934459146132, 0.6967580036816968, 0.7000497798977645, 0.702571125974956, 0.7051553502718552, 0.7063680080617362, 0.7100557783562605, 0.711969991217434, 0.7127097006337897, 0.7139767563326072, 0.7147123059705229, 0.7198032799526348, 0.7224689469252786, 0.7252587686595835, 0.7278353794787862, 0.7307682443280374, 0.7320509136574184, 0.7331234566582752, 0.7358879005689574, 0.7358879005689574, 0.7377101273075773, 0.7385404956619992, 0.7402405319307315, 0.7412931659309995, 0.744820478530647, 0.747298330522137, 0.747298330522137, 0.7480672568012309, 0.7480672568012309, 0.7496721993759646, 0.7507948835987509, 0.7507948835987509, 0.7525026640259245, 0.7525026640259245, 0.7525026640259245, 0.7525026640259245, 0.7525026640259245, 0.7525026640259245, 0.7525026640259245, 0.7548721037090462, 0.7548721037090462, 0.7561973908571604, 0.7574973119637609, 0.7574973119637609, 0.7574973119637609, 0.7574973119637609, 0.7574973119637609, 0.7574973119637609, 0.758997226292871, 0.758997226292871, 0.758997226292871, 0.7632392184415165, 0.7632392184415165, 0.7632392184415165, 0.7647796268179651, 0.7647796268179651, 0.7647796268179651, 0.7647796268179651, 0.7647796268179651, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278, 0.766398640791278]
[0.09878635722084453, 0.10103015324845883, 0.12178084055726583, 0.12644089867252206, 0.13698655873448812, 0.1432430130696848, 0.15771348595032644, 0.1667171683962159, 0.1740123333533885, 0.1775424703189692, 0.18255221626270457, 0.19251229213323334, 0.2031075651886322, 0.20938953271071725, 0.21341157967894703, 0.22265940857037367, 0.22877979463603126, 0.23390877947988248, 0.2373934503164707, 0.25053394037023935, 0.25864496989140373, 0.2634537392510046, 0.2748320007410522, 0.28521507270264734, 0.29373066156658567, 0.29502181087089907, 0.30354142020993613, 0.311254459704488, 0.3181142209888201, 0.32106880313548314, 0.33176424833997575, 0.3357395572712649, 0.337571146861134, 0.33932021657967887, 0.34114865582210396, 0.3559045796324645, 0.3635423405243241, 0.37144151110752976, 0.3789449948638768, 0.38672805608448446, 0.39027353603917425, 0.3932823956577445, 0.40067952448160704, 0.40067952448160704, 0.4064026469659594, 0.4085007911409957, 0.413910369278772, 0.4174846890483037, 0.4291987574950007, 0.43725195458958366, 0.43725195458958366, 0.4390164963049402, 0.4390164963049402, 0.44340662430786326, 0.4468986101056365, 0.4468986101056365, 0.4513086436673204, 0.4513086436673204, 0.4513086436673204, 0.4513086436673204, 0.4513086436673204, 0.4513086436673204, 0.4513086436673204, 0.459646353927195, 0.459646353927195, 0.463533643636057, 0.468199829585958, 0.468199829585958, 0.468199829585958, 0.468199829585958, 0.468199829585958, 0.468199829585958, 0.47388088118988836, 0.47388088118988836, 0.47388088118988836, 0.4895600597812092, 0.4895600597812092, 0.4895600597812092, 0.495307102256677, 0.495307102256677, 0.495307102256677, 0.495307102256677, 0.495307102256677, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803, 0.5010689364868803]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_3
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 20391.0)
('VALIDATE SUM PROTEIN TEST: ', 2373.0)
((775, 598), (775, 598), 83935.35, 79773.0)
('Error: ', tensor(65967.3672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5288477086822891, 0.18618963610827452)
('Val: AUC, AUPR, Erros: ', 0.5029596696439794, 0.16317618047488994, 7816.9585)
('Test: AUC, AUPR, Erros: ', 0.5390273498568793, 0.19206060679511627, 8357.874)
((775, 598), (775, 598), 112231.59, 79773.0)
('Error: ', tensor(64573.3438, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7404448425164976, 0.46225598037318033)
('Val: AUC, AUPR, Erros: ', 0.6866586739607206, 0.37626882936033335, 7953.4287)
('Test: AUC, AUPR, Erros: ', 0.7420477931297109, 0.45414323444097027, 8154.5923)
((775, 598), (775, 598), 77356.3, 79773.0)
('Error: ', tensor(54611.5469, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7881423633075011, 0.5193711625910084)
('Val: AUC, AUPR, Erros: ', 0.7361958232145451, 0.41576088352936497, 6765.143)
('Test: AUC, AUPR, Erros: ', 0.7770320219169458, 0.4946708145527418, 7005.6094)
((775, 598), (775, 598), 67178.1, 79773.0)
('Error: ', tensor(51190.7109, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8013705881227108, 0.5421949421057404)
('Val: AUC, AUPR, Erros: ', 0.7613420110865774, 0.42153158329943624, 6744.274)
('Test: AUC, AUPR, Erros: ', 0.7779837707755336, 0.498841216200588, 6827.703)
((775, 598), (775, 598), 82946.125, 79773.0)
('Error: ', tensor(49814.2344, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8125725341735386, 0.5689437049845434)
('Val: AUC, AUPR, Erros: ', 0.7592849115540763, 0.4140496374021782, 6789.3877)
('Test: AUC, AUPR, Erros: ', 0.779248768553988, 0.5006997502567763, 6778.5415)
((775, 598), (775, 598), 79440.43, 79773.0)
('Error: ', tensor(48889.9492, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8206792752281853, 0.5806919274358513)
('Val: AUC, AUPR, Erros: ', 0.7544283275335817, 0.4020677725187777, 7098.897)
('Test: AUC, AUPR, Erros: ', 0.774087907138109, 0.4880789880926522, 6935.6343)
((775, 598), (775, 598), 84922.37, 79773.0)
('Error: ', tensor(48389.4258, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8287491131531736, 0.5886049165182348)
('Val: AUC, AUPR, Erros: ', 0.7485675135596237, 0.3874899543531644, 7412.902)
('Test: AUC, AUPR, Erros: ', 0.7735301052927366, 0.4797266623921971, 7073.221)
((775, 598), (775, 598), 83667.75, 79773.0)
('Error: ', tensor(48019.9531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8323551016183359, 0.5947820679014141)
('Val: AUC, AUPR, Erros: ', 0.7447300517288175, 0.3748434736277511, 7715.8564)
('Test: AUC, AUPR, Erros: ', 0.76792641199659, 0.46843239521747654, 7231.98)
((775, 598), (775, 598), 85338.4, 79773.0)
('Error: ', tensor(47754.4805, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8352186478316301, 0.6001056383250543)
('Val: AUC, AUPR, Erros: ', 0.7375620989189083, 0.3619977790734304, 8085.681)
('Test: AUC, AUPR, Erros: ', 0.7628936295496216, 0.4584129193864058, 7418.087)
((775, 598), (775, 598), 82148.46, 79773.0)
('Error: ', tensor(47540.3789, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8373435337792998, 0.6042929358718063)
('Val: AUC, AUPR, Erros: ', 0.730914650925717, 0.3515941174451235, 8291.938)
('Test: AUC, AUPR, Erros: ', 0.7594410802630591, 0.44921795304586754, 7513.383)
((775, 598), (775, 598), 85145.8, 79773.0)
('Error: ', tensor(47268.1250, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.840095605355473, 0.6087158847359719)
('Val: AUC, AUPR, Erros: ', 0.725895083223072, 0.34603349045635323, 8664.707)
('Test: AUC, AUPR, Erros: ', 0.7568613429137139, 0.43987219885612466, 7751.7593)
Train: 0.8014 0.5422
Test: 0.7780 0.4988
[0.5936631458388382, 0.611202254871171, 0.6202790796887344, 0.6245066670513102, 0.6294539561738598, 0.6379033104170243, 0.6425112215924956, 0.6504581783653904, 0.6537765894998642, 0.6583729641892183, 0.6609740897148124, 0.6642406625022027, 0.6714138923565771, 0.676628684960436, 0.6783465245860968, 0.6807330220508985, 0.6832434317005291, 0.685061533182529, 0.6873689132160032, 0.6900312341635676, 0.693850282444566, 0.6976953689150263, 0.7017657998253716, 0.7048501604089461, 0.7067204238928253, 0.7073541417117646, 0.7105207025535183, 0.7128593867870983, 0.7159851580287276, 0.716597377713788, 0.7207368306926258, 0.7223360581373854, 0.7227053488966396, 0.7239950341300101, 0.7245310334757434, 0.7288652981906745, 0.7314534878392459, 0.7342281137582972, 0.7363796931985372, 0.739555741277336, 0.7408083430376714, 0.7416996608674641, 0.7450412717943168, 0.7450412717943168, 0.7467624800141959, 0.7477927024541088, 0.749506152801649, 0.7506184213964349, 0.7543516599105896, 0.7572804195616729, 0.7572804195616729, 0.7580833895006822, 0.7580833895006822, 0.760094262607844, 0.7612214092520784, 0.7612214092520784, 0.7635147824593749, 0.7635147824593749, 0.7635147824593749, 0.7635147824593749, 0.7635147824593749, 0.7635147824593749, 0.7635147824593749, 0.7659518589298688, 0.7659518589298688, 0.7672573775795049, 0.7686282722793906, 0.7686282722793906, 0.7686282722793906, 0.7686282722793906, 0.7686282722793906, 0.7686282722793906, 0.7701542207464045, 0.7701542207464045, 0.7701542207464045, 0.7747142869630154, 0.7747142869630154, 0.7747142869630154, 0.7763140517981842, 0.7763140517981842, 0.7763140517981842, 0.7763140517981842, 0.7763140517981842, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336, 0.7779837707755336]
[0.07342885432843789, 0.08917921756970973, 0.09964634172134756, 0.10320126232617563, 0.11212713318899709, 0.1227014085301188, 0.13316596606828188, 0.14772072729969438, 0.15496280883811417, 0.1639683449473992, 0.170112885694931, 0.17721730561274418, 0.19031162797878767, 0.20196843780488094, 0.20522434498795106, 0.21080592869324533, 0.21652331981766737, 0.21858037942911518, 0.22421213513904642, 0.2292578925407046, 0.23838970423139366, 0.24914868278134197, 0.26031720460913554, 0.26711506508799765, 0.27036265543726945, 0.2724406771392377, 0.2818189965869399, 0.28740544436388993, 0.29698444884538744, 0.29775628905132645, 0.31084187837737787, 0.3164800015471179, 0.3159806926474575, 0.3198614850935142, 0.32121614413931354, 0.33367006958326856, 0.34057422133295856, 0.34932302244376123, 0.35568702752885917, 0.3663318998611745, 0.36988095188592857, 0.372428484783459, 0.3819202706054674, 0.3819202706054674, 0.3876289216361122, 0.39024385440151366, 0.3969304810476187, 0.40127505069976427, 0.4136598632981559, 0.4235136820480752, 0.4235136820480752, 0.42603971953534614, 0.42603971953534614, 0.4332898027992691, 0.437141045515095, 0.437141045515095, 0.4451797819332474, 0.4451797819332474, 0.4451797819332474, 0.4451797819332474, 0.4451797819332474, 0.4451797819332474, 0.4451797819332474, 0.45365042510731673, 0.45365042510731673, 0.4586055041439821, 0.4637706833859868, 0.4637706833859868, 0.4637706833859868, 0.4637706833859868, 0.4637706833859868, 0.4637706833859868, 0.46955038680154854, 0.46955038680154854, 0.46955038680154854, 0.4865205889649638, 0.4865205889649638, 0.4865205889649638, 0.4924720738629929, 0.4924720738629929, 0.4924720738629929, 0.4924720738629929, 0.4924720738629929, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588, 0.498841216200588]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_4
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 20255.0)
('VALIDATE SUM PROTEIN TEST: ', 2418.0)
((775, 598), (775, 598), 154980.11, 80458.0)
('Error: ', tensor(78391.2969, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5263339477189606, 0.18162762750624822)
('Val: AUC, AUPR, Erros: ', 0.5198701864569665, 0.17166816503276539, 9640.771)
('Test: AUC, AUPR, Erros: ', 0.5021475375726179, 0.16049685717967987, 9576.778)
((775, 598), (775, 598), 73986.13, 80458.0)
('Error: ', tensor(59990.6016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7786267934624012, 0.488659510643359)
('Val: AUC, AUPR, Erros: ', 0.7447741370249222, 0.40420114761093745, 7279.496)
('Test: AUC, AUPR, Erros: ', 0.7198788513370253, 0.3744808655160983, 7237.074)
((775, 598), (775, 598), 66581.28, 80458.0)
('Error: ', tensor(52388.1953, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.7936313509184028, 0.5245833170555715)
('Val: AUC, AUPR, Erros: ', 0.7567913923557611, 0.4297667133537784, 6723.215)
('Test: AUC, AUPR, Erros: ', 0.7392412013229499, 0.4029580094018042, 6763.065)
((775, 598), (775, 598), 77675.92, 80458.0)
('Error: ', tensor(50296.4531, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8072231132269698, 0.5629160921637446)
('Val: AUC, AUPR, Erros: ', 0.7525741451810389, 0.43616565766402676, 6765.6885)
('Test: AUC, AUPR, Erros: ', 0.7377501009374987, 0.3988532108314631, 6909.693)
((775, 598), (775, 598), 85250.98, 80458.0)
('Error: ', tensor(49076.8594, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8245075557099879, 0.5849044012409337)
('Val: AUC, AUPR, Erros: ', 0.750710292641001, 0.4265471312487311, 7021.5967)
('Test: AUC, AUPR, Erros: ', 0.7465469676978556, 0.39411448673538596, 7201.2866)
((775, 598), (775, 598), 84663.92, 80458.0)
('Error: ', tensor(48539.5117, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8310494197349971, 0.5925518727160664)
('Val: AUC, AUPR, Erros: ', 0.7374172525715318, 0.4079113059821487, 7420.535)
('Test: AUC, AUPR, Erros: ', 0.741648487768637, 0.3823187247621769, 7452.1235)
((775, 598), (775, 598), 83073.06, 80458.0)
('Error: ', tensor(48075.8984, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8366140192316115, 0.601210802928792)
('Val: AUC, AUPR, Erros: ', 0.730467229967117, 0.3917009927451616, 7840.512)
('Test: AUC, AUPR, Erros: ', 0.7335479155894666, 0.36323834765180796, 7752.339)
((775, 598), (775, 598), 80501.695, 80458.0)
('Error: ', tensor(47700.9297, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8404255760992865, 0.6079845003896767)
('Val: AUC, AUPR, Erros: ', 0.7268234275279256, 0.38120821064848276, 8303.224)
('Test: AUC, AUPR, Erros: ', 0.7272376755965487, 0.3502713560888933, 8115.6387)
((775, 598), (775, 598), 82616.8, 80458.0)
('Error: ', tensor(47134.5117, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8442672786078298, 0.6151754024433881)
('Val: AUC, AUPR, Erros: ', 0.7182676463423329, 0.3695569920932806, 8838.533)
('Test: AUC, AUPR, Erros: ', 0.7297303713767861, 0.3480291736913293, 8564.167)
((775, 598), (775, 598), 84610.734, 80458.0)
('Error: ', tensor(46640.1523, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8469320994585006, 0.6209031777982954)
('Val: AUC, AUPR, Erros: ', 0.7222325287201048, 0.36655843659715265, 9076.075)
('Test: AUC, AUPR, Erros: ', 0.7315304186366474, 0.3464808342544453, 9038.516)
((775, 598), (775, 598), 79781.89, 80458.0)
('Error: ', tensor(46082.6719, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8514080210537642, 0.6295908556553749)
('Val: AUC, AUPR, Erros: ', 0.7138790659053488, 0.352403287952364, 9269.779)
('Test: AUC, AUPR, Erros: ', 0.7263874554289839, 0.3311036487978267, 9561.414)
Train: 0.7936 0.5246
Test: 0.7392 0.4030
[0.5233180128731216, 0.5393139832666364, 0.5322639471927817, 0.5488075530925431, 0.5538782576869788, 0.5602471623039907, 0.5726084429836342, 0.5859904402576114, 0.5949456387541172, 0.6005492249633162, 0.6029147201098418, 0.6077113736612975, 0.6208629639353611, 0.6274937050201809, 0.6279678272842067, 0.6300961639674706, 0.633316922743458, 0.6368684752762922, 0.6397381654776843, 0.6453818958362018, 0.6487563129464886, 0.6532682165678283, 0.656252383091106, 0.6592554436325357, 0.6619968272287721, 0.6623221940769499, 0.6660920011324194, 0.6685872519710053, 0.6717410363201302, 0.6731580616846635, 0.6767215911511648, 0.6785877229676984, 0.6793232969134649, 0.6815080933599069, 0.6826570568231273, 0.689094304650717, 0.6915516466200688, 0.6952390792310587, 0.6976093743227807, 0.7011940176679385, 0.7027929524405763, 0.7036150572218309, 0.7070020960185738, 0.7070020960185738, 0.7087564795995643, 0.7096165070302727, 0.7115574309512634, 0.7128024680374552, 0.7164064442462326, 0.7193067932756447, 0.7193067932756447, 0.7201166240884753, 0.7201166240884753, 0.721898706500476, 0.7226129217325591, 0.7226129217325591, 0.7246367860551105, 0.7246367860551105, 0.7246367860551105, 0.7246367860551105, 0.7246367860551105, 0.7246367860551105, 0.7246367860551105, 0.7271784605211218, 0.7271784605211218, 0.7283515312551118, 0.7296895597761792, 0.7296895597761792, 0.7296895597761792, 0.7296895597761792, 0.7296895597761792, 0.7296895597761792, 0.7312391270562901, 0.7312391270562901, 0.7312391270562901, 0.7359778998506559, 0.7359778998506559, 0.7359778998506559, 0.7375631265209699, 0.7375631265209699, 0.7375631265209699, 0.7375631265209699, 0.7375631265209699, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499, 0.7392412013229499]
[0.04889893060857965, 0.05918351691112169, 0.06281245521030833, 0.0740622190194864, 0.07921118098437384, 0.0844647914699785, 0.09654046127945065, 0.10942549020685485, 0.11854106523380736, 0.1228712194138257, 0.1251635990417885, 0.13082278672412406, 0.1445498076525094, 0.15246905695118734, 0.1523680796998976, 0.15527392903340412, 0.15998545462054964, 0.16678118538202774, 0.17293870413774692, 0.17965177323333711, 0.1842905253164494, 0.19215801925468623, 0.1962839082081278, 0.20023991880624448, 0.20624731595528256, 0.20714120137963257, 0.21448646931828697, 0.21955815543084362, 0.22717366341339482, 0.2297046199327219, 0.2369478399546541, 0.2419946036701089, 0.24337948782198984, 0.24975154774401298, 0.2528045121570158, 0.26693091518466344, 0.27180869918748596, 0.28213044136448073, 0.2886039743756076, 0.29781127022159165, 0.30191142429706685, 0.303735866727756, 0.3119493927137269, 0.3119493927137269, 0.31499969138180534, 0.3171079575759017, 0.32273927096251886, 0.32609299302244665, 0.33587513224388754, 0.3428618317069549, 0.3428618317069549, 0.34538607429487567, 0.34538607429487567, 0.3506791953682166, 0.3521018647254533, 0.3521018647254533, 0.35876472451804786, 0.35876472451804786, 0.35876472451804786, 0.35876472451804786, 0.35876472451804786, 0.35876472451804786, 0.35876472451804786, 0.3663583619009716, 0.3663583619009716, 0.36965488265918994, 0.37352803662443274, 0.37352803662443274, 0.37352803662443274, 0.37352803662443274, 0.37352803662443274, 0.37352803662443274, 0.37842269582454857, 0.37842269582454857, 0.37842269582454857, 0.39282937129833884, 0.39282937129833884, 0.39282937129833884, 0.39745346474955456, 0.39745346474955456, 0.39745346474955456, 0.39745346474955456, 0.39745346474955456, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042, 0.4029580094018042]
Training raw path: /home/anhnd/DTI Project/Codes/MPNN/data/KFold/ATCInchikeySideEffectByDrug.txt_P3_5
('Number of substructures, proteins, pathways, drugs, se: ', 888, 1448, 330, 969, 598)
((775, 2666), (97, 2666), (775, 598), (97, 598))
('VALIDATE SUM PROTEIN TRAIN: ', 20433.0)
('VALIDATE SUM PROTEIN TEST: ', 2509.0)
((775, 598), (775, 598), 137778.52, 80484.0)
('Error: ', tensor(73373.8984, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.5402903686067736, 0.187837989124641)
('Val: AUC, AUPR, Erros: ', 0.5347246259034081, 0.17420791994404128, 8861.512)
('Test: AUC, AUPR, Erros: ', 0.5396896348122356, 0.1763275445910206, 8956.661)
((775, 598), (775, 598), 87212.46, 80484.0)
('Error: ', tensor(60096.8125, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.771590090002201, 0.48612398199723944)
('Val: AUC, AUPR, Erros: ', 0.7433906743879864, 0.419504007446105, 7187.3223)
('Test: AUC, AUPR, Erros: ', 0.7373102995155603, 0.4086769340349936, 7320.287)
((775, 598), (775, 598), 76308.305, 80484.0)
('Error: ', tensor(52411.4844, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8014909469774055, 0.5239606244038988)
('Val: AUC, AUPR, Erros: ', 0.7761331827377842, 0.44566617966850763, 6456.5244)
('Test: AUC, AUPR, Erros: ', 0.7634550232046392, 0.4381902001493533, 6642.95)
((775, 598), (775, 598), 76210.88, 80484.0)
('Error: ', tensor(50768.7852, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8053905636350538, 0.5503249502380577)
('Val: AUC, AUPR, Erros: ', 0.7799959668791062, 0.4675805707458987, 6393.2334)
('Test: AUC, AUPR, Erros: ', 0.7666423795733375, 0.4550982277355334, 6639.517)
((775, 598), (775, 598), 83761.15, 80484.0)
('Error: ', tensor(49607.1016, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8182142366118748, 0.5755763215484347)
('Val: AUC, AUPR, Erros: ', 0.7748575220382995, 0.4693698214124848, 6442.6123)
('Test: AUC, AUPR, Erros: ', 0.7507002981463252, 0.44668370154306836, 6804.748)
((775, 598), (775, 598), 84441.6, 80484.0)
('Error: ', tensor(48918.0547, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8280250823641246, 0.5874897992212604)
('Val: AUC, AUPR, Erros: ', 0.77662141946703, 0.4617175257973928, 6556.3916)
('Test: AUC, AUPR, Erros: ', 0.7491026689283355, 0.4289542018263244, 7027.7363)
((775, 598), (775, 598), 85093.42, 80484.0)
('Error: ', tensor(48341.3672, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.833429571112733, 0.5959030156726813)
('Val: AUC, AUPR, Erros: ', 0.7659538331358036, 0.43800552078373617, 6870.1816)
('Test: AUC, AUPR, Erros: ', 0.7365499925308825, 0.4114652452697323, 7412.6685)
((775, 598), (775, 598), 83215.39, 80484.0)
('Error: ', tensor(47856.3711, grad_fn=<AddBackward0>))
('Train: AUC, AUPR: ', 0.8374387459551502, 0.6038973985351902)
('Val: AUC, AUPR, Erros: ', 0.7548750540905995, 0.41672959200353277, 7180.946)
('Test: AUC, AUPR, Erros: ', 0.7312695225297541, 0.3942664996021209, 7830.254)
